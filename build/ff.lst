ARM GAS  /tmp/ccktbAOa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mem_cpy,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	mem_cpy:
  25              	.LFB126:
  26              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - FAT file system module  R0.11                 (C)ChaN, 2015
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is a free software that opened under license policy of
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / following conditions.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2015, ChaN, all right reserved.
   8:Middlewares/Third_Party/FatFs/src/ff.c **** /
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  11:Middlewares/Third_Party/FatFs/src/ff.c **** /
  12:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  13:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 26,'06 R0.00  Prototype.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /
  19:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 29,'06 R0.01  First stable version.
  20:Middlewares/Third_Party/FatFs/src/ff.c **** /
  21:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 01,'06 R0.02  Added FAT12 support.
  22:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Removed unbuffered mode.
  23:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a problem on small (<32M) partition.
  24:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /
  26:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 22,'06 R0.03  Added f_rename().
  27:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  28:Middlewares/Third_Party/FatFs/src/ff.c **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  29:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  30:Middlewares/Third_Party/FatFs/src/ff.c **** /
  31:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 04,'07 R0.04  Supported multiple drive system.
  32:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some interfaces for multiple drive system.
ARM GAS  /tmp/ccktbAOa.s 			page 2


  33:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_mountdrv() to f_mount().
  34:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_mkfs().
  35:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a capability of extending file size to f_lseek().
  37:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added minimization level 3.
  38:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed an endian sensitive code in f_mkfs().
  39:Middlewares/Third_Party/FatFs/src/ff.c **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  40:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added FSINFO support.
  41:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  42:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed short seek (<= csize) collapses the file object.
  43:Middlewares/Third_Party/FatFs/src/ff.c **** /
  44:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  45:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSINFO.
  46:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  47:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  48:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed off by one error at FAT sub-type determination.
  49:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed btr in f_read() can be mistruncated.
  50:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed cached sector is not flushed when create and close without write.
  51:Middlewares/Third_Party/FatFs/src/ff.c **** /
  52:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  53:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  54:Middlewares/Third_Party/FatFs/src/ff.c **** /
  55:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  56:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added long file name feature.
  57:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple code page feature.
  58:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added re-entrancy for multitask operation.
  59:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added auto cluster size selection to f_mkfs().
  60:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added rewind option to f_readdir().
  61:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed result code of critical errors.
  62:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Renamed string functions to avoid name collision.
  63:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  64:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple sector size feature.
  65:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  66:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed wrong cache control in f_lseek().
  67:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added relative path feature.
  68:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_chdir() and f_chdrive().
  69:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added proper case conversion to extended character.
  70:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  71:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() fails to remove a sub-directory on _FS_RPATH.
  72:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed name matching error on the 13 character boundary.
  73:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option, _LFN_UNICODE.
  74:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  75:Middlewares/Third_Party/FatFs/src/ff.c **** /
  76:Middlewares/Third_Party/FatFs/src/ff.c **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  77:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added file lock feature. (_FS_SHARE)
  78:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added fast seek feature. (_USE_FASTSEEK)
  79:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some types on the API, XCHAR->TCHAR.
  80:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed .fname in the FILINFO structure on Unicode cfg.
  81:Middlewares/Third_Party/FatFs/src/ff.c **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  82:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 16,'10 R0.08a Added f_getcwd().
  83:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added sector erase feature. (_USE_ERASE)
  84:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Moved file lock semaphore table from fs object to the bss.
  85:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  86:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  87:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  88:Middlewares/Third_Party/FatFs/src/ff.c **** /                   f_lseek() reports required table size on creating CLMP.
  89:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Extended format syntax of f_printf().
ARM GAS  /tmp/ccktbAOa.s 			page 3


  90:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Ignores duplicated directory separators in given path name.
  91:Middlewares/Third_Party/FatFs/src/ff.c **** /
  92:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to complete the multiple partition feature
  93:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_fdisk().
  94:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 27,'12 R0.09a Changed f_open() and f_opendir() reject null object pointer to avoid crash.
  95:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option name _FS_SHARE to _FS_LOCK.
  96:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed assertion failure due to OS/2 EA on FAT12/16 volume.
  97:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 24,'13 R0.09b Added f_setlabel() and f_getlabel().
  98:Middlewares/Third_Party/FatFs/src/ff.c **** /
  99:Middlewares/Third_Party/FatFs/src/ff.c **** / Oct 02,'13 R0.10  Added selection of character encoding on the file. (_STRF_ENCODE)
 100:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_closedir().
 101:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced full FAT scan for f_getfree(). (_FS_NOFSINFO)
 102:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced mount feature with changes of f_mount().
 103:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved behavior of volume auto detection.
 104:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved write throughput of f_puts() and f_printf().
 105:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed argument of f_chdrive(), f_mkfs(), disk_read() and disk_write().
 106:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_write() can be truncated when the file size is close to 4GB.
 107:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_open(), f_mkdir() and f_setlabel() can return incorrect error code.
 108:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'14 R0.10a Added arbitrary strings as drive number in the path name. (_STR_VOLUME_ID)
 109:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option of minimum sector size. (_MIN_SS)
 110:Middlewares/Third_Party/FatFs/src/ff.c **** /                   2nd argument of f_rename() can have a drive number and it will be ignored.
 111:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mount() with forced mount fails when drive number is >= 1.
 112:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_close() invalidates the file object without volume lock.
 113:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_closedir() returns but the volume lock is left acquired.
 114:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed creation of an entry with LFN fails on too many SFN collisions.
 115:Middlewares/Third_Party/FatFs/src/ff.c **** / May 19,'14 R0.10b Fixed a hard error in the disk I/O layer can collapse the directory entry.
 116:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed LFN entry is not deleted on delete/rename an object with lossy converted 
 117:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov  9,'14 R0.10c Added a configuration option for the platforms without RTC. (_FS_NORTC)
 118:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed volume label created by Mac OS X cannot be retrieved with f_getlabel(). (
 119:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a potential problem of FAT access that can appear on disk error.
 120:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed null pointer dereference on attempting to delete the root direcotry. (app
 121:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 02,'15 R0.11  Added f_findfirst() and f_findnext(). (_USE_FIND)
 122:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() does not remove cluster chain of the file. (appeared at R0.10c
 123:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed _FS_NORTC option does not work properly. (appeared at R0.10c)
 124:Middlewares/Third_Party/FatFs/src/ff.c **** /---------------------------------------------------------------------------*/
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 
 126:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
 127:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of disk I/O functions */
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 130:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 131:Middlewares/Third_Party/FatFs/src/ff.c **** 
 132:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 134:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 
 136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 32020	/* Revision ID */
 137:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
 138:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** 
 141:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 144:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 146:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
ARM GAS  /tmp/ccktbAOa.s 			page 4


 147:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 148:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 149:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 150:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 152:Middlewares/Third_Party/FatFs/src/ff.c **** 
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 
 156:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 157:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 158:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 159:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 160:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 161:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 
 167:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp feature */
 168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 169:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 170:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 171:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 172:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 178:Middlewares/Third_Party/FatFs/src/ff.c **** /* File access control feature */
 179:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 180:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 181:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 182:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 183:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 184:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, directory (0:root) */
 186:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD idx;		/* Object ID 3, directory index */
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 188:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 189:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 
 193:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS extend character conversion table */
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 198:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 199:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 200:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 201:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 202:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 203:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
ARM GAS  /tmp/ccktbAOa.s 			page 5


 204:Middlewares/Third_Party/FatFs/src/ff.c **** 
 205:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 206:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 209:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 210:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
 211:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 213:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
 214:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 215:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 216:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
 220:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
 221:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 
 223:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 224:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 225:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 226:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 227:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 230:Middlewares/Third_Party/FatFs/src/ff.c **** 
 231:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 232:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 233:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 
 238:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 241:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 
 245:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 246:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 247:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 250:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 253:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 254:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 259:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 260:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
ARM GAS  /tmp/ccktbAOa.s 			page 6


 261:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 262:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 263:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 264:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 265:Middlewares/Third_Party/FatFs/src/ff.c **** 
 266:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 270:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 276:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 278:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 283:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 284:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 286:Middlewares/Third_Party/FatFs/src/ff.c **** 
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 290:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 292:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 297:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 300:Middlewares/Third_Party/FatFs/src/ff.c **** 
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 306:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 310:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 312:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 313:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 314:Middlewares/Third_Party/FatFs/src/ff.c **** 
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
ARM GAS  /tmp/ccktbAOa.s 			page 7


 318:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 319:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 320:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 321:Middlewares/Third_Party/FatFs/src/ff.c **** 
 322:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 323:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 324:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 325:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 326:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 327:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 331:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 333:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 334:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 339:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 340:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 341:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 346:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 347:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 348:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 349:Middlewares/Third_Party/FatFs/src/ff.c **** 
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 353:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 354:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 355:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 360:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 361:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 362:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 363:Middlewares/Third_Party/FatFs/src/ff.c **** 
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 367:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 368:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 369:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 374:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
ARM GAS  /tmp/ccktbAOa.s 			page 8


 375:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 376:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 377:Middlewares/Third_Party/FatFs/src/ff.c **** 
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot use LFN feature without valid code page.
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 383:Middlewares/Third_Party/FatFs/src/ff.c **** 
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 386:Middlewares/Third_Party/FatFs/src/ff.c **** 
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 388:Middlewares/Third_Party/FatFs/src/ff.c **** 
 389:Middlewares/Third_Party/FatFs/src/ff.c **** 
 390:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 392:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 394:Middlewares/Third_Party/FatFs/src/ff.c **** 
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S		/* Code page is DBCS */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** 
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 402:Middlewares/Third_Party/FatFs/src/ff.c **** 
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 408:Middlewares/Third_Party/FatFs/src/ff.c **** 
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** 
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 413:Middlewares/Third_Party/FatFs/src/ff.c **** 
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** 
 416:Middlewares/Third_Party/FatFs/src/ff.c **** 
 417:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of name status byte in fn[] */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** 
 426:Middlewares/Third_Party/FatFs/src/ff.c **** 
 427:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT sub-type boundaries (Differ from specs but correct for real DOS/Windows) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define MIN_FAT16	4086U	/* Minimum number of clusters as FAT16 */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MIN_FAT32	65526U	/* Minimum number of clusters as FAT32 */
 430:Middlewares/Third_Party/FatFs/src/ff.c **** 
 431:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 9


 432:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the members in the FAT structures as byte array instead of
 433:Middlewares/Third_Party/FatFs/src/ff.c **** / structure member because the structure is not binary compatible between
 434:Middlewares/Third_Party/FatFs/src/ff.c **** / different platforms */
 435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_jmpBoot			0		/* x86 jump instruction (3) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (2) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (1) */
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (2) */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FAT copies (1) */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Number of root directory entries for FAT12/16 (2) */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size [sector] (2) */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor (1) */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size [sector] (2) */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size [sector] (2) */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads (2) */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Number of special hidden sectors (4) */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size [sector] (4) */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number (2) */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (1) */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (4) */
 453:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label (8) */
 454:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type (1) */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT size [sector] (4) */
 456:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags		40		/* Extended flags (2) */
 457:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer			42		/* File system version (2) */
 458:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus		44		/* Root directory first cluster (4) */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo			48		/* Offset of FSINFO sector (2) */
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec		50		/* Offset of backup boot sector (2) */
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* Physical drive number (2) */
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* Extended boot signature (1) */
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* Volume serial number (4) */
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* Volume label (8) */
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* File system type (1) */
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FSI: Leading signature (4) */
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FSI: Structure signature (4) */
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FSI: Number of free clusters (4) */
 469:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FSI: Last allocated cluster (4) */
 470:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Partition table offset (2) */
 471:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (2) */
 473:Middlewares/Third_Party/FatFs/src/ff.c **** 
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11) */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (1) */
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (1) */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTimeTenth	13		/* Created time sub-second (1) */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (2) */
 479:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtDate			16		/* Created date (2) */
 480:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (2) */
 481:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (2) */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtTime			22		/* Modified time (2) */
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtDate			24		/* Modified date (2) */
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (2) */
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (4) */
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN entry order and LLE flag (1) */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN attribute (1) */
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN type (1) */
ARM GAS  /tmp/ccktbAOa.s 			page 10


 489:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* Sum of corresponding SFN entry */
 490:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* Must be zero (0) */
 491:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_DIRE				32		/* Size of a directory entry */
 492:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark at DIR_Name[0] */
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 495:Middlewares/Third_Party/FatFs/src/ff.c **** 
 496:Middlewares/Third_Party/FatFs/src/ff.c **** 
 497:Middlewares/Third_Party/FatFs/src/ff.c **** 
 498:Middlewares/Third_Party/FatFs/src/ff.c **** 
 499:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 500:Middlewares/Third_Party/FatFs/src/ff.c **** /* Module private work area                                   */
 501:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 502:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Uninitialized variables with static duration are
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /  guaranteed zero/null at start-up. If not, either the linker
 504:Middlewares/Third_Party/FatFs/src/ff.c **** /  or start-up routine being used is out of ANSI-C standard.
 505:Middlewares/Third_Party/FatFs/src/ff.c **** */
 506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 9
 508:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 509:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 510:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 
 513:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
 514:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 515:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 518:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 519:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 521:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0			/* Non LFN feature */
 522:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 523:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 524:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 525:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 526:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 527:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN setting
 528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 529:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1			/* LFN feature with static working buffer */
 530:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 533:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 534:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR lbuf[_MAX_LFN + 1]
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 537:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 539:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR *lfn
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); if (!lfn) LEAVE_FF((dobj).fs, FR_N
 541:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()			ff_memfree(lfn)
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 543:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccktbAOa.s 			page 11


 546:Middlewares/Third_Party/FatFs/src/ff.c **** 
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 548:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for extended characters */
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 550:Middlewares/Third_Party/FatFs/src/ff.c **** 
 551:Middlewares/Third_Party/FatFs/src/ff.c **** 
 552:Middlewares/Third_Party/FatFs/src/ff.c **** 
 553:Middlewares/Third_Party/FatFs/src/ff.c **** 
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** 
 556:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 557:Middlewares/Third_Party/FatFs/src/ff.c **** 
 558:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 559:Middlewares/Third_Party/FatFs/src/ff.c **** 
 560:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 561:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (FATFS* fs, DWORD clst);
 562:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (FATFS* fs,	DWORD clst);
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 565:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (FATFS* fs,	DWORD clst,	DWORD val);
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 567:Middlewares/Third_Party/FatFs/src/ff.c **** 
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 569:Middlewares/Third_Party/FatFs/src/ff.c **** static void gen_numname (BYTE* dst, const BYTE* src, const WCHAR* lfn, UINT seq);
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_USE_LFN */
 571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 572:Middlewares/Third_Party/FatFs/src/ff.c **** 
 573:Middlewares/Third_Party/FatFs/src/ff.c **** 
 574:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 575:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 577:Middlewares/Third_Party/FatFs/src/ff.c **** 
 578:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 579:Middlewares/Third_Party/FatFs/src/ff.c **** static
 580:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  27              		.loc 1 580 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 581:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 583:Middlewares/Third_Party/FatFs/src/ff.c **** 
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #if _WORD_ACCESS == 1
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt >= sizeof (int)) {
 586:Middlewares/Third_Party/FatFs/src/ff.c **** 		*(int*)d = *(int*)s;
 587:Middlewares/Third_Party/FatFs/src/ff.c **** 		d += sizeof (int); s += sizeof (int);
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 		cnt -= sizeof (int);
 589:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  33              		.loc 1 591 0
  34 0000 3AB1     		cbz	r2, .L1
  35 0002 0138     		subs	r0, r0, #1
  36              	.LVL1:
  37 0004 8A18     		adds	r2, r1, r2
ARM GAS  /tmp/ccktbAOa.s 			page 12


  38              	.LVL2:
  39              	.L3:
 592:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  40              		.loc 1 592 0
  41 0006 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
  42              	.LVL3:
  43 000a 00F8013F 		strb	r3, [r0, #1]!
  44              	.LVL4:
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  45              		.loc 1 591 0
  46 000e 9142     		cmp	r1, r2
  47 0010 F9D1     		bne	.L3
  48              	.LVL5:
  49              	.L1:
  50 0012 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE126:
  54              		.section	.text.mem_set,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	mem_set:
  62              	.LFB127:
 593:Middlewares/Third_Party/FatFs/src/ff.c **** }
 594:Middlewares/Third_Party/FatFs/src/ff.c **** 
 595:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory */
 596:Middlewares/Third_Party/FatFs/src/ff.c **** static
 597:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
  63              		.loc 1 597 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL6:
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  69              		.loc 1 600 0
  70 0000 22B1     		cbz	r2, .L5
  71 0002 8218     		adds	r2, r0, r2
  72              	.LVL7:
  73              	.L7:
 601:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  74              		.loc 1 601 0
  75 0004 00F8011B 		strb	r1, [r0], #1
  76              	.LVL8:
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  77              		.loc 1 600 0
  78 0008 8242     		cmp	r2, r0
  79 000a FBD1     		bne	.L7
  80              	.LVL9:
  81              	.L5:
  82 000c 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE127:
ARM GAS  /tmp/ccktbAOa.s 			page 13


  86              		.section	.text.chk_lock,"ax",%progbits
  87              		.align	1
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	chk_lock:
  94              	.LFB130:
 602:Middlewares/Third_Party/FatFs/src/ff.c **** }
 603:Middlewares/Third_Party/FatFs/src/ff.c **** 
 604:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory to memory */
 605:Middlewares/Third_Party/FatFs/src/ff.c **** static
 606:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 608:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 610:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 612:Middlewares/Third_Party/FatFs/src/ff.c **** }
 613:Middlewares/Third_Party/FatFs/src/ff.c **** 
 614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 615:Middlewares/Third_Party/FatFs/src/ff.c **** static
 616:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 619:Middlewares/Third_Party/FatFs/src/ff.c **** }
 620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** 
 623:Middlewares/Third_Party/FatFs/src/ff.c **** 
 624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 625:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 626:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 627:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 628:Middlewares/Third_Party/FatFs/src/ff.c **** static
 629:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 631:Middlewares/Third_Party/FatFs/src/ff.c **** )
 632:Middlewares/Third_Party/FatFs/src/ff.c **** {
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_req_grant(fs->sobj);
 634:Middlewares/Third_Party/FatFs/src/ff.c **** }
 635:Middlewares/Third_Party/FatFs/src/ff.c **** 
 636:Middlewares/Third_Party/FatFs/src/ff.c **** 
 637:Middlewares/Third_Party/FatFs/src/ff.c **** static
 638:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 641:Middlewares/Third_Party/FatFs/src/ff.c **** )
 642:Middlewares/Third_Party/FatFs/src/ff.c **** {
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_DRIVE &&
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_OBJECT &&
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_TIMEOUT) {
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 649:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 650:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccktbAOa.s 			page 14


 651:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 652:Middlewares/Third_Party/FatFs/src/ff.c **** 
 653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 654:Middlewares/Third_Party/FatFs/src/ff.c **** 
 655:Middlewares/Third_Party/FatFs/src/ff.c **** 
 656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 657:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 658:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 659:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 661:Middlewares/Third_Party/FatFs/src/ff.c **** static
 662:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 665:Middlewares/Third_Party/FatFs/src/ff.c **** )
 666:Middlewares/Third_Party/FatFs/src/ff.c **** {
  95              		.loc 1 666 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              	.LVL10:
 100 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 101              	.LCFI0:
 102              		.cfi_def_cfa_offset 20
 103              		.cfi_offset 4, -20
 104              		.cfi_offset 5, -16
 105              		.cfi_offset 6, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108              	.LVL11:
 109 0002 1A4B     		ldr	r3, .L25
 667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 110              		.loc 1 670 0
 111 0004 0026     		movs	r6, #0
 112 0006 3246     		mov	r2, r6
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->fs &&	 	/* Check if the object matched with an open object */
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 113              		.loc 1 676 0
 114 0008 4FF0010E 		mov	lr, #1
 115              	.LVL12:
 116              	.L12:
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 117              		.loc 1 671 0
 118 000c 1C68     		ldr	r4, [r3]
 119 000e E4B1     		cbz	r4, .L16
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 120              		.loc 1 672 0
 121 0010 D0F80052 		ldr	r5, [r0, #512]
 122 0014 AC42     		cmp	r4, r5
 123 0016 09D0     		beq	.L23
ARM GAS  /tmp/ccktbAOa.s 			page 15


 124              	.L10:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 125              		.loc 1 670 0 discriminator 2
 126 0018 0132     		adds	r2, r2, #1
 127              	.LVL13:
 128 001a 0C33     		adds	r3, r3, #12
 129 001c 022A     		cmp	r2, #2
 130 001e F5D1     		bne	.L12
 131              	.L13:
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK)	/* The object is not opened */
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 132              		.loc 1 680 0
 133 0020 0EBB     		cbnz	r6, .L17
 134              		.loc 1 680 0 is_stmt 0 discriminator 2
 135 0022 0229     		cmp	r1, #2
 136 0024 0CBF     		ite	eq
 137 0026 0020     		moveq	r0, #0
 138              	.LVL14:
 139 0028 1220     		movne	r0, #18
 140 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 141              	.LVL15:
 142              	.L23:
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 143              		.loc 1 672 0 is_stmt 1 discriminator 1
 144 002c 5D68     		ldr	r5, [r3, #4]
 145 002e D0F80842 		ldr	r4, [r0, #520]
 146 0032 A542     		cmp	r5, r4
 147 0034 F0D1     		bne	.L10
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 148              		.loc 1 673 0
 149 0036 1D89     		ldrh	r5, [r3, #8]
 150 0038 B0F80642 		ldrh	r4, [r0, #518]
 151 003c A542     		cmp	r5, r4
 152 003e EBD1     		bne	.L10
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 153              		.loc 1 679 0
 154 0040 022A     		cmp	r2, #2
 155 0042 EDD0     		beq	.L13
 681:Middlewares/Third_Party/FatFs/src/ff.c **** 
 682:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 683:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 156              		.loc 1 683 0
 157 0044 19B1     		cbz	r1, .L24
 158 0046 1020     		movs	r0, #16
 159              	.LVL16:
 684:Middlewares/Third_Party/FatFs/src/ff.c **** }
 160              		.loc 1 684 0
 161 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 162              	.LVL17:
 163              	.L16:
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 164              		.loc 1 676 0
 165 004a 7646     		mov	r6, lr
 166 004c E4E7     		b	.L10
 167              	.L24:
ARM GAS  /tmp/ccktbAOa.s 			page 16


 683:Middlewares/Third_Party/FatFs/src/ff.c **** }
 168              		.loc 1 683 0 discriminator 2
 169 004e 02EB4202 		add	r2, r2, r2, lsl #1
 170              	.LVL18:
 171 0052 064B     		ldr	r3, .L25
 172 0054 03EB8202 		add	r2, r3, r2, lsl #2
 173 0058 5389     		ldrh	r3, [r2, #10]
 174 005a B3F5807F 		cmp	r3, #256
 175 005e 0CBF     		ite	eq
 176 0060 1020     		moveq	r0, #16
 177              	.LVL19:
 178 0062 0020     		movne	r0, #0
 179 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 180              	.LVL20:
 181              	.L17:
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 
 182              		.loc 1 680 0
 183 0066 0020     		movs	r0, #0
 184              	.LVL21:
 185 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 186              	.L26:
 187 006a 00BF     		.align	2
 188              	.L25:
 189 006c 00000000 		.word	.LANCHOR0
 190              		.cfi_endproc
 191              	.LFE130:
 193              		.section	.text.inc_lock,"ax",%progbits
 194              		.align	1
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	inc_lock:
 201              	.LFB132:
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** static
 688:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** {
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 691:Middlewares/Third_Party/FatFs/src/ff.c **** 
 692:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 693:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 694:Middlewares/Third_Party/FatFs/src/ff.c **** }
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** static
 698:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 701:Middlewares/Third_Party/FatFs/src/ff.c **** )
 702:Middlewares/Third_Party/FatFs/src/ff.c **** {
 202              		.loc 1 702 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
ARM GAS  /tmp/ccktbAOa.s 			page 17


 207              	.LVL22:
 208 0000 F0B4     		push	{r4, r5, r6, r7}
 209              	.LCFI1:
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 6, -8
 214              		.cfi_offset 7, -4
 215              	.LVL23:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 704:Middlewares/Third_Party/FatFs/src/ff.c **** 
 705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 216              		.loc 1 707 0
 217 0002 D0F80052 		ldr	r5, [r0, #512]
 218 0006 284A     		ldr	r2, .L46
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 219              		.loc 1 706 0
 220 0008 0023     		movs	r3, #0
 221              	.LVL24:
 222              	.L30:
 223              		.loc 1 707 0
 224 000a 1468     		ldr	r4, [r2]
 225 000c AC42     		cmp	r4, r5
 226 000e 0CD0     		beq	.L43
 227              	.L28:
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 228              		.loc 1 706 0 discriminator 2
 229 0010 0133     		adds	r3, r3, #1
 230              	.LVL25:
 231 0012 0C32     		adds	r2, r2, #12
 232 0014 022B     		cmp	r3, #2
 233 0016 F8D1     		bne	.L30
 234              	.L31:
 235              	.LVL26:
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].idx == dp->index) break;
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 
 712:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 236              		.loc 1 713 0 discriminator 1
 237 0018 234B     		ldr	r3, .L46
 238 001a 1B68     		ldr	r3, [r3]
 239 001c 002B     		cmp	r3, #0
 240 001e 3BD0     		beq	.L37
 241              	.LVL27:
 242              		.loc 1 713 0 is_stmt 0 discriminator 3
 243 0020 214B     		ldr	r3, .L46
 244 0022 DB68     		ldr	r3, [r3, #12]
 245 0024 BBB1     		cbz	r3, .L44
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 246              		.loc 1 714 0 is_stmt 1
 247 0026 0020     		movs	r0, #0
 248              	.LVL28:
 249 0028 34E0     		b	.L27
ARM GAS  /tmp/ccktbAOa.s 			page 18


 250              	.LVL29:
 251              	.L43:
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 252              		.loc 1 707 0 discriminator 1
 253 002a 5768     		ldr	r7, [r2, #4]
 254 002c D0F80842 		ldr	r4, [r0, #520]
 255 0030 A742     		cmp	r7, r4
 256 0032 EDD1     		bne	.L28
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 257              		.loc 1 708 0
 258 0034 1689     		ldrh	r6, [r2, #8]
 259 0036 B0F80642 		ldrh	r4, [r0, #518]
 260 003a A642     		cmp	r6, r4
 261 003c E8D1     		bne	.L28
 712:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 262              		.loc 1 712 0
 263 003e 022B     		cmp	r3, #2
 264 0040 EAD0     		beq	.L31
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 265              		.loc 1 721 0
 266 0042 C1B1     		cbz	r1, .L36
 267              		.loc 1 721 0 is_stmt 0 discriminator 1
 268 0044 03EB4302 		add	r2, r3, r3, lsl #1
 269 0048 1749     		ldr	r1, .L46
 270              	.LVL30:
 271 004a 01EB8202 		add	r2, r1, r2, lsl #2
 272 004e 5289     		ldrh	r2, [r2, #10]
 273 0050 22B3     		cbz	r2, .L45
 274              		.loc 1 721 0
 275 0052 0020     		movs	r0, #0
 276              	.LVL31:
 277 0054 1EE0     		b	.L27
 278              	.LVL32:
 279              	.L44:
 280 0056 0123     		movs	r3, #1
 281              	.LVL33:
 282              	.L33:
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 283              		.loc 1 715 0 is_stmt 1
 284 0058 134E     		ldr	r6, .L46
 285 005a 03EB4302 		add	r2, r3, r3, lsl #1
 286 005e 9200     		lsls	r2, r2, #2
 287 0060 B418     		adds	r4, r6, r2
 288 0062 B550     		str	r5, [r6, r2]
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 289              		.loc 1 716 0
 290 0064 D0F80822 		ldr	r2, [r0, #520]
 291 0068 6260     		str	r2, [r4, #4]
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 292              		.loc 1 717 0
 293 006a B0F80622 		ldrh	r2, [r0, #518]
ARM GAS  /tmp/ccktbAOa.s 			page 19


 294 006e 2281     		strh	r2, [r4, #8]	@ movhi
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 295              		.loc 1 718 0
 296 0070 0022     		movs	r2, #0
 297 0072 6281     		strh	r2, [r4, #10]	@ movhi
 298              	.LVL34:
 299              		.loc 1 721 0
 300 0074 A9B9     		cbnz	r1, .L39
 301              	.L36:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 302              		.loc 1 723 0 discriminator 1
 303 0076 03EB4302 		add	r2, r3, r3, lsl #1
 304 007a 0B49     		ldr	r1, .L46
 305              	.LVL35:
 306 007c 01EB8202 		add	r2, r1, r2, lsl #2
 307 0080 5189     		ldrh	r1, [r2, #10]
 308 0082 0131     		adds	r1, r1, #1
 309 0084 89B2     		uxth	r1, r1
 310              	.L35:
 311              		.loc 1 723 0 is_stmt 0 discriminator 4
 312 0086 03EB4300 		add	r0, r3, r3, lsl #1
 313              	.LVL36:
 314 008a 074A     		ldr	r2, .L46
 315 008c 02EB8002 		add	r2, r2, r0, lsl #2
 316 0090 5181     		strh	r1, [r2, #10]	@ movhi
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 
 725:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 317              		.loc 1 725 0 is_stmt 1 discriminator 4
 318 0092 581C     		adds	r0, r3, #1
 319              	.LVL37:
 320              	.L27:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** }
 321              		.loc 1 726 0
 322 0094 F0BC     		pop	{r4, r5, r6, r7}
 323              	.LCFI2:
 324              		.cfi_remember_state
 325              		.cfi_restore 7
 326              		.cfi_restore 6
 327              		.cfi_restore 5
 328              		.cfi_restore 4
 329              		.cfi_def_cfa_offset 0
 330 0096 7047     		bx	lr
 331              	.LVL38:
 332              	.L37:
 333              	.LCFI3:
 334              		.cfi_restore_state
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 335              		.loc 1 713 0
 336 0098 0023     		movs	r3, #0
 337 009a DDE7     		b	.L33
 338              	.LVL39:
 339              	.L45:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 340              		.loc 1 723 0
 341 009c 4FF48071 		mov	r1, #256
 342 00a0 F1E7     		b	.L35
ARM GAS  /tmp/ccktbAOa.s 			page 20


 343              	.LVL40:
 344              	.L39:
 345 00a2 4FF48071 		mov	r1, #256
 346              	.LVL41:
 347 00a6 EEE7     		b	.L35
 348              	.L47:
 349              		.align	2
 350              	.L46:
 351 00a8 00000000 		.word	.LANCHOR0
 352              		.cfi_endproc
 353              	.LFE132:
 355              		.section	.text.dec_lock,"ax",%progbits
 356              		.align	1
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	dec_lock:
 363              	.LFB133:
 727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 728:Middlewares/Third_Party/FatFs/src/ff.c **** 
 729:Middlewares/Third_Party/FatFs/src/ff.c **** static
 730:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
 732:Middlewares/Third_Party/FatFs/src/ff.c **** )
 733:Middlewares/Third_Party/FatFs/src/ff.c **** {
 364              		.loc 1 733 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.LVL42:
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** 
 738:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 370              		.loc 1 738 0
 371 0000 0138     		subs	r0, r0, #1
 372              	.LVL43:
 373 0002 0128     		cmp	r0, #1
 374 0004 01D9     		bls	.L55
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 375              		.loc 1 746 0
 376 0006 0220     		movs	r0, #2
 377              	.LVL44:
 378 0008 7047     		bx	lr
 379              	.LVL45:
 380              	.L55:
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
ARM GAS  /tmp/ccktbAOa.s 			page 21


 381              		.loc 1 739 0
 382 000a 00EB4003 		add	r3, r0, r0, lsl #1
 383 000e 104A     		ldr	r2, .L56
 384 0010 02EB8303 		add	r3, r2, r3, lsl #2
 385 0014 5B89     		ldrh	r3, [r3, #10]
 386              	.LVL46:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 387              		.loc 1 740 0
 388 0016 B3F5807F 		cmp	r3, #256
 389 001a 0BD0     		beq	.L50
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 390              		.loc 1 741 0
 391 001c 8BB1     		cbz	r3, .L51
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 392              		.loc 1 741 0 is_stmt 0 discriminator 1
 393 001e 013B     		subs	r3, r3, #1
 394              	.LVL47:
 395 0020 9BB2     		uxth	r3, r3
 396              	.LVL48:
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 397              		.loc 1 742 0 is_stmt 1 discriminator 1
 398 0022 00EB4002 		add	r2, r0, r0, lsl #1
 399 0026 0A49     		ldr	r1, .L56
 400 0028 01EB8202 		add	r2, r1, r2, lsl #2
 401 002c 5381     		strh	r3, [r2, #10]	@ movhi
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 402              		.loc 1 743 0 discriminator 1
 403 002e 43B1     		cbz	r3, .L51
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 404              		.loc 1 744 0
 405 0030 0020     		movs	r0, #0
 406              	.LVL49:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 407              		.loc 1 748 0
 408 0032 7047     		bx	lr
 409              	.LVL50:
 410              	.L50:
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 411              		.loc 1 742 0
 412 0034 00EB4003 		add	r3, r0, r0, lsl #1
 413 0038 054A     		ldr	r2, .L56
 414 003a 02EB8303 		add	r3, r2, r3, lsl #2
 415 003e 0022     		movs	r2, #0
 416 0040 5A81     		strh	r2, [r3, #10]	@ movhi
 417              	.LVL51:
 418              	.L51:
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 419              		.loc 1 743 0 discriminator 1
 420 0042 00EB4000 		add	r0, r0, r0, lsl #1
 421              	.LVL52:
 422 0046 8300     		lsls	r3, r0, #2
 423 0048 0020     		movs	r0, #0
 424 004a 014A     		ldr	r2, .L56
 425 004c D050     		str	r0, [r2, r3]
 426 004e 7047     		bx	lr
 427              	.L57:
ARM GAS  /tmp/ccktbAOa.s 			page 22


 428              		.align	2
 429              	.L56:
 430 0050 00000000 		.word	.LANCHOR0
 431              		.cfi_endproc
 432              	.LFE133:
 434              		.section	.text.clmt_clust,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	clmt_clust:
 442              	.LFB143:
 749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 750:Middlewares/Third_Party/FatFs/src/ff.c **** 
 751:Middlewares/Third_Party/FatFs/src/ff.c **** 
 752:Middlewares/Third_Party/FatFs/src/ff.c **** static
 753:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 755:Middlewares/Third_Party/FatFs/src/ff.c **** )
 756:Middlewares/Third_Party/FatFs/src/ff.c **** {
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 762:Middlewares/Third_Party/FatFs/src/ff.c **** }
 763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** 
 766:Middlewares/Third_Party/FatFs/src/ff.c **** 
 767:Middlewares/Third_Party/FatFs/src/ff.c **** 
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 771:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 772:Middlewares/Third_Party/FatFs/src/ff.c **** static
 773:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (
 774:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 775:Middlewares/Third_Party/FatFs/src/ff.c **** )
 776:Middlewares/Third_Party/FatFs/src/ff.c **** {
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
ARM GAS  /tmp/ccktbAOa.s 			page 23


 793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 794:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 797:Middlewares/Third_Party/FatFs/src/ff.c **** }
 798:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 801:Middlewares/Third_Party/FatFs/src/ff.c **** static
 802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 804:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector	/* Sector number to make appearance in the fs->win[].d8 */
 805:Middlewares/Third_Party/FatFs/src/ff.c **** )
 806:Middlewares/Third_Party/FatFs/src/ff.c **** {
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 808:Middlewares/Third_Party/FatFs/src/ff.c **** 
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 812:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 823:Middlewares/Third_Party/FatFs/src/ff.c **** }
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 
 828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 829:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 830:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 831:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 832:Middlewares/Third_Party/FatFs/src/ff.c **** static
 833:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK: successful, FR_DISK_ERR: failed */
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 835:Middlewares/Third_Party/FatFs/src/ff.c **** )
 836:Middlewares/Third_Party/FatFs/src/ff.c **** {
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** 
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 842:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
ARM GAS  /tmp/ccktbAOa.s 			page 24


 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
 861:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 862:Middlewares/Third_Party/FatFs/src/ff.c **** }
 863:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 
 865:Middlewares/Third_Party/FatFs/src/ff.c **** 
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 
 868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 871:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 872:Middlewares/Third_Party/FatFs/src/ff.c **** 
 873:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 874:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 876:Middlewares/Third_Party/FatFs/src/ff.c **** )
 877:Middlewares/Third_Party/FatFs/src/ff.c **** {
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 881:Middlewares/Third_Party/FatFs/src/ff.c **** }
 882:Middlewares/Third_Party/FatFs/src/ff.c **** 
 883:Middlewares/Third_Party/FatFs/src/ff.c **** 
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 
 885:Middlewares/Third_Party/FatFs/src/ff.c **** 
 886:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 887:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 888:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 889:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x0FFFFFFF:Cluster status */
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* FAT index number (cluster number) to get the value */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** )
 895:Middlewares/Third_Party/FatFs/src/ff.c **** {
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 25


 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 908:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 915:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 
 923:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
 935:Middlewares/Third_Party/FatFs/src/ff.c **** }
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** 
 939:Middlewares/Third_Party/FatFs/src/ff.c **** 
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
 942:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 943:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 944:Middlewares/Third_Party/FatFs/src/ff.c **** 
 945:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 946:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* FAT index number (cluster number) to be changed */
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val	/* New value to be set to the entry */
 950:Middlewares/Third_Party/FatFs/src/ff.c **** )
 951:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
ARM GAS  /tmp/ccktbAOa.s 			page 26


 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 		default :
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INT_ERR;
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 996:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 997:Middlewares/Third_Party/FatFs/src/ff.c **** 
 998:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 999:Middlewares/Third_Party/FatFs/src/ff.c **** }
1000:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1001:Middlewares/Third_Party/FatFs/src/ff.c **** 
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 
1004:Middlewares/Third_Party/FatFs/src/ff.c **** 
1005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1006:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1007:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1009:Middlewares/Third_Party/FatFs/src/ff.c **** static
1010:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to remove a chain from */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** )
1014:Middlewares/Third_Party/FatFs/src/ff.c **** {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1017:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst, rt[2];
1019:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 27


1021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1037:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				ecl = nxt;
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* End of contiguous clusters */ 
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[0] = clust2sect(fs, scl);					/* Start sector */
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Erase the block */
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = ecl = nxt;
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = nxt;	/* Next cluster */
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1052:Middlewares/Third_Party/FatFs/src/ff.c **** }
1053:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 
1058:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1059:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch or Create a cluster chain                      */
1060:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1061:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1062:Middlewares/Third_Party/FatFs/src/ff.c **** static
1063:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** )
1067:Middlewares/Third_Party/FatFs/src/ff.c **** {
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {		/* Create a new chain */
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
1075:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1076:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {					/* Stretch the current chain */
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
ARM GAS  /tmp/ccktbAOa.s 			page 28


1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	ncl = scl;				/* Start cluster */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl++;							/* Next cluster */
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error code */
1113:Middlewares/Third_Party/FatFs/src/ff.c **** }
1114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** 
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 
1117:Middlewares/Third_Party/FatFs/src/ff.c **** 
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 
1119:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1120:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1121:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 
1123:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1124:Middlewares/Third_Party/FatFs/src/ff.c **** static
1125:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File offset to be converted to cluster# */
1128:Middlewares/Third_Party/FatFs/src/ff.c **** )
1129:Middlewares/Third_Party/FatFs/src/ff.c **** {
 443              		.loc 1 1129 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
ARM GAS  /tmp/ccktbAOa.s 			page 29


 448              	.LVL53:
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1131:Middlewares/Third_Party/FatFs/src/ff.c **** 
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 449              		.loc 1 1133 0
 450 0000 D0F82422 		ldr	r2, [r0, #548]
 451 0004 131D     		adds	r3, r2, #4
 452              	.LVL54:
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
 453              		.loc 1 1134 0
 454 0006 490A     		lsrs	r1, r1, #9
 455              	.LVL55:
 456 0008 D0F80002 		ldr	r0, [r0, #512]
 457              	.LVL56:
 458 000c 90F80202 		ldrb	r0, [r0, #514]	@ zero_extendqisi2
 459 0010 B1FBF0F1 		udiv	r1, r1, r0
 460              	.LVL57:
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 461              		.loc 1 1136 0
 462 0014 5068     		ldr	r0, [r2, #4]
 463              	.LVL58:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 464              		.loc 1 1137 0
 465 0016 48B1     		cbz	r0, .L58
1138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 466              		.loc 1 1138 0
 467 0018 8142     		cmp	r1, r0
 468 001a 05D3     		bcc	.L60
 469              	.LVL59:
 470              	.L61:
1139:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 471              		.loc 1 1139 0
 472 001c 091A     		subs	r1, r1, r0
 473              	.LVL60:
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 474              		.loc 1 1136 0
 475 001e 53F8080F 		ldr	r0, [r3, #8]!
 476              	.LVL61:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 477              		.loc 1 1137 0
 478 0022 20B1     		cbz	r0, .L64
1138:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 479              		.loc 1 1138 0
 480 0024 8842     		cmp	r0, r1
 481 0026 F9D9     		bls	.L61
 482              	.LVL62:
 483              	.L60:
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1141:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 484              		.loc 1 1141 0
 485 0028 5868     		ldr	r0, [r3, #4]
 486              	.LVL63:
 487 002a 0844     		add	r0, r0, r1
 488              	.L58:
1142:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccktbAOa.s 			page 30


 489              		.loc 1 1142 0
 490 002c 7047     		bx	lr
 491              	.LVL64:
 492              	.L64:
 493 002e 7047     		bx	lr
 494              		.cfi_endproc
 495              	.LFE143:
 497              		.section	.text.ld_clust,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv4-sp-d16
 504              	ld_clust:
 505              	.LFB147:
1143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** 
1146:Middlewares/Third_Party/FatFs/src/ff.c **** 
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 
1148:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1149:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
1150:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1151:Middlewares/Third_Party/FatFs/src/ff.c **** 
1152:Middlewares/Third_Party/FatFs/src/ff.c **** static
1153:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT idx		/* Index of directory table */
1156:Middlewares/Third_Party/FatFs/src/ff.c **** )
1157:Middlewares/Third_Party/FatFs/src/ff.c **** {
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ic;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)idx;	/* Current index */
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Dynamic table (root-directory in FAT32 or sub-directory) */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		ic = SS(dp->fs) / SZ_DIRE * dp->fs->csize;	/* Entries per cluster */
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
1182:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(dp->fs, clst);
1184:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccktbAOa.s 			page 31


1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;	/* Current cluster# */
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1191:Middlewares/Third_Party/FatFs/src/ff.c **** }
1192:Middlewares/Third_Party/FatFs/src/ff.c **** 
1193:Middlewares/Third_Party/FatFs/src/ff.c **** 
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 
1196:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1197:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1198:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** static
1201:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1204:Middlewares/Third_Party/FatFs/src/ff.c **** )
1205:Middlewares/Third_Party/FatFs/src/ff.c **** {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
1207:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1208:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT c;
1210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index + 1;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i % (SS(dp->fs) / SZ_DIRE))) {	/* Sector changed? */
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
1219:Middlewares/Third_Party/FatFs/src/ff.c **** 
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
1223:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (((i / (SS(dp->fs) / SZ_DIRE)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
1230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
ARM GAS  /tmp/ccktbAOa.s 			page 32


1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1245:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect -= c;						/* Rewind window offset */
1246:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warni
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_NO_FILE;							/* Report EOT */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1250:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;				/* Initialize data for new cluster */
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)i;	/* Current index */
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 
1260:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1261:Middlewares/Third_Party/FatFs/src/ff.c **** }
1262:Middlewares/Third_Party/FatFs/src/ff.c **** 
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve directory entry                          */
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1269:Middlewares/Third_Party/FatFs/src/ff.c **** 
1270:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1271:Middlewares/Third_Party/FatFs/src/ff.c **** static
1272:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Pointer to the directory object */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent	/* Number of contiguous entries to allocate (1-21) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 
1280:Middlewares/Third_Party/FatFs/src/ff.c **** 
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1283:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1297:Middlewares/Third_Party/FatFs/src/ff.c **** }
1298:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/ccktbAOa.s 			page 33


1299:Middlewares/Third_Party/FatFs/src/ff.c **** 
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 
1303:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1304:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Load/Store start cluster number                  */
1305:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 
1307:Middlewares/Third_Party/FatFs/src/ff.c **** static
1308:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (
1309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir	/* Pointer to the directory entry */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** )
1312:Middlewares/Third_Party/FatFs/src/ff.c **** {
 506              		.loc 1 1312 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL65:
1313:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 
1315:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = LD_WORD(dir + DIR_FstClusLO);
 512              		.loc 1 1315 0
 513 0000 CA7E     		ldrb	r2, [r1, #27]	@ zero_extendqisi2
 514 0002 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 515 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 516              	.LVL66:
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32)
 517              		.loc 1 1316 0
 518 0008 90F80022 		ldrb	r2, [r0, #512]	@ zero_extendqisi2
 519 000c 032A     		cmp	r2, #3
 520 000e 01D0     		beq	.L67
 521              	.LVL67:
 522              	.L65:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
1318:Middlewares/Third_Party/FatFs/src/ff.c **** 
1319:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1320:Middlewares/Third_Party/FatFs/src/ff.c **** }
 523              		.loc 1 1320 0
 524 0010 1846     		mov	r0, r3
 525 0012 7047     		bx	lr
 526              	.LVL68:
 527              	.L67:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
 528              		.loc 1 1317 0
 529 0014 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 530              	.LVL69:
 531 0016 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 532 0018 42EA0022 		orr	r2, r2, r0, lsl #8
 533 001c 43EA0243 		orr	r3, r3, r2, lsl #16
 534              	.LVL70:
1319:Middlewares/Third_Party/FatFs/src/ff.c **** }
 535              		.loc 1 1319 0
 536 0020 F6E7     		b	.L65
 537              		.cfi_endproc
 538              	.LFE147:
ARM GAS  /tmp/ccktbAOa.s 			page 34


 540              		.section	.text.get_fileinfo,"ax",%progbits
 541              		.align	1
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv4-sp-d16
 547              	get_fileinfo:
 548              	.LFB153:
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1324:Middlewares/Third_Party/FatFs/src/ff.c **** static
1325:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1326:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the directory entry */
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** )
1329:Middlewares/Third_Party/FatFs/src/ff.c **** {
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusLO, cl);
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
1332:Middlewares/Third_Party/FatFs/src/ff.c **** }
1333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 
1338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1339:Middlewares/Third_Party/FatFs/src/ff.c **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1341:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1342:Middlewares/Third_Party/FatFs/src/ff.c **** static
1343:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** static
1347:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1348:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN to be compared */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry containing a part of LFN */
1350:Middlewares/Third_Party/FatFs/src/ff.c **** )
1351:Middlewares/Third_Party/FatFs/src/ff.c **** {
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1354:Middlewares/Third_Party/FatFs/src/ff.c **** 
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Get offset in the LFN buffer */
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);	/* Pick an LFN character from the entry */
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1365:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i])	/* Last segment matched but different length */
ARM GAS  /tmp/ccktbAOa.s 			page 35


1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;						/* The part of LFN matched */
1373:Middlewares/Third_Party/FatFs/src/ff.c **** }
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 
1377:Middlewares/Third_Party/FatFs/src/ff.c **** static
1378:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** )
1382:Middlewares/Third_Party/FatFs/src/ff.c **** {
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);		/* Pick an LFN character from the entry */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1398:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);						/* Read all character in the entry */
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
1406:Middlewares/Third_Party/FatFs/src/ff.c **** }
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 
1409:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1410:Middlewares/Third_Party/FatFs/src/ff.c **** static
1411:Middlewares/Third_Party/FatFs/src/ff.c **** void fit_lfn (
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN buffer */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,				/* Pointer to the directory entry */
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,				/* LFN order (1-20) */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum				/* SFN sum */
1416:Middlewares/Third_Party/FatFs/src/ff.c **** )
1417:Middlewares/Third_Party/FatFs/src/ff.c **** {
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 
1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + LDIR_FstClusLO, 0);
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 36


1427:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1429:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1434:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLEF;	/* Bottom LFN part is the start of LFN sequence */
1435:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1436:Middlewares/Third_Party/FatFs/src/ff.c **** }
1437:Middlewares/Third_Party/FatFs/src/ff.c **** 
1438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1439:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1440:Middlewares/Third_Party/FatFs/src/ff.c **** 
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 
1443:Middlewares/Third_Party/FatFs/src/ff.c **** 
1444:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1445:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create numbered name                                                  */
1446:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1447:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1448:Middlewares/Third_Party/FatFs/src/ff.c **** static
1449:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1454:Middlewares/Third_Party/FatFs/src/ff.c **** )
1455:Middlewares/Third_Party/FatFs/src/ff.c **** {
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1458:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1460:Middlewares/Third_Party/FatFs/src/ff.c **** 
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1465:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1466:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1469:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1470:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1473:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (seq % 16) + '0';
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
ARM GAS  /tmp/ccktbAOa.s 			page 37


1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1497:Middlewares/Third_Party/FatFs/src/ff.c **** }
1498:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 
1503:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1504:Middlewares/Third_Party/FatFs/src/ff.c **** /* Calculate sum of an SFN                                               */
1505:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1506:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1507:Middlewares/Third_Party/FatFs/src/ff.c **** static
1508:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1510:Middlewares/Third_Party/FatFs/src/ff.c **** )
1511:Middlewares/Third_Party/FatFs/src/ff.c **** {
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1514:Middlewares/Third_Party/FatFs/src/ff.c **** 
1515:Middlewares/Third_Party/FatFs/src/ff.c **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1516:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1517:Middlewares/Third_Party/FatFs/src/ff.c **** }
1518:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1519:Middlewares/Third_Party/FatFs/src/ff.c **** 
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 
1522:Middlewares/Third_Party/FatFs/src/ff.c **** 
1523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1524:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
1525:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1526:Middlewares/Third_Party/FatFs/src/ff.c **** 
1527:Middlewares/Third_Party/FatFs/src/ff.c **** static
1528:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object linked to the file name */
1530:Middlewares/Third_Party/FatFs/src/ff.c **** )
1531:Middlewares/Third_Party/FatFs/src/ff.c **** {
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, *dir;
1534:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
1536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 38


1541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->lfn) {
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dir[LDIR_Chksum];
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= ~LLEF; ord = c;	/* LFN start order */
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1571:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dp->fn, 11)) /* Is it a valid entry? */
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1579:Middlewares/Third_Party/FatFs/src/ff.c **** }
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** 
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c, *dir;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
ARM GAS  /tmp/ccktbAOa.s 			page 39


1598:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = FR_NO_FILE;
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1607:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || (!_FS_RPATH && c == '.') || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c & LLEF) {			/* Is it start of LFN sequence? */
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 					sum = dir[LDIR_Chksum];
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					c &= ~LLEF; ord = c;
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* Check LFN validity and capture it */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1622:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1626:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != DDEM && (_FS_RPATH || c != '.') && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol)
1628:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1629:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);				/* Next entry */
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;
1635:Middlewares/Third_Party/FatFs/src/ff.c **** 
1636:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1637:Middlewares/Third_Party/FatFs/src/ff.c **** }
1638:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 
1643:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1644:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
1645:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1646:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1647:Middlewares/Third_Party/FatFs/src/ff.c **** static
1648:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1649:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
1650:Middlewares/Third_Party/FatFs/src/ff.c **** )
1651:Middlewares/Third_Party/FatFs/src/ff.c **** {
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nent;
ARM GAS  /tmp/ccktbAOa.s 			page 40


1655:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], *fn, sum;
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR *lfn;
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	fn = dp->fn; lfn = dp->lfn;
1660:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, fn, 12);
1661:Middlewares/Third_Party/FatFs/src/ff.c **** 
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_RPATH && (sn[NSFLAG] & NS_DOT))		/* Cannot create dot entry */
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_NAME;
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1666:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = 0; dp->lfn = 0;			/* Find only SFN */
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
1668:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1669:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
1670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1673:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1674:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = sn[NSFLAG]; dp->lfn = lfn;
1675:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1676:Middlewares/Third_Party/FatFs/src/ff.c **** 
1677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; lfn[n]; n++) ;
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
1680:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {						/* Otherwise allocate an entry for an SFN  */
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = 1;
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(dp->fs, dp->sect);
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->fs->wflag = 1;
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1698:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
1700:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {				/* Set SFN entry */
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
1707:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1708:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
1709:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1711:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccktbAOa.s 			page 41


1712:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1713:Middlewares/Third_Party/FatFs/src/ff.c **** 
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1715:Middlewares/Third_Party/FatFs/src/ff.c **** }
1716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1717:Middlewares/Third_Party/FatFs/src/ff.c **** 
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1722:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && !_FS_MINIMIZE
1725:Middlewares/Third_Party/FatFs/src/ff.c **** static
1726:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** )
1729:Middlewares/Third_Party/FatFs/src/ff.c **** {
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index;	/* SFN index */
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN en
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1742:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1743:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);		/* Next entry */
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1748:Middlewares/Third_Party/FatFs/src/ff.c **** 
1749:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->index);
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1757:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1759:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1762:Middlewares/Third_Party/FatFs/src/ff.c **** }
1763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1764:Middlewares/Third_Party/FatFs/src/ff.c **** 
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 
1768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccktbAOa.s 			page 42


1769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
1770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1771:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1772:Middlewares/Third_Party/FatFs/src/ff.c **** static
1773:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** )
1777:Middlewares/Third_Party/FatFs/src/ff.c **** {
 549              		.loc 1 1777 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL71:
 555 0000 70B4     		push	{r4, r5, r6}
 556              	.LCFI4:
 557              		.cfi_def_cfa_offset 12
 558              		.cfi_offset 4, -12
 559              		.cfi_offset 5, -8
 560              		.cfi_offset 6, -4
1778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1779:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *p, c;
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
1781:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1784:Middlewares/Third_Party/FatFs/src/ff.c **** 
1785:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = fno->fname;
 561              		.loc 1 1785 0
 562 0002 01F10904 		add	r4, r1, #9
 563              	.LVL72:
1786:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->sect) {		/* Get SFN */
 564              		.loc 1 1786 0
 565 0006 D0F81032 		ldr	r3, [r0, #528]
 566 000a 6BB3     		cbz	r3, .L69
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;
 567              		.loc 1 1787 0
 568 000c D0F81452 		ldr	r5, [r0, #532]
 569              	.LVL73:
 570 0010 681E     		subs	r0, r5, #1
 571              	.LVL74:
1788:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 572              		.loc 1 1788 0
 573 0012 0022     		movs	r2, #0
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 574              		.loc 1 1793 0
 575 0014 2E26     		movs	r6, #46
 576 0016 01E0     		b	.L73
 577              	.LVL75:
 578              	.L70:
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
 579              		.loc 1 1789 0
ARM GAS  /tmp/ccktbAOa.s 			page 43


 580 0018 0B2A     		cmp	r2, #11
 581 001a 0ED0     		beq	.L76
 582              	.LVL76:
 583              	.L73:
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
 584              		.loc 1 1790 0
 585 001c 0132     		adds	r2, r2, #1
 586              	.LVL77:
 587 001e 10F8013F 		ldrb	r3, [r0, #1]!	@ zero_extendqisi2
 588              	.LVL78:
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 589              		.loc 1 1791 0
 590 0022 202B     		cmp	r3, #32
 591 0024 F8D0     		beq	.L70
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 592              		.loc 1 1792 0
 593 0026 052B     		cmp	r3, #5
 594 0028 08BF     		it	eq
 595 002a E523     		moveq	r3, #229
 596              	.LVL79:
 597              		.loc 1 1793 0
 598 002c 092A     		cmp	r2, #9
 599              	.LVL80:
 600 002e 04BF     		itt	eq
 601 0030 2670     		strbeq	r6, [r4]
 602 0032 0134     		addeq	r4, r4, #1
 603              	.LVL81:
1794:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
1797:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dir[i]))
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = c << 8 | dir[i++];
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ff_convert(c, 1);	/* OEM -> Unicode */
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!c) c = '?';
1802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p++ = c;
 604              		.loc 1 1804 0
 605 0034 2370     		strb	r3, [r4]
 606 0036 0134     		adds	r4, r4, #1
 607              	.LVL82:
 608 0038 EEE7     		b	.L70
 609              	.L76:
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 610              		.loc 1 1806 0
 611 003a EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 612              	.LVL83:
 613 003c 0B72     		strb	r3, [r1, #8]
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fsize = LD_DWORD(dir + DIR_FileSize);	/* Size */
 614              		.loc 1 1807 0
 615 003e EA7F     		ldrb	r2, [r5, #31]	@ zero_extendqisi2
 616              	.LVL84:
 617 0040 AB7F     		ldrb	r3, [r5, #30]	@ zero_extendqisi2
 618 0042 1B04     		lsls	r3, r3, #16
 619 0044 43EA0263 		orr	r3, r3, r2, lsl #24
ARM GAS  /tmp/ccktbAOa.s 			page 44


 620 0048 2A7F     		ldrb	r2, [r5, #28]	@ zero_extendqisi2
 621 004a 1343     		orrs	r3, r3, r2
 622 004c 6A7F     		ldrb	r2, [r5, #29]	@ zero_extendqisi2
 623 004e 43EA0223 		orr	r3, r3, r2, lsl #8
 624 0052 0B60     		str	r3, [r1]
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fdate = LD_WORD(dir + DIR_WrtDate);	/* Date */
 625              		.loc 1 1808 0
 626 0054 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
 627 0056 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
 628 0058 43EA0223 		orr	r3, r3, r2, lsl #8
 629 005c 8B80     		strh	r3, [r1, #4]	@ movhi
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->ftime = LD_WORD(dir + DIR_WrtTime);	/* Time */
 630              		.loc 1 1809 0
 631 005e EA7D     		ldrb	r2, [r5, #23]	@ zero_extendqisi2
 632 0060 AB7D     		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 633 0062 43EA0223 		orr	r3, r3, r2, lsl #8
 634 0066 CB80     		strh	r3, [r1, #6]	@ movhi
 635              	.LVL85:
 636              	.L69:
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;		/* Terminate SFN string by a \0 */
 637              		.loc 1 1811 0
 638 0068 0023     		movs	r3, #0
 639 006a 2370     		strb	r3, [r4]
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 
1813:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fno->lfname) {
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0; p = fno->lfname;
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = *lfn++) != 0) {		/* Get an LFN character */
1819:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 					p[i++] = (TCHAR)(w >> 8);
1824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 				p[i++] = (TCHAR)w;
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[i] = 0;	/* Terminate LFN string by a \0 */
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1831:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1832:Middlewares/Third_Party/FatFs/src/ff.c **** }
 640              		.loc 1 1832 0
 641 006c 70BC     		pop	{r4, r5, r6}
 642              	.LCFI5:
 643              		.cfi_restore 6
 644              		.cfi_restore 5
 645              		.cfi_restore 4
 646              		.cfi_def_cfa_offset 0
 647              	.LVL86:
 648 006e 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE153:
 652              		.section	.text.get_ldnumber,"ax",%progbits
ARM GAS  /tmp/ccktbAOa.s 			page 45


 653              		.align	1
 654              		.syntax unified
 655              		.thumb
 656              		.thumb_func
 657              		.fpu fpv4-sp-d16
 659              	get_ldnumber:
 660              	.LFB156:
1833:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 
1837:Middlewares/Third_Party/FatFs/src/ff.c **** 
1838:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1839:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
1840:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
1842:Middlewares/Third_Party/FatFs/src/ff.c **** static
1843:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
1844:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** )
1846:Middlewares/Third_Party/FatFs/src/ff.c **** {
1847:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1848:Middlewares/Third_Party/FatFs/src/ff.c **** 
1849:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1850:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
1851:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr))		/* Get DBC 2nd byte if needed */
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
1856:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1857:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
1859:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
1861:Middlewares/Third_Party/FatFs/src/ff.c **** }
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** static
1865:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* Return value: 0:mismatched, 1:matched */
1866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
1867:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
1870:Middlewares/Third_Party/FatFs/src/ff.c **** )
1871:Middlewares/Third_Party/FatFs/src/ff.c **** {
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
1873:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
1874:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
ARM GAS  /tmp/ccktbAOa.s 			page 46


1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
1888:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
1892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1893:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
1896:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!pc) return 1;		/* Branch matched? (matched at end of both strings) */
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
1902:Middlewares/Third_Party/FatFs/src/ff.c **** }
1903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 
1907:Middlewares/Third_Party/FatFs/src/ff.c **** 
1908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a segment and create the object name in directory form           */
1910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1911:Middlewares/Third_Party/FatFs/src/ff.c **** 
1912:Middlewares/Third_Party/FatFs/src/ff.c **** static
1913:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
1916:Middlewares/Third_Party/FatFs/src/ff.c **** )
1917:Middlewares/Third_Party/FatFs/src/ff.c **** {
1918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1919:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
1920:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
1923:Middlewares/Third_Party/FatFs/src/ff.c **** 
1924:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = di = 0;
1928:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1929:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1933:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1938:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b))
ARM GAS  /tmp/ccktbAOa.s 			page 47


1940:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1942:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
1949:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') || /* Is this a dot entry? */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1959:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Strip trailing spaces and dots */
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** 
1969:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
1970:Middlewares/Third_Party/FatFs/src/ff.c **** 
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** 	b = i = 0; ni = 8;
1978:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
ARM GAS  /tmp/ccktbAOa.s 			page 48


1997:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
1999:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* DBC (always false at SBCS cfg) */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2020:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2024:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2025:Middlewares/Third_Party/FatFs/src/ff.c **** 
2026:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with deleted mark, re
2027:Middlewares/Third_Party/FatFs/src/ff.c **** 
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
2031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 
2041:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, c, d, *sfn;
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2047:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
2048:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn = dp->fn;
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = b = 0; ni = 8;
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2052:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
ARM GAS  /tmp/ccktbAOa.s 			page 49


2054:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2056:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2059:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = &p[si];									/* Return pointer to the next segment */
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
2074:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2076:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2077:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII cfg) */
2079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2080:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2084:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
2085:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2086:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2088:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
2092:Middlewares/Third_Party/FatFs/src/ff.c **** 				b |= 2;
2093:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 50


2111:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = c;		/* Store NT flag, File name is created */
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2115:Middlewares/Third_Party/FatFs/src/ff.c **** }
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 
2118:Middlewares/Third_Party/FatFs/src/ff.c **** 
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
2120:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2121:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** static
2125:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2126:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2127:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** )
2129:Middlewares/Third_Party/FatFs/src/ff.c **** {
2130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2131:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, ns;
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 
2134:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* No heading separator */
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
2139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
2144:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2150:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;					/* Ended at the root directroy. Function completed. */
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2165:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
ARM GAS  /tmp/ccktbAOa.s 			page 51


2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->sclust = ld_clust(dp->fs, dir);
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2177:Middlewares/Third_Party/FatFs/src/ff.c **** }
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 
2182:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2184:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 
2186:Middlewares/Third_Party/FatFs/src/ff.c **** static
2187:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2189:Middlewares/Third_Party/FatFs/src/ff.c **** )
2190:Middlewares/Third_Party/FatFs/src/ff.c **** {
 661              		.loc 1 2190 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666              	.LVL87:
2191:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const str[] = {_VOLUME_STRS};
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** 
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 667              		.loc 1 2202 0
 668 0000 0168     		ldr	r1, [r0]
 669 0002 F1B1     		cbz	r1, .L83
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 670              		.loc 1 2190 0 discriminator 1
 671 0004 10B4     		push	{r4}
 672              	.LCFI6:
 673              		.cfi_def_cfa_offset 4
 674              		.cfi_offset 4, -4
 675              	.LVL88:
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 676              		.loc 1 2203 0 discriminator 1
 677 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 678 0008 202C     		cmp	r4, #32
 679 000a 11D9     		bls	.L84
 680              		.loc 1 2203 0 is_stmt 0
ARM GAS  /tmp/ccktbAOa.s 			page 52


 681 000c 3A2C     		cmp	r4, #58
 682 000e 21D0     		beq	.L85
 683 0010 0A46     		mov	r2, r1
 684              	.LVL89:
 685              	.L81:
 686              		.loc 1 2203 0 discriminator 4
 687 0012 12F8013F 		ldrb	r3, [r2, #1]!	@ zero_extendqisi2
 688              	.LVL90:
 689 0016 202B     		cmp	r3, #32
 690 0018 0CD9     		bls	.L79
 691              		.loc 1 2203 0 discriminator 3
 692 001a 3A2B     		cmp	r3, #58
 693 001c F9D1     		bne	.L81
 694              	.LVL91:
 695              	.L82:
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
2205:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0'; 
 696              		.loc 1 2206 0 is_stmt 1
 697 001e 4B1C     		adds	r3, r1, #1
 698              	.LVL92:
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 699              		.loc 1 2207 0
 700 0020 9A42     		cmp	r2, r3
 701 0022 11D1     		bne	.L87
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 702              		.loc 1 2208 0
 703 0024 302C     		cmp	r4, #48
 704 0026 12D1     		bne	.L88
 705              	.LVL93:
2209:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
 706              		.loc 1 2210 0
 707 0028 0231     		adds	r1, r1, #2
 708              	.LVL94:
 709 002a 0160     		str	r1, [r0]
2209:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 710              		.loc 1 2209 0
 711 002c 0020     		movs	r0, #0
 712 002e 05E0     		b	.L77
 713              	.LVL95:
 714              	.L84:
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 715              		.loc 1 2203 0
 716 0030 2346     		mov	r3, r4
 717 0032 0A46     		mov	r2, r1
 718              	.LVL96:
 719              	.L79:
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
 720              		.loc 1 2204 0
 721 0034 3A2B     		cmp	r3, #58
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2212:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2213:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
ARM GAS  /tmp/ccktbAOa.s 			page 53


2217:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = str[i]; tp = *path;
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2219:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2223:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2228:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2230:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
2232:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2233:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 722              		.loc 1 2234 0
 723 0036 18BF     		it	ne
 724 0038 0020     		movne	r0, #0
 725              	.LVL97:
2204:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
 726              		.loc 1 2204 0
 727 003a F0D0     		beq	.L82
 728              	.LVL98:
 729              	.L77:
2235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2238:Middlewares/Third_Party/FatFs/src/ff.c **** }
 730              		.loc 1 2238 0
 731 003c 5DF8044B 		ldr	r4, [sp], #4
 732              	.LCFI7:
 733              		.cfi_restore 4
 734              		.cfi_def_cfa_offset 0
 735 0040 7047     		bx	lr
 736              	.LVL99:
 737              	.L83:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 738              		.loc 1 2193 0
 739 0042 4FF0FF30 		mov	r0, #-1
 740              	.LVL100:
 741 0046 7047     		bx	lr
 742              	.LVL101:
 743              	.L87:
 744              	.LCFI8:
 745              		.cfi_def_cfa_offset 4
 746              		.cfi_offset 4, -4
 747 0048 4FF0FF30 		mov	r0, #-1
 748 004c F6E7     		b	.L77
 749              	.L88:
 750 004e 4FF0FF30 		mov	r0, #-1
 751 0052 F3E7     		b	.L77
 752              	.LVL102:
 753              	.L85:
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
ARM GAS  /tmp/ccktbAOa.s 			page 54


 754              		.loc 1 2203 0
 755 0054 0A46     		mov	r2, r1
 756 0056 E2E7     		b	.L82
 757              		.cfi_endproc
 758              	.LFE156:
 760              		.section	.text.sync_window,"ax",%progbits
 761              		.align	1
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv4-sp-d16
 767              	sync_window:
 768              	.LFB135:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 769              		.loc 1 776 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL103:
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 774              		.loc 1 782 0
 775 0000 90F80432 		ldrb	r3, [r0, #516]	@ zero_extendqisi2
 776 0004 0BB9     		cbnz	r3, .L107
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 777              		.loc 1 779 0
 778 0006 0020     		movs	r0, #0
 779              	.LVL104:
 780 0008 7047     		bx	lr
 781              	.LVL105:
 782              	.L107:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 783              		.loc 1 776 0
 784 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 785              	.LCFI9:
 786              		.cfi_def_cfa_offset 24
 787              		.cfi_offset 4, -24
 788              		.cfi_offset 5, -20
 789              		.cfi_offset 6, -16
 790              		.cfi_offset 7, -12
 791              		.cfi_offset 8, -8
 792              		.cfi_offset 14, -4
 793 000e 0446     		mov	r4, r0
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 794              		.loc 1 783 0
 795 0010 D0F82C52 		ldr	r5, [r0, #556]
 796              	.LVL106:
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 797              		.loc 1 784 0
 798 0014 0746     		mov	r7, r0
 799 0016 0123     		movs	r3, #1
 800 0018 2A46     		mov	r2, r5
 801 001a 0146     		mov	r1, r0
 802 001c 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 803              	.LVL107:
 804 0020 FFF7FEFF 		bl	disk_write
 805              	.LVL108:
 806 0024 F8B9     		cbnz	r0, .L98
ARM GAS  /tmp/ccktbAOa.s 			page 55


 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 807              		.loc 1 787 0
 808 0026 0023     		movs	r3, #0
 809 0028 84F80432 		strb	r3, [r4, #516]
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 810              		.loc 1 788 0
 811 002c D4F82032 		ldr	r3, [r4, #544]
 812 0030 EB1A     		subs	r3, r5, r3
 813 0032 D4F81822 		ldr	r2, [r4, #536]
 814 0036 9342     		cmp	r3, r2
 815 0038 18D2     		bcs	.L99
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 816              		.loc 1 789 0
 817 003a 94F80362 		ldrb	r6, [r4, #515]	@ zero_extendqisi2
 818              	.LVL109:
 819 003e 012E     		cmp	r6, #1
 820 0040 17D9     		bls	.L100
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 821              		.loc 1 791 0 discriminator 3
 822 0042 4FF00108 		mov	r8, #1
 823              	.L101:
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 824              		.loc 1 790 0 discriminator 3
 825 0046 D4F81832 		ldr	r3, [r4, #536]
 826 004a 1D44     		add	r5, r5, r3
 827              	.LVL110:
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 828              		.loc 1 791 0 discriminator 3
 829 004c 4346     		mov	r3, r8
 830 004e 2A46     		mov	r2, r5
 831 0050 3946     		mov	r1, r7
 832 0052 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 833 0056 FFF7FEFF 		bl	disk_write
 834              	.LVL111:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 835              		.loc 1 789 0 discriminator 3
 836 005a 013E     		subs	r6, r6, #1
 837              	.LVL112:
 838 005c 012E     		cmp	r6, #1
 839 005e F2D1     		bne	.L101
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 840              		.loc 1 779 0
 841 0060 0020     		movs	r0, #0
 842 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 843              	.LVL113:
 844              	.L98:
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 845              		.loc 1 785 0
 846 0066 0120     		movs	r0, #1
 847 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 848              	.LVL114:
 849              	.L99:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 850              		.loc 1 779 0
 851 006c 0020     		movs	r0, #0
 852 006e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 853              	.LVL115:
ARM GAS  /tmp/ccktbAOa.s 			page 56


 854              	.L100:
 855 0072 0020     		movs	r0, #0
 856              	.LVL116:
 797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 857              		.loc 1 797 0
 858 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 859              		.cfi_endproc
 860              	.LFE135:
 862              		.section	.text.move_window,"ax",%progbits
 863              		.align	1
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv4-sp-d16
 869              	move_window:
 870              	.LFB136:
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 871              		.loc 1 806 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              	.LVL117:
 876 0000 70B5     		push	{r4, r5, r6, lr}
 877              	.LCFI10:
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883              	.LVL118:
 810:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 884              		.loc 1 810 0
 885 0002 D0F82C32 		ldr	r3, [r0, #556]
 886 0006 8B42     		cmp	r3, r1
 887 0008 16D0     		beq	.L111
 888 000a 0446     		mov	r4, r0
 889 000c 0D46     		mov	r5, r1
 812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 890              		.loc 1 812 0
 891 000e FFF7FEFF 		bl	sync_window
 892              	.LVL119:
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 893              		.loc 1 814 0
 894 0012 0646     		mov	r6, r0
 895 0014 08B1     		cbz	r0, .L113
 896              	.LVL120:
 897              	.L109:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 
 898              		.loc 1 823 0
 899 0016 3046     		mov	r0, r6
 900 0018 70BD     		pop	{r4, r5, r6, pc}
 901              	.LVL121:
 902              	.L113:
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 903              		.loc 1 815 0
 904 001a 0123     		movs	r3, #1
 905 001c 2A46     		mov	r2, r5
ARM GAS  /tmp/ccktbAOa.s 			page 57


 906 001e 2146     		mov	r1, r4
 907 0020 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 908              	.LVL122:
 909 0024 FFF7FEFF 		bl	disk_read
 910              	.LVL123:
 911 0028 0028     		cmp	r0, #0
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 912              		.loc 1 817 0
 913 002a 1CBF     		itt	ne
 914 002c 0126     		movne	r6, #1
 915 002e 4FF0FF35 		movne	r5, #-1
 916              	.LVL124:
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 917              		.loc 1 819 0
 918 0032 C4F82C52 		str	r5, [r4, #556]
 919 0036 EEE7     		b	.L109
 920              	.LVL125:
 921              	.L111:
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 
 922              		.loc 1 807 0
 923 0038 0026     		movs	r6, #0
 924 003a ECE7     		b	.L109
 925              		.cfi_endproc
 926              	.LFE136:
 928              		.section	.text.check_fs,"ax",%progbits
 929              		.align	1
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	check_fs:
 936              	.LFB157:
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 
2242:Middlewares/Third_Party/FatFs/src/ff.c **** 
2243:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2244:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2246:Middlewares/Third_Party/FatFs/src/ff.c **** 
2247:Middlewares/Third_Party/FatFs/src/ff.c **** static
2248:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk 
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
2251:Middlewares/Third_Party/FatFs/src/ff.c **** )
2252:Middlewares/Third_Party/FatFs/src/ff.c **** {
 937              		.loc 1 2252 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL126:
 942 0000 10B5     		push	{r4, lr}
 943              	.LCFI11:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 14, -4
 947 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccktbAOa.s 			page 58


2253:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
 948              		.loc 1 2253 0
 949 0004 0023     		movs	r3, #0
 950 0006 80F80432 		strb	r3, [r0, #516]
 951 000a 4FF0FF33 		mov	r3, #-1
 952 000e C0F82C32 		str	r3, [r0, #556]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
 953              		.loc 1 2254 0
 954 0012 FFF7FEFF 		bl	move_window
 955              	.LVL127:
 956 0016 08B1     		cbz	r0, .L120
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 3;
 957              		.loc 1 2255 0
 958 0018 0320     		movs	r0, #3
 959 001a 10BD     		pop	{r4, pc}
 960              	.LVL128:
 961              	.L120:
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(&fs->win.d8[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offs
 962              		.loc 1 2257 0
 963 001c 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 964 0020 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 965 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 966 0028 1BB2     		sxth	r3, r3
 967 002a 174A     		ldr	r2, .L122
 968 002c 9342     		cmp	r3, r2
 969 002e 01D0     		beq	.L121
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 2;
 970              		.loc 1 2258 0
 971 0030 0220     		movs	r0, #2
 972 0032 10BD     		pop	{r4, pc}
 973              	.LVL129:
 974              	.L121:
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
 975              		.loc 1 2260 0
 976 0034 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 977 0038 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 978 003c 1B04     		lsls	r3, r3, #16
 979 003e 43EA0263 		orr	r3, r3, r2, lsl #24
 980 0042 94F83620 		ldrb	r2, [r4, #54]	@ zero_extendqisi2
 981 0046 1343     		orrs	r3, r3, r2
 982 0048 94F83720 		ldrb	r2, [r4, #55]	@ zero_extendqisi2
 983 004c 43EA0223 		orr	r3, r3, r2, lsl #8
 984 0050 23F07F43 		bic	r3, r3, #-16777216
 985 0054 0D4A     		ldr	r2, .L122+4
 986 0056 9342     		cmp	r3, r2
 987 0058 13D0     		beq	.L118
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 988              		.loc 1 2262 0
 989 005a 94F85530 		ldrb	r3, [r4, #85]	@ zero_extendqisi2
 990 005e 94F85400 		ldrb	r0, [r4, #84]	@ zero_extendqisi2
 991 0062 0004     		lsls	r0, r0, #16
 992 0064 40EA0360 		orr	r0, r0, r3, lsl #24
 993 0068 94F85230 		ldrb	r3, [r4, #82]	@ zero_extendqisi2
 994 006c 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccktbAOa.s 			page 59


 995 006e 94F85330 		ldrb	r3, [r4, #83]	@ zero_extendqisi2
 996 0072 40EA0320 		orr	r0, r0, r3, lsl #8
 997 0076 20F07F40 		bic	r0, r0, #-16777216
2255:Middlewares/Third_Party/FatFs/src/ff.c **** 
 998              		.loc 1 2255 0
 999 007a 801A     		subs	r0, r0, r2
 1000 007c 18BF     		it	ne
 1001 007e 0120     		movne	r0, #1
 1002 0080 10BD     		pop	{r4, pc}
 1003              	.LVL130:
 1004              	.L118:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 1005              		.loc 1 2261 0
 1006 0082 0020     		movs	r0, #0
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
2266:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1007              		.loc 1 2266 0
 1008 0084 10BD     		pop	{r4, pc}
 1009              	.LVL131:
 1010              	.L123:
 1011 0086 00BF     		.align	2
 1012              	.L122:
 1013 0088 55AAFFFF 		.word	-21931
 1014 008c 46415400 		.word	5521734
 1015              		.cfi_endproc
 1016              	.LFE157:
 1018              		.section	.text.validate,"ax",%progbits
 1019              		.align	1
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1023              		.fpu fpv4-sp-d16
 1025              	validate:
 1026              	.LFB159:
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 
2271:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2272:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2273:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 
2275:Middlewares/Third_Party/FatFs/src/ff.c **** static
2276:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE wmode			/* !=0: Check write protection for write access */
2280:Middlewares/Third_Party/FatFs/src/ff.c **** )
2281:Middlewares/Third_Party/FatFs/src/ff.c **** {
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
2286:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
2287:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
ARM GAS  /tmp/ccktbAOa.s 			page 60


2288:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2289:Middlewares/Third_Party/FatFs/src/ff.c **** 
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number from the path name */
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
2322:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
2325:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning, FDISK and SFD. */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
2333:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);						/* Partition number: 0:auto, 1-4:forced */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {								/* Find an FAT volume */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found. Following code initializes the file system object */
ARM GAS  /tmp/ccktbAOa.s 			page 61


2345:Middlewares/Third_Party/FatFs/src/ff.c **** 
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(fs->win.d8 + BPB_BytsPerSec) != SS(fs))	/* (BPB_BytsPerSec must be equal to the physic
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize = LD_WORD(fs->win.d8 + BPB_FATSz16);			/* Number of sectors per FAT */
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fats = fs->win.d8[BPB_NumFATs];					/* Number of FAT copies */
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->csize = fs->win.d8[BPB_SecPerClus];				/* Number of sectors per cluster */
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_rootdir = LD_WORD(fs->win.d8 + BPB_RootEntCnt);	/* Number of root directory entries */
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2365:Middlewares/Third_Party/FatFs/src/ff.c **** 
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	tsect = LD_WORD(fs->win.d8 + BPB_TotSec16);			/* Number of sectors on the volume */
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
2368:Middlewares/Third_Party/FatFs/src/ff.c **** 
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	nrsv = LD_WORD(fs->win.d8 + BPB_RsvdSecCnt);			/* Number of reserved sectors */
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the FAT sub type */
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIRE);	/* RSV + FAT + DIR */
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Boundaries and Limits */
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
2390:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
2395:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than the size nee
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2398:Middlewares/Third_Party/FatFs/src/ff.c **** 
2399:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize cluster allocation information */
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
ARM GAS  /tmp/ccktbAOa.s 			page 62


2402:Middlewares/Third_Party/FatFs/src/ff.c **** 
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get fsinfo if available */
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsi_flag = 0x80;
2405:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0;
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
2415:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = LD_DWORD(fs->win.d8 + FSI_Free_Count);
2417:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2418:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->last_clust = LD_DWORD(fs->win.d8 + FSI_Nxt_Free);
2420:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2423:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2424:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;	/* FAT sub-type */
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
2427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;		/* Set current directory to root */
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK			/* Clear file lock semaphores */
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
2432:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2435:Middlewares/Third_Party/FatFs/src/ff.c **** }
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** 
2439:Middlewares/Third_Party/FatFs/src/ff.c **** 
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
2442:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2443:Middlewares/Third_Party/FatFs/src/ff.c **** 
2444:Middlewares/Third_Party/FatFs/src/ff.c **** static
2445:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* obj		/* Pointer to the object FIL/DIR to check validity */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1027              		.loc 1 2448 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              	.LVL132:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (disk_status(fil->fs->drv) 
 1032              		.loc 1 2452 0
ARM GAS  /tmp/ccktbAOa.s 			page 63


 1033 0000 D8B1     		cbz	r0, .L126
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
 1034              		.loc 1 2448 0 discriminator 1
 1035 0002 08B5     		push	{r3, lr}
 1036              	.LCFI12:
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 3, -8
 1039              		.cfi_offset 14, -4
 1040              		.loc 1 2452 0 discriminator 1
 1041 0004 D0F80032 		ldr	r3, [r0, #512]
 1042 0008 CBB1     		cbz	r3, .L127
 1043              		.loc 1 2452 0 is_stmt 0 discriminator 2
 1044 000a 93F80012 		ldrb	r1, [r3, #512]	@ zero_extendqisi2
 1045 000e 09B9     		cbnz	r1, .L135
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1046              		.loc 1 2453 0 is_stmt 1
 1047 0010 0920     		movs	r0, #9
 1048              	.LVL133:
 1049 0012 08BD     		pop	{r3, pc}
 1050              	.LVL134:
 1051              	.L135:
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1052              		.loc 1 2452 0 discriminator 3
 1053 0014 B3F80612 		ldrh	r1, [r3, #518]
 1054 0018 B0F80422 		ldrh	r2, [r0, #516]
 1055 001c 9142     		cmp	r1, r2
 1056 001e 01D0     		beq	.L136
 1057              		.loc 1 2453 0
 1058 0020 0920     		movs	r0, #9
 1059              	.LVL135:
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 
2455:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fil->fs);		/* Lock file system */
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1060              		.loc 1 2458 0
 1061 0022 08BD     		pop	{r3, pc}
 1062              	.LVL136:
 1063              	.L136:
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 1064              		.loc 1 2452 0 discriminator 4
 1065 0024 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 1066              	.LVL137:
 1067 0028 FFF7FEFF 		bl	disk_status
 1068              	.LVL138:
 1069 002c 00F00100 		and	r0, r0, #1
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1070              		.loc 1 2453 0 discriminator 4
 1071 0030 0028     		cmp	r0, #0
 1072 0032 0CBF     		ite	eq
 1073 0034 0020     		moveq	r0, #0
 1074 0036 0920     		movne	r0, #9
 1075 0038 08BD     		pop	{r3, pc}
 1076              	.LVL139:
 1077              	.L126:
 1078              	.LCFI13:
 1079              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccktbAOa.s 			page 64


 1080              		.cfi_restore 3
 1081              		.cfi_restore 14
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1082              		.loc 1 2453 0 is_stmt 0
 1083 003a 0920     		movs	r0, #9
 1084              	.LVL140:
 1085 003c 7047     		bx	lr
 1086              	.LVL141:
 1087              	.L127:
 1088              	.LCFI14:
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 3, -8
 1091              		.cfi_offset 14, -4
 1092 003e 0920     		movs	r0, #9
 1093              	.LVL142:
 1094 0040 08BD     		pop	{r3, pc}
 1095              		.cfi_endproc
 1096              	.LFE159:
 1098              		.section	.text.find_volume,"ax",%progbits
 1099              		.align	1
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu fpv4-sp-d16
 1105              	find_volume:
 1106              	.LFB158:
2281:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
 1107              		.loc 1 2281 0 is_stmt 1
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 16
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              	.LVL143:
 1112 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1113              	.LCFI15:
 1114              		.cfi_def_cfa_offset 24
 1115              		.cfi_offset 4, -24
 1116              		.cfi_offset 5, -20
 1117              		.cfi_offset 6, -16
 1118              		.cfi_offset 7, -12
 1119              		.cfi_offset 8, -8
 1120              		.cfi_offset 14, -4
 1121 0004 84B0     		sub	sp, sp, #16
 1122              	.LCFI16:
 1123              		.cfi_def_cfa_offset 40
 1124 0006 0646     		mov	r6, r0
 1125 0008 1746     		mov	r7, r2
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1126              		.loc 1 2292 0
 1127 000a 0023     		movs	r3, #0
 1128 000c 0360     		str	r3, [r0]
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1129              		.loc 1 2293 0
 1130 000e 0846     		mov	r0, r1
 1131              	.LVL144:
 1132 0010 FFF7FEFF 		bl	get_ldnumber
 1133              	.LVL145:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 65


 1134              		.loc 1 2294 0
 1135 0014 051E     		subs	r5, r0, #0
 1136 0016 C0F2B081 		blt	.L161
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1137              		.loc 1 2297 0
 1138 001a 9D4B     		ldr	r3, .L203
 1139 001c 53F82540 		ldr	r4, [r3, r5, lsl #2]
 1140              	.LVL146:
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1141              		.loc 1 2298 0
 1142 0020 002C     		cmp	r4, #0
 1143 0022 00F0AE81 		beq	.L162
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1144              		.loc 1 2301 0
 1145 0026 3460     		str	r4, [r6]
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1146              		.loc 1 2303 0
 1147 0028 94F80032 		ldrb	r3, [r4, #512]	@ zero_extendqisi2
 1148 002c 83B1     		cbz	r3, .L139
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1149              		.loc 1 2304 0
 1150 002e 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1151              	.LVL147:
 1152 0032 FFF7FEFF 		bl	disk_status
 1153              	.LVL148:
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
 1154              		.loc 1 2305 0
 1155 0036 10F0010F 		tst	r0, #1
 1156 003a 09D1     		bne	.L139
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1157              		.loc 1 2306 0
 1158 003c 002F     		cmp	r7, #0
 1159 003e 00F0A281 		beq	.L163
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1160              		.loc 1 2306 0 is_stmt 0 discriminator 1
 1161 0042 00F00400 		and	r0, r0, #4
 1162              	.LVL149:
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
 1163              		.loc 1 2307 0 is_stmt 1 discriminator 1
 1164 0046 0028     		cmp	r0, #0
 1165 0048 0CBF     		ite	eq
 1166 004a 0020     		moveq	r0, #0
 1167 004c 0A20     		movne	r0, #10
 1168 004e 95E1     		b	.L191
 1169              	.L139:
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1170              		.loc 1 2315 0
 1171 0050 0023     		movs	r3, #0
 1172 0052 84F80032 		strb	r3, [r4, #512]
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1173              		.loc 1 2316 0
 1174 0056 E8B2     		uxtb	r0, r5
 1175 0058 84F80102 		strb	r0, [r4, #513]
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 1176              		.loc 1 2317 0
 1177 005c FFF7FEFF 		bl	disk_initialize
 1178              	.LVL150:
ARM GAS  /tmp/ccktbAOa.s 			page 66


2318:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1179              		.loc 1 2318 0
 1180 0060 10F0010F 		tst	r0, #1
 1181 0064 01D0     		beq	.L195
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 1182              		.loc 1 2319 0
 1183 0066 0320     		movs	r0, #3
 1184              	.LVL151:
 1185 0068 88E1     		b	.L191
 1186              	.LVL152:
 1187              	.L195:
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1188              		.loc 1 2320 0
 1189 006a 27B1     		cbz	r7, .L140
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1190              		.loc 1 2320 0 is_stmt 0 discriminator 1
 1191 006c 10F0040F 		tst	r0, #4
 1192 0070 01D0     		beq	.L140
2321:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
 1193              		.loc 1 2321 0 is_stmt 1
 1194 0072 0A20     		movs	r0, #10
 1195              	.LVL153:
 1196 0074 82E1     		b	.L191
 1197              	.LVL154:
 1198              	.L140:
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
 1199              		.loc 1 2328 0
 1200 0076 0021     		movs	r1, #0
 1201 0078 2046     		mov	r0, r4
 1202              	.LVL155:
 1203 007a FFF7FEFF 		bl	check_fs
 1204              	.LVL156:
 1205 007e 0346     		mov	r3, r0
 1206              	.LVL157:
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
 1207              		.loc 1 2329 0
 1208 0080 0128     		cmp	r0, #1
 1209 0082 06D0     		beq	.L196
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 1210              		.loc 1 2327 0
 1211 0084 0026     		movs	r6, #0
 1212              	.LVL158:
 1213              	.L141:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1214              		.loc 1 2341 0
 1215 0086 032B     		cmp	r3, #3
 1216 0088 00F07F81 		beq	.L170
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1217              		.loc 1 2342 0
 1218 008c 9BB3     		cbz	r3, .L145
 1219 008e 0D20     		movs	r0, #13
 1220 0090 74E1     		b	.L191
 1221              	.LVL159:
 1222              	.L196:
 1223 0092 2346     		mov	r3, r4
 1224 0094 6D46     		mov	r5, sp
 1225              	.LVL160:
ARM GAS  /tmp/ccktbAOa.s 			page 67


 1226 0096 04F14000 		add	r0, r4, #64
 1227              	.LVL161:
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
 1228              		.loc 1 2329 0
 1229 009a 6946     		mov	r1, sp
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1230              		.loc 1 2332 0
 1231 009c 0027     		movs	r7, #0
 1232 009e 05E0     		b	.L143
 1233              	.LVL162:
 1234              	.L168:
 1235 00a0 3A46     		mov	r2, r7
 1236              	.L142:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1237              		.loc 1 2332 0 is_stmt 0 discriminator 4
 1238 00a2 41F8042B 		str	r2, [r1], #4
 1239              	.LVL163:
 1240 00a6 1033     		adds	r3, r3, #16
 1241              	.LVL164:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
 1242              		.loc 1 2330 0 is_stmt 1 discriminator 4
 1243 00a8 8342     		cmp	r3, r0
 1244 00aa 12D0     		beq	.L197
 1245              	.LVL165:
 1246              	.L143:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1247              		.loc 1 2332 0
 1248 00ac 93F8C221 		ldrb	r2, [r3, #450]	@ zero_extendqisi2
 1249 00b0 002A     		cmp	r2, #0
 1250 00b2 F5D0     		beq	.L168
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1251              		.loc 1 2332 0 is_stmt 0 discriminator 1
 1252 00b4 93F8C961 		ldrb	r6, [r3, #457]	@ zero_extendqisi2
 1253 00b8 93F8C821 		ldrb	r2, [r3, #456]	@ zero_extendqisi2
 1254 00bc 1204     		lsls	r2, r2, #16
 1255 00be 42EA0662 		orr	r2, r2, r6, lsl #24
 1256 00c2 93F8C661 		ldrb	r6, [r3, #454]	@ zero_extendqisi2
 1257 00c6 3243     		orrs	r2, r2, r6
 1258 00c8 93F8C761 		ldrb	r6, [r3, #455]	@ zero_extendqisi2
 1259 00cc 42EA0622 		orr	r2, r2, r6, lsl #8
 1260 00d0 E7E7     		b	.L142
 1261              	.LVL166:
 1262              	.L197:
 1263 00d2 04AF     		add	r7, sp, #16
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1264              		.loc 1 2338 0 is_stmt 1
 1265 00d4 4FF00208 		mov	r8, #2
 1266 00d8 07E0     		b	.L146
 1267              	.LVL167:
 1268              	.L198:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1269              		.loc 1 2338 0 is_stmt 0 discriminator 1
 1270 00da 3146     		mov	r1, r6
 1271 00dc 2046     		mov	r0, r4
 1272 00de FFF7FEFF 		bl	check_fs
 1273              	.LVL168:
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccktbAOa.s 			page 68


 1274              		.loc 1 2339 0 is_stmt 1 discriminator 1
 1275 00e2 0346     		mov	r3, r0
 1276 00e4 38B1     		cbz	r0, .L145
 1277              	.LVL169:
 1278              	.L144:
 1279 00e6 AF42     		cmp	r7, r5
 1280 00e8 CDD0     		beq	.L141
 1281              	.LVL170:
 1282              	.L146:
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
 1283              		.loc 1 2337 0
 1284 00ea 55F8046B 		ldr	r6, [r5], #4
 1285              	.LVL171:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1286              		.loc 1 2338 0
 1287 00ee 002E     		cmp	r6, #0
 1288 00f0 F3D1     		bne	.L198
 1289 00f2 4346     		mov	r3, r8
 1290 00f4 F7E7     		b	.L144
 1291              	.L145:
 1292              	.LVL172:
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1293              		.loc 1 2346 0
 1294 00f6 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 1295 00f8 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 1296 00fa 43EA0223 		orr	r3, r3, r2, lsl #8
 1297 00fe 1BB2     		sxth	r3, r3
 1298 0100 B3F5007F 		cmp	r3, #512
 1299 0104 01D0     		beq	.L199
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1300              		.loc 1 2347 0
 1301 0106 0D20     		movs	r0, #13
 1302 0108 38E1     		b	.L191
 1303              	.L199:
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
 1304              		.loc 1 2349 0
 1305 010a E37D     		ldrb	r3, [r4, #23]	@ zero_extendqisi2
 1306 010c A27D     		ldrb	r2, [r4, #22]	@ zero_extendqisi2
 1307              	.LVL173:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1308              		.loc 1 2350 0
 1309 010e 52EA0322 		orrs	r2, r2, r3, lsl #8
 1310              	.LVL174:
 1311 0112 0DD1     		bne	.L147
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1312              		.loc 1 2350 0 is_stmt 0 discriminator 1
 1313 0114 94F82730 		ldrb	r3, [r4, #39]	@ zero_extendqisi2
 1314 0118 94F82620 		ldrb	r2, [r4, #38]	@ zero_extendqisi2
 1315              	.LVL175:
 1316 011c 1204     		lsls	r2, r2, #16
 1317 011e 42EA0362 		orr	r2, r2, r3, lsl #24
 1318 0122 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 1319 0126 1A43     		orrs	r2, r2, r3
 1320 0128 94F82530 		ldrb	r3, [r4, #37]	@ zero_extendqisi2
 1321 012c 42EA0322 		orr	r2, r2, r3, lsl #8
 1322              	.LVL176:
 1323              	.L147:
ARM GAS  /tmp/ccktbAOa.s 			page 69


2351:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1324              		.loc 1 2351 0 is_stmt 1
 1325 0130 C4F81822 		str	r2, [r4, #536]
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
 1326              		.loc 1 2353 0
 1327 0134 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1328 0136 84F80312 		strb	r1, [r4, #515]
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1329              		.loc 1 2354 0
 1330 013a 4B1E     		subs	r3, r1, #1
 1331 013c DBB2     		uxtb	r3, r3
 1332 013e 012B     		cmp	r3, #1
 1333 0140 01D9     		bls	.L200
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
 1334              		.loc 1 2355 0
 1335 0142 0D20     		movs	r0, #13
 1336 0144 1AE1     		b	.L191
 1337              	.L200:
 1338              	.LVL177:
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 1339              		.loc 1 2358 0
 1340 0146 677B     		ldrb	r7, [r4, #13]	@ zero_extendqisi2
 1341 0148 84F80272 		strb	r7, [r4, #514]
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1342              		.loc 1 2359 0
 1343 014c 0FB9     		cbnz	r7, .L201
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1344              		.loc 1 2360 0
 1345 014e 0D20     		movs	r0, #13
 1346 0150 14E1     		b	.L191
 1347              	.L201:
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1348              		.loc 1 2359 0 discriminator 1
 1349 0152 7B1E     		subs	r3, r7, #1
 1350 0154 3B42     		tst	r3, r7
 1351 0156 01D0     		beq	.L202
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1352              		.loc 1 2360 0
 1353 0158 0D20     		movs	r0, #13
 1354 015a 0FE1     		b	.L191
 1355              	.L202:
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
 1356              		.loc 1 2362 0
 1357 015c A37C     		ldrb	r3, [r4, #18]	@ zero_extendqisi2
 1358 015e 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 1359 0160 40EA0320 		orr	r0, r0, r3, lsl #8
 1360 0164 A4F80802 		strh	r0, [r4, #520]	@ movhi
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1361              		.loc 1 2363 0
 1362 0168 10F00F0F 		tst	r0, #15
 1363 016c 40F00F81 		bne	.L176
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
 1364              		.loc 1 2366 0
 1365 0170 257D     		ldrb	r5, [r4, #20]	@ zero_extendqisi2
 1366 0172 E37C     		ldrb	r3, [r4, #19]	@ zero_extendqisi2
 1367              	.LVL178:
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 70


 1368              		.loc 1 2367 0
 1369 0174 53EA0523 		orrs	r3, r3, r5, lsl #8
 1370              	.LVL179:
 1371 0178 0DD1     		bne	.L148
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1372              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1373 017a 94F82350 		ldrb	r5, [r4, #35]	@ zero_extendqisi2
 1374 017e 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 1375              	.LVL180:
 1376 0182 1B04     		lsls	r3, r3, #16
 1377 0184 43EA0563 		orr	r3, r3, r5, lsl #24
 1378 0188 94F82050 		ldrb	r5, [r4, #32]	@ zero_extendqisi2
 1379 018c 2B43     		orrs	r3, r3, r5
 1380 018e 94F82150 		ldrb	r5, [r4, #33]	@ zero_extendqisi2
 1381 0192 43EA0523 		orr	r3, r3, r5, lsl #8
 1382              	.LVL181:
 1383              	.L148:
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
 1384              		.loc 1 2369 0 is_stmt 1
 1385 0196 94F80FE0 		ldrb	lr, [r4, #15]	@ zero_extendqisi2
 1386 019a A57B     		ldrb	r5, [r4, #14]	@ zero_extendqisi2
 1387              	.LVL182:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1388              		.loc 1 2370 0
 1389 019c 55EA0E25 		orrs	r5, r5, lr, lsl #8
 1390              	.LVL183:
 1391 01a0 00F0F780 		beq	.L177
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1392              		.loc 1 2356 0
 1393 01a4 02FB01FC 		mul	ip, r2, r1
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1394              		.loc 1 2373 0
 1395 01a8 05EB1011 		add	r1, r5, r0, lsr #4
 1396              	.LVL184:
 1397 01ac 01EB0C0E 		add	lr, r1, ip
 1398              	.LVL185:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 1399              		.loc 1 2374 0
 1400 01b0 7345     		cmp	r3, lr
 1401 01b2 C0F0F080 		bcc	.L178
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 1402              		.loc 1 2375 0
 1403 01b6 A3EB0E03 		sub	r3, r3, lr
 1404              	.LVL186:
 1405 01ba B3FBF7F3 		udiv	r3, r3, r7
 1406              	.LVL187:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 1407              		.loc 1 2376 0
 1408 01be 002B     		cmp	r3, #0
 1409 01c0 00F0EB80 		beq	.L179
 1410              	.LVL188:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1411              		.loc 1 2378 0
 1412 01c4 40F6F571 		movw	r1, #4085
 1413 01c8 8B42     		cmp	r3, r1
 1414 01ca 94BF     		ite	ls
 1415 01cc 0121     		movls	r1, #1
ARM GAS  /tmp/ccktbAOa.s 			page 71


 1416 01ce 0221     		movhi	r1, #2
 1417              	.LVL189:
2379:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1418              		.loc 1 2379 0
 1419 01d0 4FF6F577 		movw	r7, #65525
 1420 01d4 BB42     		cmp	r3, r7
 1421 01d6 00F2EA80 		bhi	.L150
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
 1422              		.loc 1 2382 0
 1423 01da 0233     		adds	r3, r3, #2
 1424              	.LVL190:
 1425 01dc C4F81432 		str	r3, [r4, #532]
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 1426              		.loc 1 2383 0
 1427 01e0 C4F81C62 		str	r6, [r4, #540]
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 1428              		.loc 1 2384 0
 1429 01e4 3544     		add	r5, r5, r6
 1430 01e6 C4F82052 		str	r5, [r4, #544]
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 1431              		.loc 1 2385 0
 1432 01ea 0EEB0607 		add	r7, lr, r6
 1433 01ee C4F82872 		str	r7, [r4, #552]
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 1434              		.loc 1 2386 0
 1435 01f2 0329     		cmp	r1, #3
 1436 01f4 2DD1     		bne	.L151
 1437              	.LVL191:
 1438              	.L158:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 1439              		.loc 1 2387 0
 1440 01f6 0028     		cmp	r0, #0
 1441 01f8 40F0D180 		bne	.L181
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
 1442              		.loc 1 2388 0
 1443 01fc 94F82F00 		ldrb	r0, [r4, #47]	@ zero_extendqisi2
 1444 0200 94F82E10 		ldrb	r1, [r4, #46]	@ zero_extendqisi2
 1445 0204 0904     		lsls	r1, r1, #16
 1446 0206 41EA0061 		orr	r1, r1, r0, lsl #24
 1447 020a 94F82C00 		ldrb	r0, [r4, #44]	@ zero_extendqisi2
 1448 020e 0143     		orrs	r1, r1, r0
 1449 0210 94F82D00 		ldrb	r0, [r4, #45]	@ zero_extendqisi2
 1450 0214 41EA0021 		orr	r1, r1, r0, lsl #8
 1451 0218 C4F82412 		str	r1, [r4, #548]
 1452              	.LVL192:
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 1453              		.loc 1 2389 0
 1454 021c 9B00     		lsls	r3, r3, #2
 1455              	.LVL193:
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1456              		.loc 1 2396 0
 1457 021e 03F2FF13 		addw	r3, r3, #511
 1458              	.LVL194:
 1459 0222 B2EB532F 		cmp	r2, r3, lsr #9
 1460 0226 C0F0BC80 		bcc	.L182
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1461              		.loc 1 2401 0
ARM GAS  /tmp/ccktbAOa.s 			page 72


 1462 022a 4FF0FF33 		mov	r3, #-1
 1463              	.LVL195:
 1464 022e C4F81032 		str	r3, [r4, #528]
 1465 0232 C4F80C32 		str	r3, [r4, #524]
2404:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 1466              		.loc 1 2404 0
 1467 0236 8023     		movs	r3, #128
 1468 0238 84F80532 		strb	r3, [r4, #517]
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
 1469              		.loc 1 2407 0
 1470 023c 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 1471              	.LVL196:
 1472 0240 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 1473 0244 43EA0223 		orr	r3, r3, r2, lsl #8
 1474 0248 1BB2     		sxth	r3, r3
 1475 024a 012B     		cmp	r3, #1
 1476 024c 22D0     		beq	.L159
 1477 024e 0321     		movs	r1, #3
 1478 0250 72E0     		b	.L155
 1479              	.LVL197:
 1480              	.L151:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 1481              		.loc 1 2391 0
 1482 0252 0028     		cmp	r0, #0
 1483 0254 00F0A780 		beq	.L183
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
 1484              		.loc 1 2392 0
 1485 0258 6544     		add	r5, r5, ip
 1486 025a C4F82452 		str	r5, [r4, #548]
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1487              		.loc 1 2394 0
 1488 025e 0229     		cmp	r1, #2
 1489 0260 0FBF     		iteee	eq
 1490 0262 5B00     		lsleq	r3, r3, #1
 1491              	.LVL198:
 1492 0264 03EB4300 		addne	r0, r3, r3, lsl #1
 1493 0268 03F00103 		andne	r3, r3, #1
 1494 026c 03EB5003 		addne	r3, r3, r0, lsr #1
 1495              	.LVL199:
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1496              		.loc 1 2396 0
 1497 0270 03F2FF13 		addw	r3, r3, #511
 1498              	.LVL200:
 1499 0274 B2EB532F 		cmp	r2, r3, lsr #9
 1500 0278 C0F09780 		bcc	.L188
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1501              		.loc 1 2401 0
 1502 027c 4FF0FF33 		mov	r3, #-1
 1503              	.LVL201:
 1504 0280 C4F81032 		str	r3, [r4, #528]
 1505 0284 C4F80C32 		str	r3, [r4, #524]
2404:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
 1506              		.loc 1 2404 0
 1507 0288 8023     		movs	r3, #128
 1508 028a 84F80532 		strb	r3, [r4, #517]
 1509 028e 53E0     		b	.L155
 1510              	.L204:
ARM GAS  /tmp/ccktbAOa.s 			page 73


 1511              		.align	2
 1512              	.L203:
 1513 0290 00000000 		.word	.LANCHOR1
 1514              	.LVL202:
 1515              	.L159:
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
 1516              		.loc 1 2408 0
 1517 0294 711C     		adds	r1, r6, #1
 1518 0296 2046     		mov	r0, r4
 1519 0298 FFF7FEFF 		bl	move_window
 1520              	.LVL203:
 1521 029c 0028     		cmp	r0, #0
 1522 029e 64D1     		bne	.L184
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 1523              		.loc 1 2410 0
 1524 02a0 0023     		movs	r3, #0
 1525 02a2 84F80532 		strb	r3, [r4, #517]
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
 1526              		.loc 1 2411 0
 1527 02a6 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 1528 02aa 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 1529 02ae 43EA0223 		orr	r3, r3, r2, lsl #8
 1530 02b2 1BB2     		sxth	r3, r3
 1531 02b4 444A     		ldr	r2, .L205
 1532 02b6 9342     		cmp	r3, r2
 1533 02b8 59D1     		bne	.L185
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
 1534              		.loc 1 2412 0
 1535 02ba E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 1536 02bc A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1537 02be 1B04     		lsls	r3, r3, #16
 1538 02c0 43EA0263 		orr	r3, r3, r2, lsl #24
 1539 02c4 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1540 02c6 1343     		orrs	r3, r3, r2
 1541 02c8 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1542 02ca 43EA0223 		orr	r3, r3, r2, lsl #8
 1543 02ce 3F4A     		ldr	r2, .L205+4
 1544 02d0 9342     		cmp	r3, r2
 1545 02d2 4ED1     		bne	.L186
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
 1546              		.loc 1 2413 0
 1547 02d4 94F8E721 		ldrb	r2, [r4, #487]	@ zero_extendqisi2
 1548 02d8 94F8E631 		ldrb	r3, [r4, #486]	@ zero_extendqisi2
 1549 02dc 1B04     		lsls	r3, r3, #16
 1550 02de 43EA0263 		orr	r3, r3, r2, lsl #24
 1551 02e2 94F8E421 		ldrb	r2, [r4, #484]	@ zero_extendqisi2
 1552 02e6 1343     		orrs	r3, r3, r2
 1553 02e8 94F8E521 		ldrb	r2, [r4, #485]	@ zero_extendqisi2
 1554 02ec 43EA0223 		orr	r3, r3, r2, lsl #8
 1555 02f0 374A     		ldr	r2, .L205+8
 1556 02f2 9342     		cmp	r3, r2
 1557 02f4 3FD1     		bne	.L187
2416:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1558              		.loc 1 2416 0
 1559 02f6 94F8EB21 		ldrb	r2, [r4, #491]	@ zero_extendqisi2
 1560 02fa 94F8EA31 		ldrb	r3, [r4, #490]	@ zero_extendqisi2
 1561 02fe 1B04     		lsls	r3, r3, #16
ARM GAS  /tmp/ccktbAOa.s 			page 74


 1562 0300 43EA0263 		orr	r3, r3, r2, lsl #24
 1563 0304 94F8E821 		ldrb	r2, [r4, #488]	@ zero_extendqisi2
 1564 0308 1343     		orrs	r3, r3, r2
 1565 030a 94F8E921 		ldrb	r2, [r4, #489]	@ zero_extendqisi2
 1566 030e 43EA0223 		orr	r3, r3, r2, lsl #8
 1567 0312 C4F81032 		str	r3, [r4, #528]
2419:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1568              		.loc 1 2419 0
 1569 0316 94F8EF21 		ldrb	r2, [r4, #495]	@ zero_extendqisi2
 1570 031a 94F8EE31 		ldrb	r3, [r4, #494]	@ zero_extendqisi2
 1571 031e 1B04     		lsls	r3, r3, #16
 1572 0320 43EA0263 		orr	r3, r3, r2, lsl #24
 1573 0324 94F8EC21 		ldrb	r2, [r4, #492]	@ zero_extendqisi2
 1574 0328 1343     		orrs	r3, r3, r2
 1575 032a 94F8ED21 		ldrb	r2, [r4, #493]	@ zero_extendqisi2
 1576 032e 43EA0223 		orr	r3, r3, r2, lsl #8
 1577 0332 C4F80C32 		str	r3, [r4, #524]
 1578 0336 0321     		movs	r1, #3
 1579              	.LVL204:
 1580              	.L155:
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
 1581              		.loc 1 2425 0
 1582 0338 84F80012 		strb	r1, [r4, #512]
2426:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 1583              		.loc 1 2426 0
 1584 033c 254A     		ldr	r2, .L205+12
 1585 033e 1388     		ldrh	r3, [r2]
 1586 0340 0133     		adds	r3, r3, #1
 1587 0342 9BB2     		uxth	r3, r3
 1588 0344 1380     		strh	r3, [r2]	@ movhi
 1589 0346 A4F80632 		strh	r3, [r4, #518]	@ movhi
 1590              	.LVL205:
 1591              	.LBB4:
 1592              	.LBB5:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1593              		.loc 1 760 0
 1594 034a 234B     		ldr	r3, .L205+16
 1595 034c 1B68     		ldr	r3, [r3]
 1596 034e A342     		cmp	r3, r4
 1597 0350 02D1     		bne	.L156
 1598 0352 0022     		movs	r2, #0
 1599 0354 204B     		ldr	r3, .L205+16
 1600 0356 1A60     		str	r2, [r3]
 1601              	.L156:
 1602              	.LVL206:
 1603 0358 1F4B     		ldr	r3, .L205+16
 1604 035a DB68     		ldr	r3, [r3, #12]
 1605 035c 9C42     		cmp	r4, r3
 1606 035e 02D1     		bne	.L157
 1607 0360 0022     		movs	r2, #0
 1608 0362 1D4B     		ldr	r3, .L205+16
 1609 0364 DA60     		str	r2, [r3, #12]
 1610              	.L157:
 1611              	.LVL207:
 1612              	.LBE5:
 1613              	.LBE4:
2434:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccktbAOa.s 			page 75


 1614              		.loc 1 2434 0
 1615 0366 0020     		movs	r0, #0
 1616 0368 08E0     		b	.L191
 1617              	.LVL208:
 1618              	.L184:
 1619 036a 0321     		movs	r1, #3
 1620 036c E4E7     		b	.L155
 1621              	.L185:
 1622 036e 0321     		movs	r1, #3
 1623 0370 E2E7     		b	.L155
 1624              	.L186:
 1625 0372 0321     		movs	r1, #3
 1626 0374 E0E7     		b	.L155
 1627              	.L187:
 1628 0376 0321     		movs	r1, #3
 1629 0378 DEE7     		b	.L155
 1630              	.LVL209:
 1631              	.L161:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1632              		.loc 1 2294 0
 1633 037a 0B20     		movs	r0, #11
 1634              	.LVL210:
 1635              	.L191:
2435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1636              		.loc 1 2435 0
 1637 037c 04B0     		add	sp, sp, #16
 1638              	.LCFI17:
 1639              		.cfi_remember_state
 1640              		.cfi_def_cfa_offset 24
 1641              		@ sp needed
 1642 037e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1643              	.LVL211:
 1644              	.L162:
 1645              	.LCFI18:
 1646              		.cfi_restore_state
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1647              		.loc 1 2298 0
 1648 0382 0C20     		movs	r0, #12
 1649              	.LVL212:
 1650 0384 FAE7     		b	.L191
 1651              	.LVL213:
 1652              	.L163:
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1653              		.loc 1 2308 0
 1654 0386 0020     		movs	r0, #0
 1655              	.LVL214:
 1656 0388 F8E7     		b	.L191
 1657              	.LVL215:
 1658              	.L170:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1659              		.loc 1 2341 0
 1660 038a 0120     		movs	r0, #1
 1661 038c F6E7     		b	.L191
 1662              	.LVL216:
 1663              	.L176:
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1664              		.loc 1 2364 0
ARM GAS  /tmp/ccktbAOa.s 			page 76


 1665 038e 0D20     		movs	r0, #13
 1666 0390 F4E7     		b	.L191
 1667              	.LVL217:
 1668              	.L177:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1669              		.loc 1 2370 0
 1670 0392 0D20     		movs	r0, #13
 1671 0394 F2E7     		b	.L191
 1672              	.LVL218:
 1673              	.L178:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 1674              		.loc 1 2374 0
 1675 0396 0D20     		movs	r0, #13
 1676 0398 F0E7     		b	.L191
 1677              	.LVL219:
 1678              	.L179:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 1679              		.loc 1 2376 0
 1680 039a 0D20     		movs	r0, #13
 1681 039c EEE7     		b	.L191
 1682              	.LVL220:
 1683              	.L181:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 1684              		.loc 1 2387 0
 1685 039e 0D20     		movs	r0, #13
 1686 03a0 ECE7     		b	.L191
 1687              	.LVL221:
 1688              	.L182:
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1689              		.loc 1 2397 0
 1690 03a2 0D20     		movs	r0, #13
 1691 03a4 EAE7     		b	.L191
 1692              	.LVL222:
 1693              	.L183:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 1694              		.loc 1 2391 0
 1695 03a6 0D20     		movs	r0, #13
 1696 03a8 E8E7     		b	.L191
 1697              	.LVL223:
 1698              	.L188:
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1699              		.loc 1 2397 0
 1700 03aa 0D20     		movs	r0, #13
 1701 03ac E6E7     		b	.L191
 1702              	.LVL224:
 1703              	.L150:
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
 1704              		.loc 1 2382 0
 1705 03ae 0233     		adds	r3, r3, #2
 1706              	.LVL225:
 1707 03b0 C4F81432 		str	r3, [r4, #532]
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 1708              		.loc 1 2383 0
 1709 03b4 C4F81C62 		str	r6, [r4, #540]
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 1710              		.loc 1 2384 0
 1711 03b8 3544     		add	r5, r5, r6
ARM GAS  /tmp/ccktbAOa.s 			page 77


 1712 03ba C4F82052 		str	r5, [r4, #544]
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 1713              		.loc 1 2385 0
 1714 03be 0EEB0601 		add	r1, lr, r6
 1715 03c2 C4F82812 		str	r1, [r4, #552]
 1716 03c6 16E7     		b	.L158
 1717              	.L206:
 1718              		.align	2
 1719              	.L205:
 1720 03c8 55AAFFFF 		.word	-21931
 1721 03cc 52526141 		.word	1096897106
 1722 03d0 72724161 		.word	1631679090
 1723 03d4 00000000 		.word	.LANCHOR2
 1724 03d8 00000000 		.word	.LANCHOR0
 1725              		.cfi_endproc
 1726              	.LFE158:
 1728              		.section	.text.sync_fs,"ax",%progbits
 1729              		.align	1
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1733              		.fpu fpv4-sp-d16
 1735              	sync_fs:
 1736              	.LFB137:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 1737              		.loc 1 836 0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 0
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 1741              	.LVL226:
 1742 0000 10B5     		push	{r4, lr}
 1743              	.LCFI19:
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 4, -8
 1746              		.cfi_offset 14, -4
 1747 0002 0446     		mov	r4, r0
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 1748              		.loc 1 840 0
 1749 0004 FFF7FEFF 		bl	sync_window
 1750              	.LVL227:
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 1751              		.loc 1 841 0
 1752 0008 0346     		mov	r3, r0
 1753 000a 60B9     		cbnz	r0, .L208
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 1754              		.loc 1 843 0
 1755 000c 94F80032 		ldrb	r3, [r4, #512]	@ zero_extendqisi2
 1756 0010 032B     		cmp	r3, #3
 1757 0012 0AD0     		beq	.L211
 1758              	.LVL228:
 1759              	.L209:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1760              		.loc 1 857 0
 1761 0014 0022     		movs	r2, #0
 1762 0016 1146     		mov	r1, r2
 1763 0018 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1764 001c FFF7FEFF 		bl	disk_ioctl
ARM GAS  /tmp/ccktbAOa.s 			page 78


 1765              	.LVL229:
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 1766              		.loc 1 840 0
 1767 0020 031C     		adds	r3, r0, #0
 1768 0022 18BF     		it	ne
 1769 0024 0123     		movne	r3, #1
 1770              	.L208:
 1771              	.LVL230:
 862:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1772              		.loc 1 862 0
 1773 0026 1846     		mov	r0, r3
 1774 0028 10BD     		pop	{r4, pc}
 1775              	.LVL231:
 1776              	.L211:
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 1777              		.loc 1 843 0 discriminator 1
 1778 002a 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 1779 002e 012B     		cmp	r3, #1
 1780 0030 F0D1     		bne	.L209
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 1781              		.loc 1 845 0
 1782 0032 4FF40072 		mov	r2, #512
 1783 0036 0021     		movs	r1, #0
 1784 0038 2046     		mov	r0, r4
 1785              	.LVL232:
 1786 003a FFF7FEFF 		bl	mem_set
 1787              	.LVL233:
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 1788              		.loc 1 846 0
 1789 003e 5523     		movs	r3, #85
 1790 0040 84F8FE31 		strb	r3, [r4, #510]
 1791 0044 AA23     		movs	r3, #170
 1792 0046 84F8FF31 		strb	r3, [r4, #511]
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 1793              		.loc 1 847 0
 1794 004a 5223     		movs	r3, #82
 1795 004c 2370     		strb	r3, [r4]
 1796 004e 6370     		strb	r3, [r4, #1]
 1797 0050 6123     		movs	r3, #97
 1798 0052 A370     		strb	r3, [r4, #2]
 1799 0054 4122     		movs	r2, #65
 1800 0056 E270     		strb	r2, [r4, #3]
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 1801              		.loc 1 848 0
 1802 0058 7221     		movs	r1, #114
 1803 005a 84F8E411 		strb	r1, [r4, #484]
 1804 005e 84F8E511 		strb	r1, [r4, #485]
 1805 0062 84F8E621 		strb	r2, [r4, #486]
 1806 0066 84F8E731 		strb	r3, [r4, #487]
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 1807              		.loc 1 849 0
 1808 006a D4F81032 		ldr	r3, [r4, #528]
 1809 006e 84F8E831 		strb	r3, [r4, #488]
 1810 0072 C3F30722 		ubfx	r2, r3, #8, #8
 1811 0076 84F8E921 		strb	r2, [r4, #489]
 1812 007a 1A0C     		lsrs	r2, r3, #16
 1813 007c 84F8EA21 		strb	r2, [r4, #490]
ARM GAS  /tmp/ccktbAOa.s 			page 79


 1814 0080 1B0E     		lsrs	r3, r3, #24
 1815 0082 84F8EB31 		strb	r3, [r4, #491]
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 1816              		.loc 1 850 0
 1817 0086 D4F80C32 		ldr	r3, [r4, #524]
 1818 008a 84F8EC31 		strb	r3, [r4, #492]
 1819 008e C3F30722 		ubfx	r2, r3, #8, #8
 1820 0092 84F8ED21 		strb	r2, [r4, #493]
 1821 0096 1A0C     		lsrs	r2, r3, #16
 1822 0098 84F8EE21 		strb	r2, [r4, #494]
 1823 009c 1B0E     		lsrs	r3, r3, #24
 1824 009e 84F8EF31 		strb	r3, [r4, #495]
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 1825              		.loc 1 852 0
 1826 00a2 D4F81C22 		ldr	r2, [r4, #540]
 1827 00a6 0132     		adds	r2, r2, #1
 1828 00a8 C4F82C22 		str	r2, [r4, #556]
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 1829              		.loc 1 853 0
 1830 00ac 0123     		movs	r3, #1
 1831 00ae 2146     		mov	r1, r4
 1832 00b0 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1833 00b4 FFF7FEFF 		bl	disk_write
 1834              	.LVL234:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1835              		.loc 1 854 0
 1836 00b8 0023     		movs	r3, #0
 1837 00ba 84F80532 		strb	r3, [r4, #517]
 1838 00be A9E7     		b	.L209
 1839              		.cfi_endproc
 1840              	.LFE137:
 1842              		.section	.text.clust2sect,"ax",%progbits
 1843              		.align	1
 1844              		.global	clust2sect
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	clust2sect:
 1851              	.LFB138:
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 1852              		.loc 1 877 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857              	.LVL235:
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 1858              		.loc 1 878 0
 1859 0000 0239     		subs	r1, r1, #2
 1860              	.LVL236:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 1861              		.loc 1 879 0
 1862 0002 D0F81432 		ldr	r3, [r0, #532]
 1863 0006 023B     		subs	r3, r3, #2
 1864 0008 9942     		cmp	r1, r3
 880:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccktbAOa.s 			page 80


 1865              		.loc 1 880 0
 1866 000a 3DBF     		ittte	cc
 1867 000c 90F80232 		ldrbcc	r3, [r0, #514]	@ zero_extendqisi2
 1868 0010 D0F82802 		ldrcc	r0, [r0, #552]
 1869              	.LVL237:
 1870 0014 01FB0300 		mlacc	r0, r1, r3, r0
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 1871              		.loc 1 879 0
 1872 0018 0020     		movcs	r0, #0
 881:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1873              		.loc 1 881 0
 1874 001a 7047     		bx	lr
 1875              		.cfi_endproc
 1876              	.LFE138:
 1878              		.section	.text.get_fat,"ax",%progbits
 1879              		.align	1
 1880              		.global	get_fat
 1881              		.syntax unified
 1882              		.thumb
 1883              		.thumb_func
 1884              		.fpu fpv4-sp-d16
 1886              	get_fat:
 1887              	.LFB139:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 1888              		.loc 1 895 0
 1889              		.cfi_startproc
 1890              		@ args = 0, pretend = 0, frame = 0
 1891              		@ frame_needed = 0, uses_anonymous_args = 0
 1892              	.LVL238:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 1893              		.loc 1 901 0
 1894 0000 0129     		cmp	r1, #1
 1895 0002 65D9     		bls	.L221
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 1896              		.loc 1 895 0 discriminator 1
 1897 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1898              	.LCFI20:
 1899              		.cfi_def_cfa_offset 24
 1900              		.cfi_offset 3, -24
 1901              		.cfi_offset 4, -20
 1902              		.cfi_offset 5, -16
 1903              		.cfi_offset 6, -12
 1904              		.cfi_offset 7, -8
 1905              		.cfi_offset 14, -4
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 1906              		.loc 1 901 0 discriminator 1
 1907 0006 D0F81432 		ldr	r3, [r0, #532]
 1908 000a 9942     		cmp	r1, r3
 1909 000c 62D2     		bcs	.L222
 1910 000e 0C46     		mov	r4, r1
 1911 0010 0646     		mov	r6, r0
 1912              	.LVL239:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 1913              		.loc 1 907 0
 1914 0012 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 1915 0016 022B     		cmp	r3, #2
 1916 0018 2CD0     		beq	.L217
ARM GAS  /tmp/ccktbAOa.s 			page 81


 1917 001a 032B     		cmp	r3, #3
 1918 001c 3DD0     		beq	.L218
 1919 001e 012B     		cmp	r3, #1
 1920 0020 01D0     		beq	.L233
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1921              		.loc 1 930 0
 1922 0022 0120     		movs	r0, #1
 1923              	.LVL240:
 1924 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1925              	.LVL241:
 1926              	.L233:
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 1927              		.loc 1 909 0
 1928 0026 01EB5105 		add	r5, r1, r1, lsr #1
 1929              	.LVL242:
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 1930              		.loc 1 910 0
 1931 002a D0F82012 		ldr	r1, [r0, #544]
 1932              	.LVL243:
 1933 002e 01EB5521 		add	r1, r1, r5, lsr #9
 1934 0032 FFF7FEFF 		bl	move_window
 1935              	.LVL244:
 1936 0036 10B1     		cbz	r0, .L234
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1937              		.loc 1 905 0
 1938 0038 4FF0FF30 		mov	r0, #-1
 1939 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1940              	.LVL245:
 1941              	.L234:
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 1942              		.loc 1 911 0
 1943 003e 6F1C     		adds	r7, r5, #1
 1944              	.LVL246:
 1945 0040 C5F30805 		ubfx	r5, r5, #0, #9
 1946 0044 755D     		ldrb	r5, [r6, r5]	@ zero_extendqisi2
 1947              	.LVL247:
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 1948              		.loc 1 912 0
 1949 0046 D6F82012 		ldr	r1, [r6, #544]
 1950 004a 01EB5721 		add	r1, r1, r7, lsr #9
 1951 004e 3046     		mov	r0, r6
 1952 0050 FFF7FEFF 		bl	move_window
 1953              	.LVL248:
 1954 0054 10B1     		cbz	r0, .L235
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1955              		.loc 1 905 0
 1956 0056 4FF0FF30 		mov	r0, #-1
 1957 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1958              	.LVL249:
 1959              	.L235:
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 1960              		.loc 1 913 0
 1961 005c C7F30807 		ubfx	r7, r7, #0, #9
 1962              	.LVL250:
 1963 0060 F05D     		ldrb	r0, [r6, r7]	@ zero_extendqisi2
 1964 0062 45EA0020 		orr	r0, r5, r0, lsl #8
 1965              	.LVL251:
ARM GAS  /tmp/ccktbAOa.s 			page 82


 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 1966              		.loc 1 914 0
 1967 0066 14F0010F 		tst	r4, #1
 1968 006a 14BF     		ite	ne
 1969 006c 0009     		lsrne	r0, r0, #4
 1970              	.LVL252:
 1971 006e C0F30B00 		ubfxeq	r0, r0, #0, #12
 1972 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1973              	.LVL253:
 1974              	.L217:
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 1975              		.loc 1 918 0
 1976 0074 D0F82012 		ldr	r1, [r0, #544]
 1977              	.LVL254:
 1978 0078 01EB1421 		add	r1, r1, r4, lsr #8
 1979 007c FFF7FEFF 		bl	move_window
 1980              	.LVL255:
 1981 0080 10B1     		cbz	r0, .L236
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1982              		.loc 1 905 0
 1983 0082 4FF0FF30 		mov	r0, #-1
 1984 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1985              	.LVL256:
 1986              	.L236:
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 1987              		.loc 1 919 0
 1988 0088 6100     		lsls	r1, r4, #1
 1989 008a 01F4FF71 		and	r1, r1, #510
 1990              	.LVL257:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 1991              		.loc 1 920 0
 1992 008e 7318     		adds	r3, r6, r1
 1993              	.LVL258:
 1994 0090 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1995              	.LVL259:
 1996 0092 705C     		ldrb	r0, [r6, r1]	@ zero_extendqisi2
 1997 0094 40EA0320 		orr	r0, r0, r3, lsl #8
 1998              	.LVL260:
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1999              		.loc 1 921 0
 2000 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2001              	.LVL261:
 2002              	.L218:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 2003              		.loc 1 924 0
 2004 009a D0F82012 		ldr	r1, [r0, #544]
 2005              	.LVL262:
 2006 009e 01EBD411 		add	r1, r1, r4, lsr #7
 2007 00a2 FFF7FEFF 		bl	move_window
 2008              	.LVL263:
 2009 00a6 10B1     		cbz	r0, .L237
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2010              		.loc 1 905 0
 2011 00a8 4FF0FF30 		mov	r0, #-1
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2012              		.loc 1 935 0
 2013 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccktbAOa.s 			page 83


 2014              	.LVL264:
 2015              	.L237:
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 2016              		.loc 1 925 0
 2017 00ae A100     		lsls	r1, r4, #2
 2018 00b0 01F4FE71 		and	r1, r1, #508
 2019 00b4 7218     		adds	r2, r6, r1
 2020              	.LVL265:
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2021              		.loc 1 926 0
 2022 00b6 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 2023 00b8 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 2024 00ba 1B04     		lsls	r3, r3, #16
 2025 00bc 43EA0063 		orr	r3, r3, r0, lsl #24
 2026 00c0 705C     		ldrb	r0, [r6, r1]	@ zero_extendqisi2
 2027 00c2 1843     		orrs	r0, r0, r3
 2028 00c4 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 2029 00c6 40EA0320 		orr	r0, r0, r3, lsl #8
 2030 00ca 20F07040 		bic	r0, r0, #-268435456
 2031              	.LVL266:
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2032              		.loc 1 927 0
 2033 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2034              	.LVL267:
 2035              	.L221:
 2036              	.LCFI21:
 2037              		.cfi_def_cfa_offset 0
 2038              		.cfi_restore 3
 2039              		.cfi_restore 4
 2040              		.cfi_restore 5
 2041              		.cfi_restore 6
 2042              		.cfi_restore 7
 2043              		.cfi_restore 14
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2044              		.loc 1 902 0
 2045 00d0 0120     		movs	r0, #1
 2046              	.LVL268:
 2047 00d2 7047     		bx	lr
 2048              	.LVL269:
 2049              	.L222:
 2050              	.LCFI22:
 2051              		.cfi_def_cfa_offset 24
 2052              		.cfi_offset 3, -24
 2053              		.cfi_offset 4, -20
 2054              		.cfi_offset 5, -16
 2055              		.cfi_offset 6, -12
 2056              		.cfi_offset 7, -8
 2057              		.cfi_offset 14, -4
 2058 00d4 0120     		movs	r0, #1
 2059              	.LVL270:
 2060 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2061              		.cfi_endproc
 2062              	.LFE139:
 2064              		.section	.text.dir_sdi,"ax",%progbits
 2065              		.align	1
 2066              		.syntax unified
 2067              		.thumb
ARM GAS  /tmp/ccktbAOa.s 			page 84


 2068              		.thumb_func
 2069              		.fpu fpv4-sp-d16
 2071              	dir_sdi:
 2072              	.LFB144:
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
 2073              		.loc 1 1157 0
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 0
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              	.LVL271:
 2078 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2079              	.LCFI23:
 2080              		.cfi_def_cfa_offset 24
 2081              		.cfi_offset 3, -24
 2082              		.cfi_offset 4, -20
 2083              		.cfi_offset 5, -16
 2084              		.cfi_offset 6, -12
 2085              		.cfi_offset 7, -8
 2086              		.cfi_offset 14, -4
 2087 0002 0546     		mov	r5, r0
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
 2088              		.loc 1 1162 0
 2089 0004 A0F80612 		strh	r1, [r0, #518]	@ movhi
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
 2090              		.loc 1 1163 0
 2091 0008 D0F80842 		ldr	r4, [r0, #520]
 2092              	.LVL272:
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2093              		.loc 1 1164 0
 2094 000c 012C     		cmp	r4, #1
 2095 000e 4FD0     		beq	.L245
 2096 0010 0E46     		mov	r6, r1
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2097              		.loc 1 1164 0 is_stmt 0 discriminator 1
 2098 0012 D0F80032 		ldr	r3, [r0, #512]
 2099 0016 D3F81422 		ldr	r2, [r3, #532]
 2100 001a 9442     		cmp	r4, r2
 2101 001c 01D3     		bcc	.L255
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2102              		.loc 1 1165 0 is_stmt 1
 2103 001e 0220     		movs	r0, #2
 2104              	.LVL273:
 2105 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2106              	.LVL274:
 2107              	.L255:
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2108              		.loc 1 1166 0
 2109 0022 74B9     		cbnz	r4, .L240
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2110              		.loc 1 1166 0 is_stmt 0 discriminator 1
 2111 0024 93F80022 		ldrb	r2, [r3, #512]	@ zero_extendqisi2
 2112 0028 032A     		cmp	r2, #3
 2113 002a 05D0     		beq	.L256
 2114              	.LVL275:
 2115              	.L241:
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
 2116              		.loc 1 1170 0 is_stmt 1
ARM GAS  /tmp/ccktbAOa.s 			page 85


 2117 002c B3F80822 		ldrh	r2, [r3, #520]
 2118 0030 9642     		cmp	r6, r2
 2119 0032 0DD3     		bcc	.L257
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
 2120              		.loc 1 1171 0
 2121 0034 0220     		movs	r0, #2
 2122              	.LVL276:
 2123 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2124              	.LVL277:
 2125              	.L256:
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2126              		.loc 1 1167 0
 2127 0038 D3F82422 		ldr	r2, [r3, #548]
 2128              	.LVL278:
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
 2129              		.loc 1 1169 0
 2130 003c 002A     		cmp	r2, #0
 2131 003e F5D0     		beq	.L241
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2132              		.loc 1 1167 0
 2133 0040 1446     		mov	r4, r2
 2134              	.LVL279:
 2135              	.L240:
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 2136              		.loc 1 1175 0
 2137 0042 93F80272 		ldrb	r7, [r3, #514]	@ zero_extendqisi2
 2138 0046 3F01     		lsls	r7, r7, #4
 2139              	.LVL280:
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 2140              		.loc 1 1176 0
 2141 0048 BE42     		cmp	r6, r7
 2142 004a 1DD3     		bcc	.L243
 2143 004c F61B     		subs	r6, r6, r7
 2144 004e 07E0     		b	.L244
 2145              	.LVL281:
 2146              	.L257:
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2147              		.loc 1 1172 0
 2148 0050 D3F82402 		ldr	r0, [r3, #548]
 2149              	.LVL282:
 2150              	.L242:
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
 2151              		.loc 1 1185 0
 2152 0054 C5F80C42 		str	r4, [r5, #524]
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 2153              		.loc 1 1186 0
 2154 0058 E0B9     		cbnz	r0, .L258
 2155 005a 0220     		movs	r0, #2
 2156              	.LVL283:
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2157              		.loc 1 1191 0
 2158 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2159              	.LVL284:
 2160              	.L252:
 2161 005e 1E46     		mov	r6, r3
 2162              	.LVL285:
 2163              	.L244:
ARM GAS  /tmp/ccktbAOa.s 			page 86


1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2164              		.loc 1 1177 0
 2165 0060 2146     		mov	r1, r4
 2166 0062 D5F80002 		ldr	r0, [r5, #512]
 2167 0066 FFF7FEFF 		bl	get_fat
 2168              	.LVL286:
 2169 006a 0446     		mov	r4, r0
 2170              	.LVL287:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2171              		.loc 1 1178 0
 2172 006c B0F1FF3F 		cmp	r0, #-1
 2173 0070 20D0     		beq	.L249
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2174              		.loc 1 1179 0
 2175 0072 0128     		cmp	r0, #1
 2176 0074 20D9     		bls	.L250
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2177              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2178 0076 D5F80032 		ldr	r3, [r5, #512]
 2179 007a D3F81432 		ldr	r3, [r3, #532]
 2180 007e 9842     		cmp	r0, r3
 2181 0080 1CD2     		bcs	.L251
 2182              	.LVL288:
 2183 0082 F31B     		subs	r3, r6, r7
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 2184              		.loc 1 1176 0 is_stmt 1
 2185 0084 BE42     		cmp	r6, r7
 2186 0086 EAD2     		bcs	.L252
 2187              	.LVL289:
 2188              	.L243:
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2189              		.loc 1 1183 0
 2190 0088 2146     		mov	r1, r4
 2191 008a D5F80002 		ldr	r0, [r5, #512]
 2192 008e FFF7FEFF 		bl	clust2sect
 2193              	.LVL290:
 2194 0092 DFE7     		b	.L242
 2195              	.LVL291:
 2196              	.L258:
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
 2197              		.loc 1 1187 0
 2198 0094 00EB1610 		add	r0, r0, r6, lsr #4
 2199              	.LVL292:
 2200 0098 C5F81002 		str	r0, [r5, #528]
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2201              		.loc 1 1188 0
 2202 009c 06F00F06 		and	r6, r6, #15
 2203              	.LVL293:
 2204 00a0 D5F80032 		ldr	r3, [r5, #512]
 2205 00a4 03EB4616 		add	r6, r3, r6, lsl #5
 2206 00a8 C5F81462 		str	r6, [r5, #532]
1190:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2207              		.loc 1 1190 0
 2208 00ac 0020     		movs	r0, #0
 2209 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2210              	.LVL294:
 2211              	.L245:
ARM GAS  /tmp/ccktbAOa.s 			page 87


1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2212              		.loc 1 1165 0
 2213 00b0 0220     		movs	r0, #2
 2214              	.LVL295:
 2215 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2216              	.LVL296:
 2217              	.L249:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2218              		.loc 1 1178 0
 2219 00b4 0120     		movs	r0, #1
 2220              	.LVL297:
 2221 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2222              	.LVL298:
 2223              	.L250:
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
 2224              		.loc 1 1180 0
 2225 00b8 0220     		movs	r0, #2
 2226              	.LVL299:
 2227 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2228              	.LVL300:
 2229              	.L251:
 2230 00bc 0220     		movs	r0, #2
 2231              	.LVL301:
 2232 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2233              		.cfi_endproc
 2234              	.LFE144:
 2236              		.section	.text.dir_remove,"ax",%progbits
 2237              		.align	1
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2241              		.fpu fpv4-sp-d16
 2243              	dir_remove:
 2244              	.LFB152:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2245              		.loc 1 1729 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 0
 2248              		@ frame_needed = 0, uses_anonymous_args = 0
 2249              	.LVL302:
 2250 0000 38B5     		push	{r3, r4, r5, lr}
 2251              	.LCFI24:
 2252              		.cfi_def_cfa_offset 16
 2253              		.cfi_offset 3, -16
 2254              		.cfi_offset 4, -12
 2255              		.cfi_offset 5, -8
 2256              		.cfi_offset 14, -4
 2257 0002 0446     		mov	r4, r0
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2258              		.loc 1 1750 0
 2259 0004 B0F80612 		ldrh	r1, [r0, #518]
 2260 0008 FFF7FEFF 		bl	dir_sdi
 2261              	.LVL303:
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 2262              		.loc 1 1751 0
 2263 000c 0546     		mov	r5, r0
 2264 000e 08B1     		cbz	r0, .L262
ARM GAS  /tmp/ccktbAOa.s 			page 88


 2265              	.LVL304:
 2266              	.L260:
1762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2267              		.loc 1 1762 0
 2268 0010 2846     		mov	r0, r5
 2269 0012 38BD     		pop	{r3, r4, r5, pc}
 2270              	.LVL305:
 2271              	.L262:
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 2272              		.loc 1 1752 0
 2273 0014 D4F81012 		ldr	r1, [r4, #528]
 2274 0018 D4F80002 		ldr	r0, [r4, #512]
 2275              	.LVL306:
 2276 001c FFF7FEFF 		bl	move_window
 2277              	.LVL307:
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
 2278              		.loc 1 1753 0
 2279 0020 0546     		mov	r5, r0
 2280 0022 0028     		cmp	r0, #0
 2281 0024 F4D1     		bne	.L260
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
 2282              		.loc 1 1754 0
 2283 0026 2022     		movs	r2, #32
 2284 0028 0021     		movs	r1, #0
 2285 002a D4F81402 		ldr	r0, [r4, #532]
 2286              	.LVL308:
 2287 002e FFF7FEFF 		bl	mem_set
 2288              	.LVL309:
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
 2289              		.loc 1 1755 0
 2290 0032 D4F81432 		ldr	r3, [r4, #532]
 2291 0036 E522     		movs	r2, #229
 2292 0038 1A70     		strb	r2, [r3]
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2293              		.loc 1 1756 0
 2294 003a D4F80032 		ldr	r3, [r4, #512]
 2295 003e 0122     		movs	r2, #1
 2296 0040 83F80422 		strb	r2, [r3, #516]
 2297 0044 E4E7     		b	.L260
 2298              		.cfi_endproc
 2299              	.LFE152:
 2301              		.section	.text.put_fat,"ax",%progbits
 2302              		.align	1
 2303              		.global	put_fat
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2307              		.fpu fpv4-sp-d16
 2309              	put_fat:
 2310              	.LFB140:
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2311              		.loc 1 951 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315              	.LVL310:
 2316 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/ccktbAOa.s 			page 89


 2317              	.LCFI25:
 2318              		.cfi_def_cfa_offset 32
 2319              		.cfi_offset 3, -32
 2320              		.cfi_offset 4, -28
 2321              		.cfi_offset 5, -24
 2322              		.cfi_offset 6, -20
 2323              		.cfi_offset 7, -16
 2324              		.cfi_offset 8, -12
 2325              		.cfi_offset 9, -8
 2326              		.cfi_offset 14, -4
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 2327              		.loc 1 957 0
 2328 0004 0129     		cmp	r1, #1
 2329 0006 40F28C80 		bls	.L272
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 2330              		.loc 1 957 0 is_stmt 0 discriminator 1
 2331 000a D0F81432 		ldr	r3, [r0, #532]
 2332 000e 9942     		cmp	r1, r3
 2333 0010 01D3     		bcc	.L282
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2334              		.loc 1 958 0 is_stmt 1
 2335 0012 0227     		movs	r7, #2
 2336 0014 86E0     		b	.L277
 2337              	.L282:
 2338 0016 1646     		mov	r6, r2
 2339 0018 0C46     		mov	r4, r1
 2340 001a 0546     		mov	r5, r0
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2341              		.loc 1 961 0
 2342 001c 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 2343 0020 022B     		cmp	r3, #2
 2344 0022 4DD0     		beq	.L265
 2345 0024 032B     		cmp	r3, #3
 2346 0026 5FD0     		beq	.L266
 2347 0028 012B     		cmp	r3, #1
 2348 002a 01D0     		beq	.L283
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2349              		.loc 1 994 0
 2350 002c 0227     		movs	r7, #2
 2351 002e 79E0     		b	.L277
 2352              	.L283:
 2353              	.LVL311:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2354              		.loc 1 963 0
 2355 0030 01EB5108 		add	r8, r1, r1, lsr #1
 2356              	.LVL312:
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2357              		.loc 1 964 0
 2358 0034 D0F82012 		ldr	r1, [r0, #544]
 2359              	.LVL313:
 2360 0038 01EB5821 		add	r1, r1, r8, lsr #9
 2361 003c FFF7FEFF 		bl	move_window
 2362              	.LVL314:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 2363              		.loc 1 965 0
 2364 0040 0746     		mov	r7, r0
 2365 0042 0028     		cmp	r0, #0
ARM GAS  /tmp/ccktbAOa.s 			page 90


 2366 0044 6ED1     		bne	.L277
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2367              		.loc 1 966 0
 2368 0046 08F10109 		add	r9, r8, #1
 2369              	.LVL315:
 2370 004a C8F30808 		ubfx	r8, r8, #0, #9
 2371              	.LVL316:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2372              		.loc 1 967 0
 2373 004e 14F0010F 		tst	r4, #1
 2374 0052 1DD0     		beq	.L268
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2375              		.loc 1 967 0 is_stmt 0 discriminator 1
 2376 0054 15F80830 		ldrb	r3, [r5, r8]	@ zero_extendqisi2
 2377 0058 03F00F03 		and	r3, r3, #15
 2378 005c 43EA0613 		orr	r3, r3, r6, lsl #4
 2379 0060 05F80830 		strb	r3, [r5, r8]
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2380              		.loc 1 968 0 is_stmt 1 discriminator 1
 2381 0064 0123     		movs	r3, #1
 2382 0066 85F80432 		strb	r3, [r5, #516]
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2383              		.loc 1 969 0 discriminator 1
 2384 006a D5F82012 		ldr	r1, [r5, #544]
 2385 006e 01EB5921 		add	r1, r1, r9, lsr #9
 2386 0072 2846     		mov	r0, r5
 2387              	.LVL317:
 2388 0074 FFF7FEFF 		bl	move_window
 2389              	.LVL318:
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 2390              		.loc 1 970 0 discriminator 1
 2391 0078 0028     		cmp	r0, #0
 2392 007a 56D1     		bne	.L284
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2393              		.loc 1 971 0
 2394 007c C9F30809 		ubfx	r9, r9, #0, #9
 2395              	.LVL319:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2396              		.loc 1 972 0
 2397 0080 C6F30712 		ubfx	r2, r6, #4, #8
 2398              	.LVL320:
 2399              	.L271:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2400              		.loc 1 972 0 is_stmt 0 discriminator 4
 2401 0084 05F80920 		strb	r2, [r5, r9]
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2402              		.loc 1 973 0 is_stmt 1 discriminator 4
 2403 0088 0123     		movs	r3, #1
 2404 008a 85F80432 		strb	r3, [r5, #516]
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2405              		.loc 1 974 0 discriminator 4
 2406 008e 49E0     		b	.L277
 2407              	.LVL321:
 2408              	.L268:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2409              		.loc 1 967 0 discriminator 2
 2410 0090 05F80860 		strb	r6, [r5, r8]
ARM GAS  /tmp/ccktbAOa.s 			page 91


 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2411              		.loc 1 968 0 discriminator 2
 2412 0094 0123     		movs	r3, #1
 2413 0096 85F80432 		strb	r3, [r5, #516]
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2414              		.loc 1 969 0 discriminator 2
 2415 009a D5F82012 		ldr	r1, [r5, #544]
 2416 009e 01EB5921 		add	r1, r1, r9, lsr #9
 2417 00a2 2846     		mov	r0, r5
 2418              	.LVL322:
 2419 00a4 FFF7FEFF 		bl	move_window
 2420              	.LVL323:
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 2421              		.loc 1 970 0 discriminator 2
 2422 00a8 0028     		cmp	r0, #0
 2423 00aa 40D1     		bne	.L285
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2424              		.loc 1 971 0
 2425 00ac C9F30809 		ubfx	r9, r9, #0, #9
 2426              	.LVL324:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2427              		.loc 1 972 0
 2428 00b0 15F80930 		ldrb	r3, [r5, r9]	@ zero_extendqisi2
 2429 00b4 23F00F03 		bic	r3, r3, #15
 2430 00b8 C6F30322 		ubfx	r2, r6, #8, #4
 2431 00bc 1A43     		orrs	r2, r2, r3
 2432 00be E1E7     		b	.L271
 2433              	.LVL325:
 2434              	.L265:
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2435              		.loc 1 977 0
 2436 00c0 D0F82012 		ldr	r1, [r0, #544]
 2437              	.LVL326:
 2438 00c4 01EB1421 		add	r1, r1, r4, lsr #8
 2439 00c8 FFF7FEFF 		bl	move_window
 2440              	.LVL327:
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 2441              		.loc 1 978 0
 2442 00cc 0746     		mov	r7, r0
 2443 00ce 48BB     		cbnz	r0, .L277
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 2444              		.loc 1 979 0
 2445 00d0 6100     		lsls	r1, r4, #1
 2446 00d2 01F4FF71 		and	r1, r1, #510
 2447              	.LVL328:
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2448              		.loc 1 980 0
 2449 00d6 6E54     		strb	r6, [r5, r1]
 2450 00d8 2944     		add	r1, r1, r5
 2451              	.LVL329:
 2452 00da C6F30722 		ubfx	r2, r6, #8, #8
 2453 00de 4A70     		strb	r2, [r1, #1]
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2454              		.loc 1 981 0
 2455 00e0 0123     		movs	r3, #1
 2456 00e2 85F80432 		strb	r3, [r5, #516]
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 92


 2457              		.loc 1 982 0
 2458 00e6 1DE0     		b	.L277
 2459              	.LVL330:
 2460              	.L266:
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2461              		.loc 1 985 0
 2462 00e8 D0F82012 		ldr	r1, [r0, #544]
 2463              	.LVL331:
 2464 00ec 01EBD411 		add	r1, r1, r4, lsr #7
 2465 00f0 FFF7FEFF 		bl	move_window
 2466              	.LVL332:
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 2467              		.loc 1 986 0
 2468 00f4 0746     		mov	r7, r0
 2469 00f6 A8B9     		cbnz	r0, .L277
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 2470              		.loc 1 987 0
 2471 00f8 A100     		lsls	r1, r4, #2
 2472 00fa 01F4FE71 		and	r1, r1, #508
 2473 00fe 6B18     		adds	r3, r5, r1
 2474              	.LVL333:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 2475              		.loc 1 988 0
 2476 0100 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2477 0102 1206     		lsls	r2, r2, #24
 2478 0104 02F07042 		and	r2, r2, #-268435456
 2479 0108 3243     		orrs	r2, r2, r6
 2480              	.LVL334:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2481              		.loc 1 989 0
 2482 010a 6A54     		strb	r2, [r5, r1]
 2483 010c C2F30721 		ubfx	r1, r2, #8, #8
 2484 0110 5970     		strb	r1, [r3, #1]
 2485 0112 110C     		lsrs	r1, r2, #16
 2486 0114 9970     		strb	r1, [r3, #2]
 2487 0116 120E     		lsrs	r2, r2, #24
 2488              	.LVL335:
 2489 0118 DA70     		strb	r2, [r3, #3]
 2490              	.LVL336:
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2491              		.loc 1 990 0
 2492 011a 0123     		movs	r3, #1
 2493              	.LVL337:
 2494 011c 85F80432 		strb	r3, [r5, #516]
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2495              		.loc 1 991 0
 2496 0120 00E0     		b	.L277
 2497              	.LVL338:
 2498              	.L272:
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2499              		.loc 1 958 0
 2500 0122 0227     		movs	r7, #2
 2501              	.LVL339:
 2502              	.L277:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2503              		.loc 1 999 0
 2504 0124 3846     		mov	r0, r7
ARM GAS  /tmp/ccktbAOa.s 			page 93


 2505 0126 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2506              	.LVL340:
 2507              	.L284:
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2508              		.loc 1 969 0
 2509 012a 0746     		mov	r7, r0
 2510 012c FAE7     		b	.L277
 2511              	.L285:
 2512 012e 0746     		mov	r7, r0
 998:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2513              		.loc 1 998 0
 2514 0130 F8E7     		b	.L277
 2515              		.cfi_endproc
 2516              	.LFE140:
 2518              		.section	.text.create_chain,"ax",%progbits
 2519              		.align	1
 2520              		.syntax unified
 2521              		.thumb
 2522              		.thumb_func
 2523              		.fpu fpv4-sp-d16
 2525              	create_chain:
 2526              	.LFB142:
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 2527              		.loc 1 1067 0
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531              	.LVL341:
 2532 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2533              	.LCFI26:
 2534              		.cfi_def_cfa_offset 24
 2535              		.cfi_offset 3, -24
 2536              		.cfi_offset 4, -20
 2537              		.cfi_offset 5, -16
 2538              		.cfi_offset 6, -12
 2539              		.cfi_offset 7, -8
 2540              		.cfi_offset 14, -4
 2541 0002 0546     		mov	r5, r0
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
 2542              		.loc 1 1072 0
 2543 0004 0F46     		mov	r7, r1
 2544 0006 49B9     		cbnz	r1, .L287
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 2545              		.loc 1 1073 0
 2546 0008 D0F80C62 		ldr	r6, [r0, #524]
 2547              	.LVL342:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2548              		.loc 1 1074 0
 2549 000c A6B1     		cbz	r6, .L295
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2550              		.loc 1 1074 0 is_stmt 0 discriminator 2
 2551 000e D0F81432 		ldr	r3, [r0, #532]
 2552 0012 9E42     		cmp	r6, r3
 2553 0014 28BF     		it	cs
 2554 0016 0126     		movcs	r6, #1
 2555              	.LVL343:
 2556              	.L288:
ARM GAS  /tmp/ccktbAOa.s 			page 94


1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 2557              		.loc 1 1084 0 is_stmt 1
 2558 0018 3446     		mov	r4, r6
 2559 001a 1CE0     		b	.L292
 2560              	.LVL344:
 2561              	.L287:
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
 2562              		.loc 1 1077 0
 2563 001c FFF7FEFF 		bl	get_fat
 2564              	.LVL345:
 2565 0020 0346     		mov	r3, r0
 2566              	.LVL346:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2567              		.loc 1 1078 0
 2568 0022 0128     		cmp	r0, #1
 2569 0024 49D9     		bls	.L296
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2570              		.loc 1 1079 0
 2571 0026 B0F1FF3F 		cmp	r0, #-1
 2572 002a 4BD0     		beq	.L286
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 2573              		.loc 1 1080 0
 2574 002c D5F81422 		ldr	r2, [r5, #532]
 2575 0030 9042     		cmp	r0, r2
 2576 0032 47D3     		bcc	.L286
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2577              		.loc 1 1081 0
 2578 0034 3E46     		mov	r6, r7
 2579 0036 EFE7     		b	.L288
 2580              	.LVL347:
 2581              	.L295:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2582              		.loc 1 1074 0
 2583 0038 0126     		movs	r6, #1
 2584              	.LVL348:
 2585 003a EDE7     		b	.L288
 2586              	.LVL349:
 2587              	.L290:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 2588              		.loc 1 1091 0
 2589 003c 2146     		mov	r1, r4
 2590 003e 2846     		mov	r0, r5
 2591 0040 FFF7FEFF 		bl	get_fat
 2592              	.LVL350:
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 2593              		.loc 1 1092 0
 2594 0044 0346     		mov	r3, r0
 2595 0046 78B1     		cbz	r0, .L291
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 2596              		.loc 1 1093 0
 2597 0048 B0F1FF3F 		cmp	r0, #-1
 2598 004c 3AD0     		beq	.L286
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 2599              		.loc 1 1093 0 is_stmt 0 discriminator 1
 2600 004e 0128     		cmp	r0, #1
 2601 0050 38D0     		beq	.L286
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccktbAOa.s 			page 95


 2602              		.loc 1 1095 0 is_stmt 1
 2603 0052 B442     		cmp	r4, r6
 2604 0054 35D0     		beq	.L302
 2605              	.LVL351:
 2606              	.L292:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
 2607              		.loc 1 1086 0
 2608 0056 0134     		adds	r4, r4, #1
 2609              	.LVL352:
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
 2610              		.loc 1 1087 0
 2611 0058 D5F81432 		ldr	r3, [r5, #532]
 2612 005c 9C42     		cmp	r4, r3
 2613 005e EDD3     		bcc	.L290
 2614              	.LVL353:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2615              		.loc 1 1089 0
 2616 0060 012E     		cmp	r6, #1
 2617 0062 2CD9     		bls	.L297
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 2618              		.loc 1 1088 0
 2619 0064 0224     		movs	r4, #2
 2620 0066 E9E7     		b	.L290
 2621              	.LVL354:
 2622              	.L291:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
 2623              		.loc 1 1098 0
 2624 0068 6FF07042 		mvn	r2, #-268435456
 2625 006c 2146     		mov	r1, r4
 2626 006e 2846     		mov	r0, r5
 2627              	.LVL355:
 2628 0070 FFF7FEFF 		bl	put_fat
 2629              	.LVL356:
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 2630              		.loc 1 1099 0
 2631 0074 0346     		mov	r3, r0
 2632 0076 D0B9     		cbnz	r0, .L293
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 2633              		.loc 1 1099 0 is_stmt 0 discriminator 1
 2634 0078 8FB9     		cbnz	r7, .L303
 2635              	.L294:
 2636              	.LVL357:
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
 2637              		.loc 1 1103 0 is_stmt 1
 2638 007a C5F80C42 		str	r4, [r5, #524]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
 2639              		.loc 1 1104 0
 2640 007e D5F81032 		ldr	r3, [r5, #528]
 2641 0082 B3F1FF3F 		cmp	r3, #-1
 2642 0086 1FD0     		beq	.L299
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 2643              		.loc 1 1105 0
 2644 0088 013B     		subs	r3, r3, #1
 2645 008a C5F81032 		str	r3, [r5, #528]
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2646              		.loc 1 1106 0
 2647 008e 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
ARM GAS  /tmp/ccktbAOa.s 			page 96


 2648 0092 43F00103 		orr	r3, r3, #1
 2649 0096 85F80532 		strb	r3, [r5, #517]
 2650 009a 2346     		mov	r3, r4
 2651 009c 12E0     		b	.L286
 2652              	.LVL358:
 2653              	.L303:
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2654              		.loc 1 1100 0
 2655 009e 2246     		mov	r2, r4
 2656 00a0 3946     		mov	r1, r7
 2657 00a2 2846     		mov	r0, r5
 2658              	.LVL359:
 2659 00a4 FFF7FEFF 		bl	put_fat
 2660              	.LVL360:
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
 2661              		.loc 1 1102 0
 2662 00a8 0346     		mov	r3, r0
 2663 00aa 0028     		cmp	r0, #0
 2664 00ac E5D0     		beq	.L294
 2665              	.L293:
 2666              	.LVL361:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2667              		.loc 1 1109 0
 2668 00ae 012B     		cmp	r3, #1
 2669 00b0 0CBF     		ite	eq
 2670 00b2 4FF0FF33 		moveq	r3, #-1
 2671              	.LVL362:
 2672 00b6 0123     		movne	r3, #1
 2673 00b8 04E0     		b	.L286
 2674              	.LVL363:
 2675              	.L296:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 2676              		.loc 1 1078 0
 2677 00ba 0123     		movs	r3, #1
 2678 00bc 02E0     		b	.L286
 2679              	.LVL364:
 2680              	.L297:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2681              		.loc 1 1089 0
 2682 00be 0023     		movs	r3, #0
 2683 00c0 00E0     		b	.L286
 2684              	.LVL365:
 2685              	.L302:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2686              		.loc 1 1095 0
 2687 00c2 0023     		movs	r3, #0
 2688              	.LVL366:
 2689              	.L286:
1113:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2690              		.loc 1 1113 0
 2691 00c4 1846     		mov	r0, r3
 2692 00c6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2693              	.LVL367:
 2694              	.L299:
 2695 00c8 2346     		mov	r3, r4
 2696 00ca FBE7     		b	.L286
 2697              		.cfi_endproc
ARM GAS  /tmp/ccktbAOa.s 			page 97


 2698              	.LFE142:
 2700              		.section	.text.dir_next,"ax",%progbits
 2701              		.align	1
 2702              		.syntax unified
 2703              		.thumb
 2704              		.thumb_func
 2705              		.fpu fpv4-sp-d16
 2707              	dir_next:
 2708              	.LFB145:
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
 2709              		.loc 1 1205 0
 2710              		.cfi_startproc
 2711              		@ args = 0, pretend = 0, frame = 0
 2712              		@ frame_needed = 0, uses_anonymous_args = 0
 2713              	.LVL368:
 2714 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2715              	.LCFI27:
 2716              		.cfi_def_cfa_offset 32
 2717              		.cfi_offset 3, -32
 2718              		.cfi_offset 4, -28
 2719              		.cfi_offset 5, -24
 2720              		.cfi_offset 6, -20
 2721              		.cfi_offset 7, -16
 2722              		.cfi_offset 8, -12
 2723              		.cfi_offset 9, -8
 2724              		.cfi_offset 14, -4
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
 2725              		.loc 1 1213 0
 2726 0004 B0F80642 		ldrh	r4, [r0, #518]
 2727 0008 0134     		adds	r4, r4, #1
 2728              	.LVL369:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 2729              		.loc 1 1214 0
 2730 000a A3B2     		uxth	r3, r4
 2731 000c 13B9     		cbnz	r3, .L323
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2732              		.loc 1 1215 0
 2733 000e 0420     		movs	r0, #4
 2734              	.LVL370:
 2735 0010 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2736              	.LVL371:
 2737              	.L323:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 2738              		.loc 1 1214 0 discriminator 1
 2739 0014 D0F81032 		ldr	r3, [r0, #528]
 2740 0018 13B9     		cbnz	r3, .L324
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2741              		.loc 1 1215 0
 2742 001a 0420     		movs	r0, #4
 2743              	.LVL372:
 2744 001c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2745              	.LVL373:
 2746              	.L324:
 2747 0020 0E46     		mov	r6, r1
 2748 0022 0546     		mov	r5, r0
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
 2749              		.loc 1 1217 0
ARM GAS  /tmp/ccktbAOa.s 			page 98


 2750 0024 14F00F07 		ands	r7, r4, #15
 2751 0028 16D1     		bne	.L306
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2752              		.loc 1 1218 0
 2753 002a 0133     		adds	r3, r3, #1
 2754 002c C0F81032 		str	r3, [r0, #528]
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
 2755              		.loc 1 1220 0
 2756 0030 D0F80C12 		ldr	r1, [r0, #524]
 2757              	.LVL374:
 2758 0034 41B9     		cbnz	r1, .L307
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
 2759              		.loc 1 1221 0
 2760 0036 D0F80032 		ldr	r3, [r0, #512]
 2761 003a B3F80832 		ldrh	r3, [r3, #520]
 2762 003e 9C42     		cmp	r4, r3
 2763 0040 0AD3     		bcc	.L306
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2764              		.loc 1 1222 0
 2765 0042 0420     		movs	r0, #4
 2766              	.LVL375:
 2767 0044 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2768              	.LVL376:
 2769              	.L307:
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
 2770              		.loc 1 1225 0
 2771 0048 D0F80002 		ldr	r0, [r0, #512]
 2772              	.LVL377:
 2773 004c 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 2774 0050 013B     		subs	r3, r3, #1
 2775 0052 13EA1418 		ands	r8, r3, r4, lsr #4
 2776 0056 0AD0     		beq	.L325
 2777              	.LVL378:
 2778              	.L306:
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
 2779              		.loc 1 1257 0
 2780 0058 A5F80642 		strh	r4, [r5, #518]	@ movhi
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2781              		.loc 1 1258 0
 2782 005c D5F80032 		ldr	r3, [r5, #512]
 2783 0060 03EB4713 		add	r3, r3, r7, lsl #5
 2784 0064 C5F81432 		str	r3, [r5, #532]
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2785              		.loc 1 1260 0
 2786 0068 0020     		movs	r0, #0
 2787 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2788              	.LVL379:
 2789              	.L325:
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
 2790              		.loc 1 1226 0
 2791 006e FFF7FEFF 		bl	get_fat
 2792              	.LVL380:
 2793 0072 8146     		mov	r9, r0
 2794              	.LVL381:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2795              		.loc 1 1227 0
 2796 0074 0128     		cmp	r0, #1
ARM GAS  /tmp/ccktbAOa.s 			page 99


 2797 0076 57D9     		bls	.L314
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 2798              		.loc 1 1228 0
 2799 0078 B0F1FF3F 		cmp	r0, #-1
 2800 007c 57D0     		beq	.L315
1229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 2801              		.loc 1 1229 0
 2802 007e D5F80002 		ldr	r0, [r5, #512]
 2803              	.LVL382:
 2804 0082 D0F81432 		ldr	r3, [r0, #532]
 2805 0086 9945     		cmp	r9, r3
 2806 0088 44D3     		bcc	.L308
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 2807              		.loc 1 1231 0
 2808 008a 16B9     		cbnz	r6, .L326
 2809 008c 0420     		movs	r0, #4
 2810 008e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2811              	.LVL383:
 2812              	.L326:
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 2813              		.loc 1 1232 0
 2814 0092 D5F80C12 		ldr	r1, [r5, #524]
 2815 0096 FFF7FEFF 		bl	create_chain
 2816              	.LVL384:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 2817              		.loc 1 1233 0
 2818 009a 8146     		mov	r9, r0
 2819 009c 10B9     		cbnz	r0, .L327
 2820 009e 0720     		movs	r0, #7
 2821              	.LVL385:
 2822 00a0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2823              	.LVL386:
 2824              	.L327:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2825              		.loc 1 1234 0
 2826 00a4 0128     		cmp	r0, #1
 2827 00a6 45D0     		beq	.L318
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 2828              		.loc 1 1235 0
 2829 00a8 B0F1FF3F 		cmp	r0, #-1
 2830 00ac 45D0     		beq	.L319
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 2831              		.loc 1 1237 0
 2832 00ae D5F80002 		ldr	r0, [r5, #512]
 2833              	.LVL387:
 2834 00b2 FFF7FEFF 		bl	sync_window
 2835              	.LVL388:
 2836 00b6 0028     		cmp	r0, #0
 2837 00b8 42D1     		bne	.L320
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
 2838              		.loc 1 1238 0
 2839 00ba 4FF40072 		mov	r2, #512
 2840 00be 0021     		movs	r1, #0
 2841 00c0 D5F80002 		ldr	r0, [r5, #512]
 2842 00c4 FFF7FEFF 		bl	mem_set
 2843              	.LVL389:
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
ARM GAS  /tmp/ccktbAOa.s 			page 100


 2844              		.loc 1 1239 0
 2845 00c8 D5F80062 		ldr	r6, [r5, #512]
 2846              	.LVL390:
 2847 00cc 4946     		mov	r1, r9
 2848 00ce 3046     		mov	r0, r6
 2849 00d0 FFF7FEFF 		bl	clust2sect
 2850              	.LVL391:
 2851 00d4 C6F82C02 		str	r0, [r6, #556]
 2852              	.LVL392:
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
 2853              		.loc 1 1241 0
 2854 00d8 0126     		movs	r6, #1
 2855              	.LVL393:
 2856              	.L309:
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 2857              		.loc 1 1240 0 discriminator 1
 2858 00da D5F80032 		ldr	r3, [r5, #512]
 2859 00de 93F80222 		ldrb	r2, [r3, #514]	@ zero_extendqisi2
 2860 00e2 9045     		cmp	r8, r2
 2861 00e4 10D2     		bcs	.L328
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
 2862              		.loc 1 1241 0
 2863 00e6 83F80462 		strb	r6, [r3, #516]
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 2864              		.loc 1 1242 0
 2865 00ea D5F80002 		ldr	r0, [r5, #512]
 2866 00ee FFF7FEFF 		bl	sync_window
 2867              	.LVL394:
 2868 00f2 40BB     		cbnz	r0, .L321
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 2869              		.loc 1 1243 0 discriminator 2
 2870 00f4 D5F80022 		ldr	r2, [r5, #512]
 2871 00f8 D2F82C32 		ldr	r3, [r2, #556]
 2872 00fc 0133     		adds	r3, r3, #1
 2873 00fe C2F82C32 		str	r3, [r2, #556]
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 2874              		.loc 1 1240 0 discriminator 2
 2875 0102 08F10108 		add	r8, r8, #1
 2876              	.LVL395:
 2877 0106 E8E7     		b	.L309
 2878              	.L328:
1245:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 2879              		.loc 1 1245 0
 2880 0108 D3F82C22 		ldr	r2, [r3, #556]
 2881 010c A2EB0802 		sub	r2, r2, r8
 2882 0110 C3F82C22 		str	r2, [r3, #556]
 2883              	.LVL396:
 2884              	.L308:
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
 2885              		.loc 1 1251 0
 2886 0114 C5F80C92 		str	r9, [r5, #524]
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 2887              		.loc 1 1252 0
 2888 0118 4946     		mov	r1, r9
 2889 011a D5F80002 		ldr	r0, [r5, #512]
 2890 011e FFF7FEFF 		bl	clust2sect
 2891              	.LVL397:
ARM GAS  /tmp/ccktbAOa.s 			page 101


 2892 0122 C5F81002 		str	r0, [r5, #528]
 2893 0126 97E7     		b	.L306
 2894              	.LVL398:
 2895              	.L314:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2896              		.loc 1 1227 0
 2897 0128 0220     		movs	r0, #2
 2898              	.LVL399:
 2899 012a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2900              	.LVL400:
 2901              	.L315:
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 2902              		.loc 1 1228 0
 2903 012e 0120     		movs	r0, #1
 2904              	.LVL401:
 2905 0130 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2906              	.LVL402:
 2907              	.L318:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2908              		.loc 1 1234 0
 2909 0134 0220     		movs	r0, #2
 2910              	.LVL403:
 2911 0136 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2912              	.LVL404:
 2913              	.L319:
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 2914              		.loc 1 1235 0
 2915 013a 0120     		movs	r0, #1
 2916              	.LVL405:
 2917 013c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2918              	.LVL406:
 2919              	.L320:
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 2920              		.loc 1 1237 0
 2921 0140 0120     		movs	r0, #1
 2922 0142 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2923              	.LVL407:
 2924              	.L321:
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 2925              		.loc 1 1242 0
 2926 0146 0120     		movs	r0, #1
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2927              		.loc 1 1261 0
 2928 0148 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2929              		.cfi_endproc
 2930              	.LFE145:
 2932              		.section	.text.follow_path,"ax",%progbits
 2933              		.align	1
 2934              		.syntax unified
 2935              		.thumb
 2936              		.thumb_func
 2937              		.fpu fpv4-sp-d16
 2939              	follow_path:
 2940              	.LFB155:
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2941              		.loc 1 2129 0
 2942              		.cfi_startproc
ARM GAS  /tmp/ccktbAOa.s 			page 102


 2943              		@ args = 0, pretend = 0, frame = 0
 2944              		@ frame_needed = 0, uses_anonymous_args = 0
 2945              	.LVL408:
 2946 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2947              	.LCFI28:
 2948              		.cfi_def_cfa_offset 40
 2949              		.cfi_offset 3, -40
 2950              		.cfi_offset 4, -36
 2951              		.cfi_offset 5, -32
 2952              		.cfi_offset 6, -28
 2953              		.cfi_offset 7, -24
 2954              		.cfi_offset 8, -20
 2955              		.cfi_offset 9, -16
 2956              		.cfi_offset 10, -12
 2957              		.cfi_offset 11, -8
 2958              		.cfi_offset 14, -4
 2959 0004 0546     		mov	r5, r0
 2960 0006 0C46     		mov	r4, r1
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 2961              		.loc 1 2141 0
 2962 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2963 000a 2F2B     		cmp	r3, #47
 2964 000c 0DD0     		beq	.L330
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 2965              		.loc 1 2141 0 is_stmt 0 discriminator 1
 2966 000e 5C2B     		cmp	r3, #92
 2967 0010 0BD0     		beq	.L330
 2968              	.LVL409:
 2969              	.L331:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2970              		.loc 1 2143 0 is_stmt 1
 2971 0012 0023     		movs	r3, #0
 2972 0014 C5F80832 		str	r3, [r5, #520]
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 2973              		.loc 1 2146 0
 2974 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2975 001a 1F2B     		cmp	r3, #31
 2976 001c 07D9     		bls	.L382
 2977              	.LBB14:
 2978              	.LBB15:
2075:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 2979              		.loc 1 2075 0
 2980 001e DFF8FC81 		ldr	r8, .L389+4
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 2981              		.loc 1 2069 0
 2982 0022 0B23     		movs	r3, #11
 2983 0024 9B46     		mov	fp, r3
 2984 0026 A246     		mov	r10, r4
 2985 0028 83E0     		b	.L375
 2986              	.LVL410:
 2987              	.L330:
 2988              	.LBE15:
 2989              	.LBE14:
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
 2990              		.loc 1 2142 0
 2991 002a 0134     		adds	r4, r4, #1
 2992              	.LVL411:
ARM GAS  /tmp/ccktbAOa.s 			page 103


 2993 002c F1E7     		b	.L331
 2994              	.L382:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
 2995              		.loc 1 2147 0
 2996 002e 0021     		movs	r1, #0
 2997 0030 2846     		mov	r0, r5
 2998              	.LVL412:
 2999 0032 FFF7FEFF 		bl	dir_sdi
 3000              	.LVL413:
 3001 0036 8146     		mov	r9, r0
 3002              	.LVL414:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
 3003              		.loc 1 2148 0
 3004 0038 0023     		movs	r3, #0
 3005 003a C5F81432 		str	r3, [r5, #532]
 3006 003e E0E0     		b	.L369
 3007              	.LVL415:
 3008              	.L388:
 3009              	.LBB25:
 3010              	.LBB20:
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3011              		.loc 1 2070 0
 3012 0040 4FEA8C0C 		lsl	ip, ip, #2
 3013              	.LVL416:
 3014 0044 5FFA8CFC 		uxtb	ip, ip
 3015              	.LVL417:
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 3016              		.loc 1 2069 0
 3017 0048 4846     		mov	r0, r9
 3018 004a D946     		mov	r9, fp
 3019 004c 89E0     		b	.L335
 3020              	.LVL418:
 3021              	.L384:
2073:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 3022              		.loc 1 2073 0
 3023 004e 4CF0030C 		orr	ip, ip, #3
 3024              	.LVL419:
2075:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3025              		.loc 1 2075 0
 3026 0052 803B     		subs	r3, r3, #128
 3027              	.LVL420:
 3028 0054 18F80330 		ldrb	r3, [r8, r3]	@ zero_extendqisi2
 3029              	.LVL421:
 3030 0058 94E0     		b	.L341
 3031              	.LVL422:
 3032              	.L385:
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 3033              		.loc 1 2090 0
 3034 005a 4FF00609 		mov	r9, #6
 3035              	.LVL423:
 3036 005e D0E0     		b	.L369
 3037              	.LVL424:
 3038              	.L386:
2089:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
 3039              		.loc 1 2089 0
 3040 0060 002B     		cmp	r3, #0
 3041 0062 40F0B580 		bne	.L383
ARM GAS  /tmp/ccktbAOa.s 			page 104


 3042              	.L345:
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
 3043              		.loc 1 2094 0
 3044 0066 A3F16102 		sub	r2, r3, #97
 3045 006a D2B2     		uxtb	r2, r2
 3046 006c 192A     		cmp	r2, #25
 3047 006e 00F29D80 		bhi	.L346
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 3048              		.loc 1 2095 0
 3049 0072 4CF0010C 		orr	ip, ip, #1
 3050              	.LVL425:
 3051 0076 203B     		subs	r3, r3, #32
 3052              	.LVL426:
 3053 0078 DBB2     		uxtb	r3, r3
 3054              	.LVL427:
 3055 007a 97E0     		b	.L346
 3056              	.LVL428:
 3057              	.L387:
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3058              		.loc 1 2105 0
 3059 007c 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 3060 007e E52A     		cmp	r2, #229
 3061 0080 04BF     		itt	eq
 3062 0082 0522     		moveq	r2, #5
 3063 0084 3A70     		strbeq	r2, [r7]
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 3064              		.loc 1 2107 0
 3065 0086 B9F1080F 		cmp	r9, #8
 3066 008a 04BF     		itt	eq
 3067 008c 4FEA8C0C 		lsleq	ip, ip, #2
 3068              	.LVL429:
 3069 0090 5FFA8CFC 		uxtbeq	ip, ip
 3070              	.LVL430:
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 3071              		.loc 1 2108 0
 3072 0094 0CF00302 		and	r2, ip, #3
 3073 0098 012A     		cmp	r2, #1
 3074 009a 08BF     		it	eq
 3075 009c 43F01003 		orreq	r3, r3, #16
 3076              	.LVL431:
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3077              		.loc 1 2109 0
 3078 00a0 0CF00C0C 		and	ip, ip, #12
 3079              	.LVL432:
 3080 00a4 BCF1040F 		cmp	ip, #4
 3081 00a8 08BF     		it	eq
 3082 00aa 43F00803 		orreq	r3, r3, #8
 3083              	.LVL433:
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3084              		.loc 1 2111 0
 3085 00ae FB72     		strb	r3, [r7, #11]
 3086              	.LVL434:
 3087              	.LBE20:
 3088              	.LBE25:
 3089              	.LBB26:
 3090              	.LBB27:
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
ARM GAS  /tmp/ccktbAOa.s 			page 105


 3091              		.loc 1 1538 0
 3092 00b0 0021     		movs	r1, #0
 3093 00b2 2846     		mov	r0, r5
 3094 00b4 FFF7FEFF 		bl	dir_sdi
 3095              	.LVL435:
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3096              		.loc 1 1539 0
 3097 00b8 8146     		mov	r9, r0
 3098 00ba 0028     		cmp	r0, #0
 3099 00bc 40F09B80 		bne	.L351
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3100              		.loc 1 1575 0
 3101 00c0 0027     		movs	r7, #0
 3102 00c2 07E0     		b	.L370
 3103              	.LVL436:
 3104              	.L353:
 3105 00c4 3946     		mov	r1, r7
 3106              	.LVL437:
 3107 00c6 2846     		mov	r0, r5
 3108 00c8 FFF7FEFF 		bl	dir_next
 3109              	.LVL438:
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3110              		.loc 1 1576 0
 3111 00cc 8146     		mov	r9, r0
 3112 00ce 0028     		cmp	r0, #0
 3113 00d0 40F09180 		bne	.L351
 3114              	.L370:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3115              		.loc 1 1545 0
 3116 00d4 D5F81012 		ldr	r1, [r5, #528]
 3117 00d8 D5F80002 		ldr	r0, [r5, #512]
 3118              	.LVL439:
 3119 00dc FFF7FEFF 		bl	move_window
 3120              	.LVL440:
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3121              		.loc 1 1546 0
 3122 00e0 8146     		mov	r9, r0
 3123 00e2 0028     		cmp	r0, #0
 3124 00e4 40F08780 		bne	.L351
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 3125              		.loc 1 1547 0
 3126 00e8 D5F81412 		ldr	r1, [r5, #532]
 3127              	.LVL441:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3128              		.loc 1 1549 0
 3129 00ec 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3130 00ee 002B     		cmp	r3, #0
 3131 00f0 5FD0     		beq	.L352
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3132              		.loc 1 1572 0
 3133 00f2 91F80BC0 		ldrb	ip, [r1, #11]	@ zero_extendqisi2
 3134 00f6 1CF0080F 		tst	ip, #8
 3135 00fa E3D1     		bne	.L353
 3136 00fc D5F81842 		ldr	r4, [r5, #536]
 3137              	.LVL442:
 3138 0100 01F10B0E 		add	lr, r1, #11
 3139              	.LBB28:
ARM GAS  /tmp/ccktbAOa.s 			page 106


 3140              	.LBB29:
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 3141              		.loc 1 607 0
 3142 0104 2246     		mov	r2, r4
 3143 0106 0B46     		mov	r3, r1
 3144              	.LVL443:
 3145              	.L354:
 610:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 3146              		.loc 1 610 0
 3147 0108 13F8016B 		ldrb	r6, [r3], #1	@ zero_extendqisi2
 3148              	.LVL444:
 3149 010c 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 3150              	.LVL445:
 3151 0110 8642     		cmp	r6, r0
 3152 0112 D7D1     		bne	.L353
 3153              	.LVL446:
 3154 0114 7345     		cmp	r3, lr
 3155 0116 F7D1     		bne	.L354
 3156              	.LVL447:
 3157              	.LBE29:
 3158              	.LBE28:
 3159              	.LBE27:
 3160              	.LBE26:
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
 3161              		.loc 1 2167 0
 3162 0118 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 3163 011a 13F0040F 		tst	r3, #4
 3164 011e 70D1     		bne	.L369
 3165              	.LVL448:
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3166              		.loc 1 2169 0
 3167 0120 1CF0100F 		tst	ip, #16
 3168 0124 57D0     		beq	.L367
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3169              		.loc 1 2172 0
 3170 0126 D5F80002 		ldr	r0, [r5, #512]
 3171 012a FFF7FEFF 		bl	ld_clust
 3172              	.LVL449:
 3173 012e C5F80802 		str	r0, [r5, #520]
 3174              	.L375:
 3175              	.LVL450:
 3176 0132 5446     		mov	r4, r10
 3177              	.LVL451:
 3178              	.L373:
 3179 0134 2646     		mov	r6, r4
 3180              	.LVL452:
 3181              	.LBB30:
 3182              	.LBB21:
2047:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn = dp->fn;
 3183              		.loc 1 2047 0
 3184 0136 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 3185              	.LVL453:
 3186 013a 2F2B     		cmp	r3, #47
 3187 013c FAD0     		beq	.L373
 3188 013e 5C2B     		cmp	r3, #92
 3189 0140 F8D0     		beq	.L373
2048:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
ARM GAS  /tmp/ccktbAOa.s 			page 107


 3190              		.loc 1 2048 0
 3191 0142 D5F81872 		ldr	r7, [r5, #536]
 3192              	.LVL454:
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = b = 0; ni = 8;
 3193              		.loc 1 2049 0
 3194 0146 0B22     		movs	r2, #11
 3195 0148 2021     		movs	r1, #32
 3196 014a 3846     		mov	r0, r7
 3197 014c FFF7FEFF 		bl	mem_set
 3198              	.LVL455:
 3199 0150 06F1FF3E 		add	lr, r6, #-1
2050:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 3200              		.loc 1 2050 0
 3201 0154 0020     		movs	r0, #0
 3202 0156 0446     		mov	r4, r0
 3203 0158 4FF00809 		mov	r9, #8
 3204 015c 8446     		mov	ip, r0
 3205              	.LBB16:
 3206              	.LBB17:
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 3207              		.loc 1 617 0
 3208 015e 4FF02A0A 		mov	r10, #42
 3209              	.LVL456:
 3210              	.L335:
 3211              	.LBE17:
 3212              	.LBE16:
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 3213              		.loc 1 2065 0
 3214 0162 0134     		adds	r4, r4, #1
 3215              	.LVL457:
 3216 0164 1EF8013F 		ldrb	r3, [lr, #1]!	@ zero_extendqisi2
 3217              	.LVL458:
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {
 3218              		.loc 1 2066 0
 3219 0168 202B     		cmp	r3, #32
 3220 016a 37D9     		bls	.L336
 3221 016c 2F2B     		cmp	r3, #47
 3222 016e 39D0     		beq	.L337
 3223 0170 5C2B     		cmp	r3, #92
 3224 0172 37D0     		beq	.L337
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 3225              		.loc 1 2067 0
 3226 0174 2E2B     		cmp	r3, #46
 3227 0176 47D0     		beq	.L338
 3228 0178 8145     		cmp	r9, r0
 3229 017a 26D9     		bls	.L362
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
 3230              		.loc 1 2072 0
 3231 017c 13F0800F 		tst	r3, #128
 3232 0180 7FF465AF 		bne	.L384
 3233              	.L341:
 3234              	.LVL459:
 3235              	.LBB19:
 3236              	.LBB18:
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
 3237              		.loc 1 617 0
 3238 0184 222B     		cmp	r3, #34
ARM GAS  /tmp/ccktbAOa.s 			page 108


 3239 0186 3FF468AF 		beq	.L385
 3240 018a 5246     		mov	r2, r10
 3241 018c 2249     		ldr	r1, .L389
 3242              	.LVL460:
 3243              	.L342:
 3244 018e 9342     		cmp	r3, r2
 3245 0190 3FF466AF 		beq	.L386
 3246 0194 11F8012F 		ldrb	r2, [r1, #1]!	@ zero_extendqisi2
 3247              	.LVL461:
 3248 0198 002A     		cmp	r2, #0
 3249 019a F8D1     		bne	.L342
 3250              	.LVL462:
 3251              	.LBE18:
 3252              	.LBE19:
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 				b |= 2;
 3253              		.loc 1 2091 0
 3254 019c A3F14102 		sub	r2, r3, #65
 3255 01a0 D2B2     		uxtb	r2, r2
 3256 01a2 192A     		cmp	r2, #25
 3257 01a4 3FF65FAF 		bhi	.L345
2092:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3258              		.loc 1 2092 0
 3259 01a8 4CF0020C 		orr	ip, ip, #2
 3260              	.LVL463:
 3261              	.L346:
2098:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3262              		.loc 1 2098 0
 3263 01ac 3B54     		strb	r3, [r7, r0]
 3264 01ae 0130     		adds	r0, r0, #1
 3265              	.LVL464:
 3266 01b0 D7E7     		b	.L335
 3267              	.LVL465:
 3268              	.L352:
 3269              	.LBE21:
 3270              	.LBE30:
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3271              		.loc 1 2154 0
 3272 01b2 D5F81832 		ldr	r3, [r5, #536]
 3273 01b6 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3274              	.LVL466:
 3275              	.L359:
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3276              		.loc 1 2162 0
 3277 01b8 03F00403 		and	r3, r3, #4
 3278              	.LVL467:
 3279 01bc 002B     		cmp	r3, #0
 3280 01be 14BF     		ite	ne
 3281 01c0 4FF00409 		movne	r9, #4
 3282 01c4 4FF00509 		moveq	r9, #5
 3283 01c8 1BE0     		b	.L369
 3284              	.LVL468:
 3285              	.L362:
 3286              	.LBB31:
 3287              	.LBB22:
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 3288              		.loc 1 2067 0
 3289 01ca 4FF00609 		mov	r9, #6
ARM GAS  /tmp/ccktbAOa.s 			page 109


 3290              	.LVL469:
 3291 01ce 18E0     		b	.L369
 3292              	.LVL470:
 3293              	.L383:
2089:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
 3294              		.loc 1 2089 0
 3295 01d0 4FF00609 		mov	r9, #6
 3296              	.LVL471:
 3297 01d4 15E0     		b	.L369
 3298              	.LVL472:
 3299              	.L367:
 3300              	.LBE22:
 3301              	.LBE31:
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3302              		.loc 1 2170 0
 3303 01d6 4FF00509 		mov	r9, #5
 3304 01da 12E0     		b	.L369
 3305              	.LVL473:
 3306              	.L336:
 3307              	.LBB32:
 3308              	.LBB23:
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 3309              		.loc 1 2101 0
 3310 01dc 06EB040A 		add	r10, r6, r4
 3311              	.LVL474:
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3312              		.loc 1 2102 0
 3313 01e0 0423     		movs	r3, #4
 3314              	.LVL475:
 3315 01e2 02E0     		b	.L358
 3316              	.LVL476:
 3317              	.L337:
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 3318              		.loc 1 2101 0
 3319 01e4 06EB040A 		add	r10, r6, r4
 3320              	.LVL477:
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3321              		.loc 1 2102 0
 3322 01e8 0023     		movs	r3, #0
 3323              	.LVL478:
 3324              	.L358:
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
 3325              		.loc 1 2104 0
 3326 01ea 0028     		cmp	r0, #0
 3327 01ec 7FF446AF 		bne	.L387
 3328 01f0 4FF00609 		mov	r9, #6
 3329              	.LVL479:
 3330 01f4 05E0     		b	.L369
 3331              	.LVL480:
 3332              	.L351:
 3333              	.LBE23:
 3334              	.LBE32:
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3335              		.loc 1 2154 0
 3336 01f6 D5F81832 		ldr	r3, [r5, #536]
 3337 01fa DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3338              	.LVL481:
ARM GAS  /tmp/ccktbAOa.s 			page 110


2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
 3339              		.loc 1 2156 0
 3340 01fc B9F1040F 		cmp	r9, #4
 3341 0200 DAD0     		beq	.L359
 3342              	.LVL482:
 3343              	.L369:
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3344              		.loc 1 2177 0
 3345 0202 4846     		mov	r0, r9
 3346 0204 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3347              	.LVL483:
 3348              	.L338:
 3349              	.LBB33:
 3350              	.LBB24:
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
 3351              		.loc 1 2068 0
 3352 0208 B9F1080F 		cmp	r9, #8
 3353 020c 3FF418AF 		beq	.L388
 3354 0210 4FF00609 		mov	r9, #6
 3355              	.LVL484:
 3356 0214 F5E7     		b	.L369
 3357              	.L390:
 3358 0216 00BF     		.align	2
 3359              	.L389:
 3360 0218 01000000 		.word	.LC0+1
 3361 021c 00000000 		.word	.LANCHOR3
 3362              	.LBE24:
 3363              	.LBE33:
 3364              		.cfi_endproc
 3365              	.LFE155:
 3367              		.section	.text.dir_register,"ax",%progbits
 3368              		.align	1
 3369              		.syntax unified
 3370              		.thumb
 3371              		.thumb_func
 3372              		.fpu fpv4-sp-d16
 3374              	dir_register:
 3375              	.LFB151:
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3376              		.loc 1 1651 0
 3377              		.cfi_startproc
 3378              		@ args = 0, pretend = 0, frame = 0
 3379              		@ frame_needed = 0, uses_anonymous_args = 0
 3380              	.LVL485:
 3381 0000 70B5     		push	{r4, r5, r6, lr}
 3382              	.LCFI29:
 3383              		.cfi_def_cfa_offset 16
 3384              		.cfi_offset 4, -16
 3385              		.cfi_offset 5, -12
 3386              		.cfi_offset 6, -8
 3387              		.cfi_offset 14, -4
 3388 0002 0446     		mov	r4, r0
 3389              	.LVL486:
 3390              	.LBB36:
 3391              	.LBB37:
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3392              		.loc 1 1281 0
ARM GAS  /tmp/ccktbAOa.s 			page 111


 3393 0004 0021     		movs	r1, #0
 3394 0006 FFF7FEFF 		bl	dir_sdi
 3395              	.LVL487:
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3396              		.loc 1 1282 0
 3397 000a 98BB     		cbnz	r0, .L392
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 3398              		.loc 1 1292 0
 3399 000c 0126     		movs	r6, #1
 3400 000e 05E0     		b	.L400
 3401              	.LVL488:
 3402              	.L403:
 3403 0010 3146     		mov	r1, r6
 3404 0012 2046     		mov	r0, r4
 3405              	.LVL489:
 3406 0014 FFF7FEFF 		bl	dir_next
 3407              	.LVL490:
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3408              		.loc 1 1293 0
 3409 0018 0546     		mov	r5, r0
 3410 001a 80BB     		cbnz	r0, .L393
 3411              	.LVL491:
 3412              	.L400:
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3413              		.loc 1 1285 0
 3414 001c D4F81012 		ldr	r1, [r4, #528]
 3415 0020 D4F80002 		ldr	r0, [r4, #512]
 3416              	.LVL492:
 3417 0024 FFF7FEFF 		bl	move_window
 3418              	.LVL493:
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
 3419              		.loc 1 1286 0
 3420 0028 0546     		mov	r5, r0
 3421 002a 40BB     		cbnz	r0, .L393
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 3422              		.loc 1 1287 0
 3423 002c D4F81432 		ldr	r3, [r4, #532]
 3424 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 0032 E52B     		cmp	r3, #229
 3426 0034 01D0     		beq	.L394
 3427 0036 002B     		cmp	r3, #0
 3428 0038 EAD1     		bne	.L403
 3429              	.L394:
 3430              	.LVL494:
 3431              	.LBE37:
 3432              	.LBE36:
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3433              		.loc 1 1703 0
 3434 003a D4F81012 		ldr	r1, [r4, #528]
 3435 003e D4F80002 		ldr	r0, [r4, #512]
 3436 0042 FFF7FEFF 		bl	move_window
 3437              	.LVL495:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
 3438              		.loc 1 1704 0
 3439 0046 0546     		mov	r5, r0
 3440 0048 08B1     		cbz	r0, .L398
 3441              	.LVL496:
ARM GAS  /tmp/ccktbAOa.s 			page 112


 3442              	.L399:
1715:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3443              		.loc 1 1715 0
 3444 004a 2846     		mov	r0, r5
 3445 004c 70BD     		pop	{r4, r5, r6, pc}
 3446              	.LVL497:
 3447              	.L398:
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
 3448              		.loc 1 1705 0
 3449 004e 2022     		movs	r2, #32
 3450 0050 0021     		movs	r1, #0
 3451 0052 D4F81402 		ldr	r0, [r4, #532]
 3452              	.LVL498:
 3453 0056 FFF7FEFF 		bl	mem_set
 3454              	.LVL499:
1706:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 3455              		.loc 1 1706 0
 3456 005a 0B22     		movs	r2, #11
 3457 005c D4F81812 		ldr	r1, [r4, #536]
 3458 0060 D4F81402 		ldr	r0, [r4, #532]
 3459 0064 FFF7FEFF 		bl	mem_cpy
 3460              	.LVL500:
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3461              		.loc 1 1710 0
 3462 0068 D4F80032 		ldr	r3, [r4, #512]
 3463 006c 0122     		movs	r2, #1
 3464 006e 83F80422 		strb	r2, [r3, #516]
 3465 0072 EAE7     		b	.L399
 3466              	.LVL501:
 3467              	.L392:
 3468 0074 0546     		mov	r5, r0
 3469              	.LBB39:
 3470              	.LBB38:
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3471              		.loc 1 1295 0
 3472 0076 0428     		cmp	r0, #4
 3473 0078 E7D1     		bne	.L399
 3474              	.LVL502:
 3475              	.L397:
 3476 007a 0725     		movs	r5, #7
 3477 007c E5E7     		b	.L399
 3478              	.LVL503:
 3479              	.L393:
 3480 007e 042D     		cmp	r5, #4
 3481 0080 FBD0     		beq	.L397
 3482 0082 E2E7     		b	.L399
 3483              	.LBE38:
 3484              	.LBE39:
 3485              		.cfi_endproc
 3486              	.LFE151:
 3488              		.section	.text.dir_read,"ax",%progbits
 3489              		.align	1
 3490              		.syntax unified
 3491              		.thumb
 3492              		.thumb_func
 3493              		.fpu fpv4-sp-d16
 3495              	dir_read:
ARM GAS  /tmp/ccktbAOa.s 			page 113


 3496              	.LFB150:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3497              		.loc 1 1593 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              	.LVL504:
 3502 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3503              	.LCFI30:
 3504              		.cfi_def_cfa_offset 24
 3505              		.cfi_offset 3, -24
 3506              		.cfi_offset 4, -20
 3507              		.cfi_offset 5, -16
 3508              		.cfi_offset 6, -12
 3509              		.cfi_offset 7, -8
 3510              		.cfi_offset 14, -4
 3511 0002 0446     		mov	r4, r0
 3512 0004 0E46     		mov	r6, r1
 3513              	.LVL505:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
 3514              		.loc 1 1600 0
 3515 0006 0427     		movs	r7, #4
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3516              		.loc 1 1630 0
 3517 0008 0025     		movs	r5, #0
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3518              		.loc 1 1601 0
 3519 000a 05E0     		b	.L405
 3520              	.LVL506:
 3521              	.L407:
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3522              		.loc 1 1630 0
 3523 000c 2946     		mov	r1, r5
 3524 000e 2046     		mov	r0, r4
 3525              	.LVL507:
 3526 0010 FFF7FEFF 		bl	dir_next
 3527              	.LVL508:
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3528              		.loc 1 1631 0
 3529 0014 0746     		mov	r7, r0
 3530 0016 08BB     		cbnz	r0, .L410
 3531              	.LVL509:
 3532              	.L405:
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3533              		.loc 1 1601 0
 3534 0018 D4F81012 		ldr	r1, [r4, #528]
 3535 001c D9B1     		cbz	r1, .L414
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3536              		.loc 1 1602 0
 3537 001e D4F80002 		ldr	r0, [r4, #512]
 3538 0022 FFF7FEFF 		bl	move_window
 3539              	.LVL510:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3540              		.loc 1 1603 0
 3541 0026 0746     		mov	r7, r0
 3542 0028 C0B9     		cbnz	r0, .L410
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
ARM GAS  /tmp/ccktbAOa.s 			page 114


 3543              		.loc 1 1604 0
 3544 002a D4F81422 		ldr	r2, [r4, #532]
 3545              	.LVL511:
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3546              		.loc 1 1605 0
 3547 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3548              	.LVL512:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 3549              		.loc 1 1606 0
 3550 0030 9BB1     		cbz	r3, .L411
 3551              	.LVL513:
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3552              		.loc 1 1627 0
 3553 0032 E52B     		cmp	r3, #229
 3554 0034 EAD0     		beq	.L407
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3555              		.loc 1 1627 0 is_stmt 0 discriminator 1
 3556 0036 2E2B     		cmp	r3, #46
 3557 0038 E8D0     		beq	.L407
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3558              		.loc 1 1607 0 is_stmt 1 discriminator 2
 3559 003a D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
 3560              	.LVL514:
 3561 003c 03F03F03 		and	r3, r3, #63
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3562              		.loc 1 1627 0 discriminator 2
 3563 0040 0F2B     		cmp	r3, #15
 3564 0042 E3D0     		beq	.L407
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3565              		.loc 1 1627 0 is_stmt 0 discriminator 3
 3566 0044 23F02003 		bic	r3, r3, #32
 3567 0048 082B     		cmp	r3, #8
 3568 004a 14BF     		ite	ne
 3569 004c 0023     		movne	r3, #0
 3570 004e 0123     		moveq	r3, #1
 3571 0050 B342     		cmp	r3, r6
 3572 0052 DBD1     		bne	.L407
 3573 0054 05E0     		b	.L412
 3574              	.LVL515:
 3575              	.L414:
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3576              		.loc 1 1634 0 is_stmt 1
 3577 0056 27B1     		cbz	r7, .L412
 3578 0058 00E0     		b	.L410
 3579              	.LVL516:
 3580              	.L411:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 3581              		.loc 1 1606 0
 3582 005a 0427     		movs	r7, #4
 3583              	.LVL517:
 3584              	.L410:
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3585              		.loc 1 1634 0 discriminator 1
 3586 005c 0023     		movs	r3, #0
 3587 005e C4F81032 		str	r3, [r4, #528]
 3588              	.LVL518:
 3589              	.L412:
ARM GAS  /tmp/ccktbAOa.s 			page 115


1637:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
 3590              		.loc 1 1637 0
 3591 0062 3846     		mov	r0, r7
 3592 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3593              		.cfi_endproc
 3594              	.LFE150:
 3596              		.section	.text.remove_chain,"ax",%progbits
 3597              		.align	1
 3598              		.syntax unified
 3599              		.thumb
 3600              		.thumb_func
 3601              		.fpu fpv4-sp-d16
 3603              	remove_chain:
 3604              	.LFB141:
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3605              		.loc 1 1014 0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 0
 3608              		@ frame_needed = 0, uses_anonymous_args = 0
 3609              	.LVL519:
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 3610              		.loc 1 1021 0
 3611 0000 0129     		cmp	r1, #1
 3612 0002 32D9     		bls	.L419
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3613              		.loc 1 1014 0 discriminator 1
 3614 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3615              	.LCFI31:
 3616              		.cfi_def_cfa_offset 24
 3617              		.cfi_offset 3, -24
 3618              		.cfi_offset 4, -20
 3619              		.cfi_offset 5, -16
 3620              		.cfi_offset 6, -12
 3621              		.cfi_offset 7, -8
 3622              		.cfi_offset 14, -4
 3623 0006 0446     		mov	r4, r0
 3624 0008 0E46     		mov	r6, r1
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 3625              		.loc 1 1021 0 discriminator 1
 3626 000a D0F81432 		ldr	r3, [r0, #532]
 3627 000e 9942     		cmp	r1, r3
 3628 0010 02D3     		bcc	.L430
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3629              		.loc 1 1022 0
 3630 0012 0222     		movs	r2, #2
 3631              	.LVL520:
 3632              	.L416:
1052:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3633              		.loc 1 1052 0
 3634 0014 1046     		mov	r0, r2
 3635 0016 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3636              	.LVL521:
 3637              	.L430:
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3638              		.loc 1 1031 0
 3639 0018 0027     		movs	r7, #0
 3640 001a 04E0     		b	.L424
ARM GAS  /tmp/ccktbAOa.s 			page 116


 3641              	.LVL522:
 3642              	.L417:
 3643 001c 2E46     		mov	r6, r5
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 3644              		.loc 1 1026 0
 3645 001e D4F81432 		ldr	r3, [r4, #532]
 3646 0022 AB42     		cmp	r3, r5
 3647 0024 F6D9     		bls	.L416
 3648              	.LVL523:
 3649              	.L424:
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 3650              		.loc 1 1027 0
 3651 0026 3146     		mov	r1, r6
 3652 0028 2046     		mov	r0, r4
 3653 002a FFF7FEFF 		bl	get_fat
 3654              	.LVL524:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 3655              		.loc 1 1028 0
 3656 002e 0546     		mov	r5, r0
 3657 0030 F0B1     		cbz	r0, .L421
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3658              		.loc 1 1029 0
 3659 0032 0128     		cmp	r0, #1
 3660 0034 1ED0     		beq	.L422
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3661              		.loc 1 1030 0
 3662 0036 B0F1FF3F 		cmp	r0, #-1
 3663 003a 1DD0     		beq	.L423
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3664              		.loc 1 1031 0
 3665 003c 3A46     		mov	r2, r7
 3666 003e 3146     		mov	r1, r6
 3667 0040 2046     		mov	r0, r4
 3668              	.LVL525:
 3669 0042 FFF7FEFF 		bl	put_fat
 3670              	.LVL526:
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
 3671              		.loc 1 1032 0
 3672 0046 0246     		mov	r2, r0
 3673 0048 0028     		cmp	r0, #0
 3674 004a E3D1     		bne	.L416
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
 3675              		.loc 1 1033 0
 3676 004c D4F81032 		ldr	r3, [r4, #528]
 3677 0050 B3F1FF3F 		cmp	r3, #-1
 3678 0054 E2D0     		beq	.L417
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
 3679              		.loc 1 1034 0
 3680 0056 0133     		adds	r3, r3, #1
 3681 0058 C4F81032 		str	r3, [r4, #528]
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3682              		.loc 1 1035 0
 3683 005c 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 3684 0060 43F00103 		orr	r3, r3, #1
 3685 0064 84F80532 		strb	r3, [r4, #517]
 3686 0068 D8E7     		b	.L417
 3687              	.LVL527:
ARM GAS  /tmp/ccktbAOa.s 			page 117


 3688              	.L419:
 3689              	.LCFI32:
 3690              		.cfi_def_cfa_offset 0
 3691              		.cfi_restore 3
 3692              		.cfi_restore 4
 3693              		.cfi_restore 5
 3694              		.cfi_restore 6
 3695              		.cfi_restore 7
 3696              		.cfi_restore 14
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3697              		.loc 1 1022 0
 3698 006a 0222     		movs	r2, #2
 3699              	.LVL528:
1052:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3700              		.loc 1 1052 0
 3701 006c 1046     		mov	r0, r2
 3702              	.LVL529:
 3703 006e 7047     		bx	lr
 3704              	.LVL530:
 3705              	.L421:
 3706              	.LCFI33:
 3707              		.cfi_def_cfa_offset 24
 3708              		.cfi_offset 3, -24
 3709              		.cfi_offset 4, -20
 3710              		.cfi_offset 5, -16
 3711              		.cfi_offset 6, -12
 3712              		.cfi_offset 7, -8
 3713              		.cfi_offset 14, -4
 3714 0070 0022     		movs	r2, #0
 3715 0072 CFE7     		b	.L416
 3716              	.L422:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3717              		.loc 1 1029 0
 3718 0074 0222     		movs	r2, #2
 3719 0076 CDE7     		b	.L416
 3720              	.L423:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3721              		.loc 1 1030 0
 3722 0078 0122     		movs	r2, #1
 3723 007a CBE7     		b	.L416
 3724              		.cfi_endproc
 3725              	.LFE141:
 3727              		.section	.text.f_mount,"ax",%progbits
 3728              		.align	1
 3729              		.global	f_mount
 3730              		.syntax unified
 3731              		.thumb
 3732              		.thumb_func
 3733              		.fpu fpv4-sp-d16
 3735              	f_mount:
 3736              	.LFB160:
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** 
2462:Middlewares/Third_Party/FatFs/src/ff.c **** 
2463:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 118


2465:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 
2467:Middlewares/Third_Party/FatFs/src/ff.c **** --------------------------------------------------------------------------*/
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 
2471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
2473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 
2475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
2478:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
2479:Middlewares/Third_Party/FatFs/src/ff.c **** )
2480:Middlewares/Third_Party/FatFs/src/ff.c **** {
 3737              		.loc 1 2480 0
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 16
 3740              		@ frame_needed = 0, uses_anonymous_args = 0
 3741              	.LVL531:
 3742 0000 10B5     		push	{r4, lr}
 3743              	.LCFI34:
 3744              		.cfi_def_cfa_offset 8
 3745              		.cfi_offset 4, -8
 3746              		.cfi_offset 14, -4
 3747 0002 84B0     		sub	sp, sp, #16
 3748              	.LCFI35:
 3749              		.cfi_def_cfa_offset 24
 3750 0004 0190     		str	r0, [sp, #4]
 3751 0006 0091     		str	r1, [sp]
 3752 0008 1446     		mov	r4, r2
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
 3753              		.loc 1 2484 0
 3754 000a 04A8     		add	r0, sp, #16
 3755              	.LVL532:
 3756 000c 40F8041D 		str	r1, [r0, #-4]!
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
 3757              		.loc 1 2487 0
 3758 0010 FFF7FEFF 		bl	get_ldnumber
 3759              	.LVL533:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 3760              		.loc 1 2488 0
 3761 0014 0028     		cmp	r0, #0
 3762 0016 28DB     		blt	.L437
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3763              		.loc 1 2489 0
 3764 0018 184B     		ldr	r3, .L444
 3765 001a 53F82030 		ldr	r3, [r3, r0, lsl #2]
 3766              	.LVL534:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
ARM GAS  /tmp/ccktbAOa.s 			page 119


 3767              		.loc 1 2491 0
 3768 001e 53B1     		cbz	r3, .L433
 3769              	.LVL535:
 3770              	.LBB42:
 3771              	.LBB43:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3772              		.loc 1 760 0
 3773 0020 174A     		ldr	r2, .L444+4
 3774 0022 1268     		ldr	r2, [r2]
 3775 0024 9342     		cmp	r3, r2
 3776 0026 12D0     		beq	.L441
 3777              	.L434:
 3778              	.LVL536:
 3779 0028 154A     		ldr	r2, .L444+4
 3780 002a D268     		ldr	r2, [r2, #12]
 3781 002c 9342     		cmp	r3, r2
 3782 002e 12D0     		beq	.L442
 3783              	.L435:
 3784              	.LVL537:
 3785              	.LBE43:
 3786              	.LBE42:
2492:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
2494:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2495:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
2496:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
2497:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 3787              		.loc 1 2498 0
 3788 0030 0022     		movs	r2, #0
 3789 0032 83F80022 		strb	r2, [r3, #512]
 3790              	.L433:
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
 3791              		.loc 1 2501 0
 3792 0036 019B     		ldr	r3, [sp, #4]
 3793              	.LVL538:
 3794 0038 D3B1     		cbz	r3, .L436
2502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 3795              		.loc 1 2502 0
 3796 003a 0022     		movs	r2, #0
 3797 003c 83F80022 		strb	r2, [r3, #512]
2503:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
2505:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 3798              		.loc 1 2507 0
 3799 0040 0E4A     		ldr	r2, .L444
 3800              	.LVL539:
 3801 0042 42F82030 		str	r3, [r2, r0, lsl #2]
 3802              	.LVL540:
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 3803              		.loc 1 2509 0
 3804 0046 012C     		cmp	r4, #1
ARM GAS  /tmp/ccktbAOa.s 			page 120


 3805 0048 09D0     		beq	.L443
 3806 004a 0020     		movs	r0, #0
 3807              	.LVL541:
 3808 004c 0EE0     		b	.L439
 3809              	.LVL542:
 3810              	.L441:
 3811              	.LBB45:
 3812              	.LBB44:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3813              		.loc 1 760 0
 3814 004e 0021     		movs	r1, #0
 3815 0050 0B4A     		ldr	r2, .L444+4
 3816 0052 1160     		str	r1, [r2]
 3817 0054 E8E7     		b	.L434
 3818              	.LVL543:
 3819              	.L442:
 3820 0056 0021     		movs	r1, #0
 3821 0058 094A     		ldr	r2, .L444+4
 3822 005a D160     		str	r1, [r2, #12]
 3823 005c E8E7     		b	.L435
 3824              	.LVL544:
 3825              	.L443:
 3826              	.LBE44:
 3827              	.LBE45:
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
 3828              		.loc 1 2511 0
 3829 005e 0022     		movs	r2, #0
 3830 0060 6946     		mov	r1, sp
 3831 0062 01A8     		add	r0, sp, #4
 3832              	.LVL545:
 3833 0064 FFF7FEFF 		bl	find_volume
 3834              	.LVL546:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
 3835              		.loc 1 2512 0
 3836 0068 00E0     		b	.L439
 3837              	.LVL547:
 3838              	.L437:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 3839              		.loc 1 2488 0
 3840 006a 0B20     		movs	r0, #11
 3841              	.LVL548:
 3842              	.L439:
2513:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3843              		.loc 1 2513 0
 3844 006c 04B0     		add	sp, sp, #16
 3845              	.LCFI36:
 3846              		.cfi_remember_state
 3847              		.cfi_def_cfa_offset 8
 3848              		@ sp needed
 3849 006e 10BD     		pop	{r4, pc}
 3850              	.LVL549:
 3851              	.L436:
 3852              	.LCFI37:
 3853              		.cfi_restore_state
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3854              		.loc 1 2507 0
ARM GAS  /tmp/ccktbAOa.s 			page 121


 3855 0070 0023     		movs	r3, #0
 3856 0072 024A     		ldr	r2, .L444
 3857              	.LVL550:
 3858 0074 42F82030 		str	r3, [r2, r0, lsl #2]
 3859              	.LVL551:
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3860              		.loc 1 2509 0
 3861 0078 1846     		mov	r0, r3
 3862              	.LVL552:
 3863 007a F7E7     		b	.L439
 3864              	.L445:
 3865              		.align	2
 3866              	.L444:
 3867 007c 00000000 		.word	.LANCHOR1
 3868 0080 00000000 		.word	.LANCHOR0
 3869              		.cfi_endproc
 3870              	.LFE160:
 3872              		.section	.text.f_open,"ax",%progbits
 3873              		.align	1
 3874              		.global	f_open
 3875              		.syntax unified
 3876              		.thumb
 3877              		.thumb_func
 3878              		.fpu fpv4-sp-d16
 3880              	f_open:
 3881              	.LFB161:
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2519:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
2520:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 
2522:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
2524:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
2526:Middlewares/Third_Party/FatFs/src/ff.c **** )
2527:Middlewares/Third_Party/FatFs/src/ff.c **** {
 3882              		.loc 1 2527 0
 3883              		.cfi_startproc
 3884              		@ args = 0, pretend = 0, frame = 568
 3885              		@ frame_needed = 0, uses_anonymous_args = 0
 3886              	.LVL553:
 3887 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3888              	.LCFI38:
 3889              		.cfi_def_cfa_offset 28
 3890              		.cfi_offset 4, -28
 3891              		.cfi_offset 5, -24
 3892              		.cfi_offset 6, -20
 3893              		.cfi_offset 7, -16
 3894              		.cfi_offset 8, -12
 3895              		.cfi_offset 9, -8
 3896              		.cfi_offset 14, -4
 3897 0004 ADF50F7D 		sub	sp, sp, #572
 3898              	.LCFI39:
ARM GAS  /tmp/ccktbAOa.s 			page 122


 3899              		.cfi_def_cfa_offset 600
 3900 0008 0191     		str	r1, [sp, #4]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2532:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl;
2534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** 
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 3901              		.loc 1 2537 0
 3902 000a 0028     		cmp	r0, #0
 3903 000c 00F0A480 		beq	.L466
 3904 0010 0446     		mov	r4, r0
 3905 0012 1546     		mov	r5, r2
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 3906              		.loc 1 2538 0
 3907 0014 0023     		movs	r3, #0
 3908 0016 C0F80032 		str	r3, [r0, #512]
 3909              	.LVL554:
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2541:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2542:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
2543:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
 3910              		.loc 1 2543 0
 3911 001a 02F01E02 		and	r2, r2, #30
 3912              	.LVL555:
 3913 001e 01A9     		add	r1, sp, #4
 3914              	.LVL556:
 3915 0020 86A8     		add	r0, sp, #536
 3916              	.LVL557:
 3917 0022 FFF7FEFF 		bl	find_volume
 3918              	.LVL558:
2544:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2545:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ;
2546:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2547:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2548:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3919              		.loc 1 2548 0
 3920 0026 0646     		mov	r6, r0
 3921 0028 0028     		cmp	r0, #0
 3922 002a 40F09680 		bne	.L475
2542:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
 3923              		.loc 1 2542 0
 3924 002e 05F01F08 		and	r8, r5, #31
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 3925              		.loc 1 2549 0
 3926 0032 03AB     		add	r3, sp, #12
 3927 0034 8C93     		str	r3, [sp, #560]
2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 3928              		.loc 1 2550 0
 3929 0036 0199     		ldr	r1, [sp, #4]
 3930 0038 06A8     		add	r0, sp, #24
 3931              	.LVL559:
ARM GAS  /tmp/ccktbAOa.s 			page 123


 3932 003a FFF7FEFF 		bl	follow_path
 3933              	.LVL560:
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
 3934              		.loc 1 2551 0
 3935 003e 8B9F     		ldr	r7, [sp, #556]
 3936              	.LVL561:
2552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3937              		.loc 1 2553 0
 3938 0040 0346     		mov	r3, r0
 3939 0042 0028     		cmp	r0, #0
 3940 0044 40F08E80 		bne	.L448
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
 3941              		.loc 1 2554 0
 3942 0048 002F     		cmp	r7, #0
 3943 004a 00F0B580 		beq	.L449
2555:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2557:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 3944              		.loc 1 2558 0
 3945 004e 38F00103 		bics	r3, r8, #1
 3946 0052 14BF     		ite	ne
 3947 0054 0121     		movne	r1, #1
 3948 0056 0021     		moveq	r1, #0
 3949 0058 06A8     		add	r0, sp, #24
 3950              	.LVL562:
 3951 005a FFF7FEFF 		bl	chk_lock
 3952              	.LVL563:
 3953 005e 0346     		mov	r3, r0
 3954              	.LVL564:
2559:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 3955              		.loc 1 2562 0
 3956 0060 15F01C0F 		tst	r5, #28
 3957 0064 53D0     		beq	.L450
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 3958              		.loc 1 2563 0
 3959 0066 48B9     		cbnz	r0, .L461
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2566:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
2567:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
2569:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 3960              		.loc 1 2574 0
 3961 0068 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3962 006a 13F0110F 		tst	r3, #17
 3963 006e 40F0AF80 		bne	.L468
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
ARM GAS  /tmp/ccktbAOa.s 			page 124


2576:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
 3964              		.loc 1 2577 0
 3965 0072 15F0040F 		tst	r5, #4
 3966 0076 07D0     		beq	.L454
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
 3967              		.loc 1 2578 0
 3968 0078 0826     		movs	r6, #8
 3969              	.LVL565:
 3970 007a 6EE0     		b	.L475
 3971              	.LVL566:
 3972              	.L461:
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 3973              		.loc 1 2564 0
 3974 007c 042B     		cmp	r3, #4
 3975 007e 2DD0     		beq	.L477
 3976              	.L452:
 3977              	.LVL567:
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
 3978              		.loc 1 2570 0
 3979 0080 48F00808 		orr	r8, r8, #8
 3980              	.LVL568:
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3981              		.loc 1 2571 0
 3982 0084 8B9F     		ldr	r7, [sp, #556]
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 3983              		.loc 1 2581 0
 3984 0086 B3BB     		cbnz	r3, .L478
 3985              	.LVL569:
 3986              	.L454:
 3987              		.loc 1 2581 0 is_stmt 0 discriminator 1
 3988 0088 18F0080F 		tst	r8, #8
 3989 008c 50D0     		beq	.L457
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 3990              		.loc 1 2582 0 is_stmt 1
 3991 008e FFF7FEFF 		bl	get_fattime
 3992              	.LVL570:
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
 3993              		.loc 1 2583 0
 3994 0092 B873     		strb	r0, [r7, #14]
 3995 0094 C0F30723 		ubfx	r3, r0, #8, #8
 3996 0098 FB73     		strb	r3, [r7, #15]
 3997 009a 030C     		lsrs	r3, r0, #16
 3998 009c 3B74     		strb	r3, [r7, #16]
 3999 009e 000E     		lsrs	r0, r0, #24
 4000              	.LVL571:
 4001 00a0 7874     		strb	r0, [r7, #17]
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
 4002              		.loc 1 2584 0
 4003 00a2 0025     		movs	r5, #0
 4004 00a4 FD72     		strb	r5, [r7, #11]
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
 4005              		.loc 1 2585 0
 4006 00a6 3D77     		strb	r5, [r7, #28]
 4007 00a8 7D77     		strb	r5, [r7, #29]
ARM GAS  /tmp/ccktbAOa.s 			page 125


 4008 00aa BD77     		strb	r5, [r7, #30]
 4009 00ac FD77     		strb	r5, [r7, #31]
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
 4010              		.loc 1 2586 0
 4011 00ae 3946     		mov	r1, r7
 4012 00b0 8698     		ldr	r0, [sp, #536]
 4013 00b2 FFF7FEFF 		bl	ld_clust
 4014              	.LVL572:
 4015              	.LBB50:
 4016              	.LBB51:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 4017              		.loc 1 1330 0
 4018 00b6 BD76     		strb	r5, [r7, #26]
 4019 00b8 FD76     		strb	r5, [r7, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4020              		.loc 1 1331 0
 4021 00ba 3D75     		strb	r5, [r7, #20]
 4022 00bc 7D75     		strb	r5, [r7, #21]
 4023              	.LVL573:
 4024              	.LBE51:
 4025              	.LBE50:
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 4026              		.loc 1 2588 0
 4027 00be 869B     		ldr	r3, [sp, #536]
 4028 00c0 0122     		movs	r2, #1
 4029 00c2 83F80422 		strb	r2, [r3, #516]
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
 4030              		.loc 1 2589 0
 4031 00c6 0546     		mov	r5, r0
 4032 00c8 80B3     		cbz	r0, .L458
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
 4033              		.loc 1 2590 0
 4034 00ca D3F82C92 		ldr	r9, [r3, #556]
 4035              	.LVL574:
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
 4036              		.loc 1 2591 0
 4037 00ce 0146     		mov	r1, r0
 4038 00d0 1846     		mov	r0, r3
 4039              	.LVL575:
 4040 00d2 FFF7FEFF 		bl	remove_chain
 4041              	.LVL576:
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 4042              		.loc 1 2592 0
 4043 00d6 80B1     		cbz	r0, .L479
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
 4044              		.loc 1 2591 0
 4045 00d8 0646     		mov	r6, r0
 4046 00da 3EE0     		b	.L475
 4047              	.LVL577:
 4048              	.L477:
 4049              	.LBB52:
 4050              	.LBB53:
 692:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 4051              		.loc 1 692 0
 4052 00dc 404B     		ldr	r3, .L481
 4053 00de 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccktbAOa.s 			page 126


 4054 00e0 23B1     		cbz	r3, .L453
 4055              	.LVL578:
 4056 00e2 3F4B     		ldr	r3, .L481
 4057 00e4 DB68     		ldr	r3, [r3, #12]
 4058 00e6 0BB1     		cbz	r3, .L453
 4059              	.LBE53:
 4060              	.LBE52:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4061              		.loc 1 2566 0
 4062 00e8 1223     		movs	r3, #18
 4063 00ea C9E7     		b	.L452
 4064              	.LVL579:
 4065              	.L453:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4066              		.loc 1 2566 0 is_stmt 0 discriminator 1
 4067 00ec 06A8     		add	r0, sp, #24
 4068 00ee FFF7FEFF 		bl	dir_register
 4069              	.LVL580:
 4070 00f2 0346     		mov	r3, r0
 4071 00f4 C4E7     		b	.L452
 4072              	.LVL581:
 4073              	.L478:
 4074 00f6 1E46     		mov	r6, r3
 4075 00f8 2FE0     		b	.L475
 4076              	.LVL582:
 4077              	.L479:
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 4078              		.loc 1 2593 0 is_stmt 1
 4079 00fa 8698     		ldr	r0, [sp, #536]
 4080              	.LVL583:
 4081 00fc 013D     		subs	r5, r5, #1
 4082              	.LVL584:
 4083 00fe C0F80C52 		str	r5, [r0, #524]
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
 4084              		.loc 1 2594 0
 4085 0102 4946     		mov	r1, r9
 4086 0104 FFF7FEFF 		bl	move_window
 4087              	.LVL585:
2595:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Follow succeeded */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2607:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 4088              		.loc 1 2609 0
 4089 0108 80B1     		cbz	r0, .L458
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
 4090              		.loc 1 2594 0
ARM GAS  /tmp/ccktbAOa.s 			page 127


 4091 010a 0646     		mov	r6, r0
 4092 010c 25E0     		b	.L475
 4093              	.LVL586:
 4094              	.L450:
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
 4095              		.loc 1 2600 0
 4096 010e 0028     		cmp	r0, #0
 4097 0110 60D1     		bne	.L471
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4098              		.loc 1 2601 0
 4099 0112 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4100 0114 13F0100F 		tst	r3, #16
 4101 0118 5ED1     		bne	.L472
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4102              		.loc 1 2604 0
 4103 011a 15F0020F 		tst	r5, #2
 4104 011e 02D0     		beq	.L459
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4105              		.loc 1 2604 0 is_stmt 0 discriminator 1
 4106 0120 13F0010F 		tst	r3, #1
 4107 0124 5AD1     		bne	.L473
 4108              	.L459:
 4109              	.LVL587:
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4110              		.loc 1 2610 0 is_stmt 1
 4111 0126 15F0080F 		tst	r5, #8
 4112 012a 01D0     		beq	.L457
 4113              	.LVL588:
 4114              	.L458:
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
 4115              		.loc 1 2611 0
 4116 012c 48F02008 		orr	r8, r8, #32
 4117              	.LVL589:
 4118              	.L457:
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
 4119              		.loc 1 2612 0
 4120 0130 869B     		ldr	r3, [sp, #536]
 4121 0132 D3F82C32 		ldr	r3, [r3, #556]
 4122 0136 C4F81C32 		str	r3, [r4, #540]
2613:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
 4123              		.loc 1 2613 0
 4124 013a C4F82072 		str	r7, [r4, #544]
2614:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 4125              		.loc 1 2615 0
 4126 013e 38F00103 		bics	r3, r8, #1
 4127 0142 14BF     		ite	ne
 4128 0144 0121     		movne	r1, #1
 4129 0146 0021     		moveq	r1, #0
 4130 0148 06A8     		add	r0, sp, #24
 4131 014a FFF7FEFF 		bl	inc_lock
 4132              	.LVL590:
 4133 014e C4F82802 		str	r0, [r4, #552]
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
 4134              		.loc 1 2616 0
 4135 0152 58B9     		cbnz	r0, .L464
 4136 0154 0226     		movs	r6, #2
ARM GAS  /tmp/ccktbAOa.s 			page 128


 4137              	.LVL591:
 4138 0156 00E0     		b	.L475
 4139              	.LVL592:
 4140              	.L466:
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4141              		.loc 1 2537 0
 4142 0158 0926     		movs	r6, #9
 4143              	.LVL593:
 4144              	.L475:
2617:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2618:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 
2620:Middlewares/Third_Party/FatFs/src/ff.c **** #else				/* R/O configuration */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow succeeded */
2622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
2623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Current directory itself */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2630:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
2640:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;						/* Normal seek mode */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fs = dj.fs;	 					/* Validate file object */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 
2648:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
2649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4145              		.loc 1 2649 0
 4146 015a 3046     		mov	r0, r6
 4147 015c 0DF50F7D 		add	sp, sp, #572
 4148              	.LCFI40:
 4149              		.cfi_remember_state
 4150              		.cfi_def_cfa_offset 28
 4151              		@ sp needed
 4152 0160 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4153              	.LVL594:
 4154              	.L448:
 4155              	.LCFI41:
 4156              		.cfi_restore_state
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4157              		.loc 1 2562 0
 4158 0164 15F01C0F 		tst	r5, #28
ARM GAS  /tmp/ccktbAOa.s 			page 129


 4159 0168 88D1     		bne	.L461
 4160              	.LVL595:
 4161              	.L465:
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
 4162              		.loc 1 2633 0
 4163 016a 53BB     		cbnz	r3, .L480
 4164              	.LVL596:
 4165              	.L464:
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
 4166              		.loc 1 2634 0
 4167 016c 84F80682 		strb	r8, [r4, #518]
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
 4168              		.loc 1 2635 0
 4169 0170 0025     		movs	r5, #0
 4170 0172 84F80752 		strb	r5, [r4, #519]
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
 4171              		.loc 1 2636 0
 4172 0176 DDF81882 		ldr	r8, [sp, #536]
 4173              	.LVL597:
 4174 017a 3946     		mov	r1, r7
 4175 017c 4046     		mov	r0, r8
 4176 017e FFF7FEFF 		bl	ld_clust
 4177              	.LVL598:
 4178 0182 C4F81002 		str	r0, [r4, #528]
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
 4179              		.loc 1 2637 0
 4180 0186 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 4181 0188 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 4182 018a 1B04     		lsls	r3, r3, #16
 4183 018c 43EA0263 		orr	r3, r3, r2, lsl #24
 4184 0190 3A7F     		ldrb	r2, [r7, #28]	@ zero_extendqisi2
 4185 0192 1343     		orrs	r3, r3, r2
 4186 0194 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 4187 0196 43EA0223 		orr	r3, r3, r2, lsl #8
 4188 019a C4F80C32 		str	r3, [r4, #524]
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
 4189              		.loc 1 2638 0
 4190 019e C4F80852 		str	r5, [r4, #520]
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
 4191              		.loc 1 2639 0
 4192 01a2 C4F81852 		str	r5, [r4, #536]
2641:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4193              		.loc 1 2641 0
 4194 01a6 C4F82452 		str	r5, [r4, #548]
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
 4195              		.loc 1 2643 0
 4196 01aa C4F80082 		str	r8, [r4, #512]
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4197              		.loc 1 2644 0
 4198 01ae B8F80632 		ldrh	r3, [r8, #518]
 4199 01b2 A4F80432 		strh	r3, [r4, #516]	@ movhi
 4200 01b6 D0E7     		b	.L475
 4201              	.LVL599:
 4202              	.L449:
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4203              		.loc 1 2562 0
 4204 01b8 15F01C0F 		tst	r5, #28
ARM GAS  /tmp/ccktbAOa.s 			page 130


 4205 01bc 03D1     		bne	.L463
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 4206              		.loc 1 2555 0
 4207 01be 0623     		movs	r3, #6
 4208 01c0 D3E7     		b	.L465
 4209              	.LVL600:
 4210              	.L480:
 4211 01c2 1E46     		mov	r6, r3
 4212 01c4 C9E7     		b	.L475
 4213              	.LVL601:
 4214              	.L463:
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
 4215              		.loc 1 2570 0
 4216 01c6 48F00808 		orr	r8, r8, #8
 4217              	.LVL602:
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4218              		.loc 1 2571 0
 4219 01ca 8B9F     		ldr	r7, [sp, #556]
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 4220              		.loc 1 2555 0
 4221 01cc 0623     		movs	r3, #6
 4222 01ce CCE7     		b	.L465
 4223              	.LVL603:
 4224              	.L468:
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4225              		.loc 1 2575 0
 4226 01d0 0726     		movs	r6, #7
 4227 01d2 C2E7     		b	.L475
 4228              	.L471:
2558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4229              		.loc 1 2558 0
 4230 01d4 0646     		mov	r6, r0
 4231 01d6 C0E7     		b	.L475
 4232              	.L472:
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4233              		.loc 1 2602 0
 4234 01d8 0426     		movs	r6, #4
 4235 01da BEE7     		b	.L475
 4236              	.L473:
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4237              		.loc 1 2605 0
 4238 01dc 0726     		movs	r6, #7
 4239              	.LVL604:
 4240 01de BCE7     		b	.L475
 4241              	.L482:
 4242              		.align	2
 4243              	.L481:
 4244 01e0 00000000 		.word	.LANCHOR0
 4245              		.cfi_endproc
 4246              	.LFE161:
 4248              		.section	.text.f_read,"ax",%progbits
 4249              		.align	1
 4250              		.global	f_read
 4251              		.syntax unified
 4252              		.thumb
 4253              		.thumb_func
 4254              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccktbAOa.s 			page 131


 4256              	f_read:
 4257              	.LFB162:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 
2654:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2655:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
2656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 
2658:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 		/* Pointer to the file object */
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,		/* Pointer to data buffer */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,		/* Number of bytes to read */
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br		/* Pointer to number of bytes read */
2663:Middlewares/Third_Party/FatFs/src/ff.c **** )
2664:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4258              		.loc 1 2664 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 8
 4261              		@ frame_needed = 0, uses_anonymous_args = 0
 4262              	.LVL605:
 4263 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4264              	.LCFI42:
 4265              		.cfi_def_cfa_offset 36
 4266              		.cfi_offset 4, -36
 4267              		.cfi_offset 5, -32
 4268              		.cfi_offset 6, -28
 4269              		.cfi_offset 7, -24
 4270              		.cfi_offset 8, -20
 4271              		.cfi_offset 9, -16
 4272              		.cfi_offset 10, -12
 4273              		.cfi_offset 11, -8
 4274              		.cfi_offset 14, -4
 4275 0004 83B0     		sub	sp, sp, #12
 4276              	.LCFI43:
 4277              		.cfi_def_cfa_offset 48
 4278 0006 0446     		mov	r4, r0
 4279 0008 8846     		mov	r8, r1
 4280 000a 1546     		mov	r5, r2
 4281 000c 9946     		mov	r9, r3
 4282              	.LVL606:
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect, remain;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect, *rbuff = (BYTE*)buff;
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
 4283              		.loc 1 2671 0
 4284 000e 0023     		movs	r3, #0
 4285              	.LVL607:
 4286 0010 C9F80030 		str	r3, [r9]
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);							/* Check validity */
 4287              		.loc 1 2673 0
 4288 0014 FFF7FEFF 		bl	validate
ARM GAS  /tmp/ccktbAOa.s 			page 132


 4289              	.LVL608:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4290              		.loc 1 2674 0
 4291 0018 0190     		str	r0, [sp, #4]
 4292 001a 58B9     		cbnz	r0, .L484
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)								/* Check error */
 4293              		.loc 1 2675 0
 4294 001c 94F80732 		ldrb	r3, [r4, #519]	@ zero_extendqisi2
 4295 0020 002B     		cmp	r3, #0
 4296 0022 40F0D080 		bne	.L502
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4297              		.loc 1 2677 0
 4298 0026 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4299 002a 13F0010F 		tst	r3, #1
 4300 002e 05D1     		bne	.L506
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
 4301              		.loc 1 2678 0
 4302 0030 0723     		movs	r3, #7
 4303 0032 0193     		str	r3, [sp, #4]
 4304              	.LVL609:
 4305              	.L484:
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
2690:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2710:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2711:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
ARM GAS  /tmp/ccktbAOa.s 			page 133


2714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
2717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2718:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
2724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)	/* Fill sector cache */
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2733:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2734:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)		/* Move sector window */
2741:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2743:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->buf.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2745:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
2749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4306              		.loc 1 2749 0
 4307 0034 0198     		ldr	r0, [sp, #4]
 4308 0036 03B0     		add	sp, sp, #12
 4309              	.LCFI44:
 4310              		.cfi_remember_state
 4311              		.cfi_def_cfa_offset 36
 4312              		@ sp needed
 4313 0038 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4314              	.LVL610:
 4315              	.L506:
 4316              	.LCFI45:
 4317              		.cfi_restore_state
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4318              		.loc 1 2679 0
 4319 003c D4F80C62 		ldr	r6, [r4, #524]
 4320 0040 D4F80832 		ldr	r3, [r4, #520]
 4321 0044 F61A     		subs	r6, r6, r3
 4322              	.LVL611:
 4323 0046 AE42     		cmp	r6, r5
 4324 0048 28BF     		it	cs
 4325 004a 2E46     		movcs	r6, r5
ARM GAS  /tmp/ccktbAOa.s 			page 134


 4326              	.LVL612:
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4327              		.loc 1 2682 0
 4328 004c 002E     		cmp	r6, #0
 4329 004e 67D1     		bne	.L501
 4330 0050 F0E7     		b	.L484
 4331              	.LVL613:
 4332              	.L487:
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4333              		.loc 1 2691 0
 4334 0052 D4F82432 		ldr	r3, [r4, #548]
 4335              	.LVL614:
 4336 0056 1BB1     		cbz	r3, .L489
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
 4337              		.loc 1 2692 0
 4338 0058 2046     		mov	r0, r4
 4339              	.LVL615:
 4340 005a FFF7FEFF 		bl	clmt_clust
 4341              	.LVL616:
 4342 005e 73E0     		b	.L488
 4343              	.LVL617:
 4344              	.L489:
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4345              		.loc 1 2695 0
 4346 0060 D4F81412 		ldr	r1, [r4, #532]
 4347              	.LVL618:
 4348 0064 FFF7FEFF 		bl	get_fat
 4349              	.LVL619:
 4350 0068 6EE0     		b	.L488
 4351              	.L509:
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4352              		.loc 1 2697 0 discriminator 1
 4353 006a 0223     		movs	r3, #2
 4354 006c 84F80732 		strb	r3, [r4, #519]
 4355 0070 0193     		str	r3, [sp, #4]
 4356 0072 DFE7     		b	.L484
 4357              	.L510:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4358              		.loc 1 2698 0 discriminator 1
 4359 0074 0123     		movs	r3, #1
 4360 0076 84F80732 		strb	r3, [r4, #519]
 4361 007a 0193     		str	r3, [sp, #4]
 4362 007c DAE7     		b	.L484
 4363              	.LVL620:
 4364              	.L511:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4365              		.loc 1 2702 0 discriminator 1
 4366 007e 0223     		movs	r3, #2
 4367 0080 84F80732 		strb	r3, [r4, #519]
 4368 0084 0193     		str	r3, [sp, #4]
 4369 0086 D5E7     		b	.L484
 4370              	.LVL621:
 4371              	.L512:
2709:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4372              		.loc 1 2709 0
 4373 0088 0123     		movs	r3, #1
 4374 008a 84F80732 		strb	r3, [r4, #519]
ARM GAS  /tmp/ccktbAOa.s 			page 135


 4375 008e 0193     		str	r3, [sp, #4]
 4376 0090 D0E7     		b	.L484
 4377              	.L513:
2716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4378              		.loc 1 2716 0
 4379 0092 4FF40072 		mov	r2, #512
 4380 0096 2146     		mov	r1, r4
 4381 0098 08EB4020 		add	r0, r8, r0, lsl #9
 4382 009c FFF7FEFF 		bl	mem_cpy
 4383              	.LVL622:
 4384 00a0 84E0     		b	.L496
 4385              	.L493:
2723:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 4386              		.loc 1 2723 0
 4387 00a2 D4F81822 		ldr	r2, [r4, #536]
 4388 00a6 9542     		cmp	r5, r2
 4389 00a8 1DD0     		beq	.L498
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 4390              		.loc 1 2725 0
 4391 00aa 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4392 00ae 13F0400F 		tst	r3, #64
 4393 00b2 0DD0     		beq	.L499
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 4394              		.loc 1 2726 0
 4395 00b4 0123     		movs	r3, #1
 4396 00b6 2146     		mov	r1, r4
 4397 00b8 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4398 00bc FFF7FEFF 		bl	disk_write
 4399              	.LVL623:
 4400 00c0 0028     		cmp	r0, #0
 4401 00c2 76D1     		bne	.L507
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4402              		.loc 1 2728 0
 4403 00c4 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4404 00c8 23F04003 		bic	r3, r3, #64
 4405 00cc 84F80632 		strb	r3, [r4, #518]
 4406              	.L499:
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4407              		.loc 1 2731 0
 4408 00d0 D4F80002 		ldr	r0, [r4, #512]
 4409 00d4 0123     		movs	r3, #1
 4410 00d6 2A46     		mov	r2, r5
 4411 00d8 2146     		mov	r1, r4
 4412 00da 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 4413 00de FFF7FEFF 		bl	disk_read
 4414              	.LVL624:
 4415 00e2 0028     		cmp	r0, #0
 4416 00e4 6AD1     		bne	.L508
 4417              	.L498:
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4418              		.loc 1 2735 0
 4419 00e6 C4F81852 		str	r5, [r4, #536]
 4420              	.LVL625:
 4421              	.L485:
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
 4422              		.loc 1 2737 0
 4423 00ea D4F80812 		ldr	r1, [r4, #520]
ARM GAS  /tmp/ccktbAOa.s 			page 136


 4424 00ee C1F30801 		ubfx	r1, r1, #0, #9
 4425 00f2 C1F50075 		rsb	r5, r1, #512
 4426              	.LVL626:
 4427 00f6 B542     		cmp	r5, r6
 4428 00f8 28BF     		it	cs
 4429 00fa 3546     		movcs	r5, r6
 4430              	.LVL627:
2744:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4431              		.loc 1 2744 0
 4432 00fc 2A46     		mov	r2, r5
 4433 00fe 2144     		add	r1, r1, r4
 4434 0100 4046     		mov	r0, r8
 4435 0102 FFF7FEFF 		bl	mem_cpy
 4436              	.LVL628:
 4437              	.L497:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4438              		.loc 1 2683 0
 4439 0106 A844     		add	r8, r8, r5
 4440              	.LVL629:
 4441 0108 D4F80832 		ldr	r3, [r4, #520]
 4442 010c 2B44     		add	r3, r3, r5
 4443 010e C4F80832 		str	r3, [r4, #520]
 4444 0112 D9F80030 		ldr	r3, [r9]
 4445 0116 2B44     		add	r3, r3, r5
 4446 0118 C9F80030 		str	r3, [r9]
 4447              	.LVL630:
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4448              		.loc 1 2682 0
 4449 011c 761B     		subs	r6, r6, r5
 4450              	.LVL631:
 4451 011e 89D0     		beq	.L484
 4452              	.LVL632:
 4453              	.L501:
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4454              		.loc 1 2684 0
 4455 0120 D4F80812 		ldr	r1, [r4, #520]
 4456 0124 C1F30803 		ubfx	r3, r1, #0, #9
 4457 0128 002B     		cmp	r3, #0
 4458 012a DED1     		bne	.L485
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
 4459              		.loc 1 2685 0
 4460 012c D4F80002 		ldr	r0, [r4, #512]
 4461 0130 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 4462 0134 013B     		subs	r3, r3, #1
 4463 0136 03EA5123 		and	r3, r3, r1, lsr #9
 4464              	.LVL633:
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4465              		.loc 1 2686 0
 4466 013a 13F0FF07 		ands	r7, r3, #255
 4467 013e 0AD1     		bne	.L486
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
 4468              		.loc 1 2687 0
 4469 0140 0029     		cmp	r1, #0
 4470 0142 86D1     		bne	.L487
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4471              		.loc 1 2688 0
 4472 0144 D4F81002 		ldr	r0, [r4, #528]
ARM GAS  /tmp/ccktbAOa.s 			page 137


 4473              	.LVL634:
 4474              	.L488:
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4475              		.loc 1 2697 0
 4476 0148 0128     		cmp	r0, #1
 4477 014a 8ED9     		bls	.L509
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4478              		.loc 1 2698 0
 4479 014c B0F1FF3F 		cmp	r0, #-1
 4480 0150 90D0     		beq	.L510
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4481              		.loc 1 2699 0
 4482 0152 C4F81402 		str	r0, [r4, #532]
 4483              	.LVL635:
 4484              	.L486:
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4485              		.loc 1 2701 0
 4486 0156 D4F800A2 		ldr	r10, [r4, #512]
 4487 015a D4F81412 		ldr	r1, [r4, #532]
 4488 015e 5046     		mov	r0, r10
 4489 0160 FFF7FEFF 		bl	clust2sect
 4490              	.LVL636:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4491              		.loc 1 2702 0
 4492 0164 0546     		mov	r5, r0
 4493 0166 0028     		cmp	r0, #0
 4494 0168 89D0     		beq	.L511
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 4495              		.loc 1 2703 0
 4496 016a 3D44     		add	r5, r5, r7
 4497              	.LVL637:
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4498              		.loc 1 2705 0
 4499 016c 5FEA562B 		lsrs	fp, r6, #9
 4500              	.LVL638:
 4501 0170 97D0     		beq	.L493
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 4502              		.loc 1 2706 0
 4503 0172 9AF80232 		ldrb	r3, [r10, #514]	@ zero_extendqisi2
 4504 0176 07EB0B02 		add	r2, r7, fp
 4505 017a 9A42     		cmp	r2, r3
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
 4506              		.loc 1 2707 0
 4507 017c 88BF     		it	hi
 4508 017e A3EB070B 		subhi	fp, r3, r7
 4509              	.LVL639:
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4510              		.loc 1 2708 0
 4511 0182 5B46     		mov	r3, fp
 4512 0184 2A46     		mov	r2, r5
 4513 0186 4146     		mov	r1, r8
 4514 0188 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4515 018c FFF7FEFF 		bl	disk_read
 4516              	.LVL640:
 4517 0190 0028     		cmp	r0, #0
 4518 0192 7FF479AF 		bne	.L512
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
ARM GAS  /tmp/ccktbAOa.s 			page 138


 4519              		.loc 1 2715 0
 4520 0196 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4521 019a 13F0400F 		tst	r3, #64
 4522 019e 05D0     		beq	.L496
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
 4523              		.loc 1 2715 0 is_stmt 0 discriminator 1
 4524 01a0 D4F81802 		ldr	r0, [r4, #536]
 4525 01a4 401B     		subs	r0, r0, r5
 4526 01a6 8345     		cmp	fp, r0
 4527 01a8 3FF673AF 		bhi	.L513
 4528              	.L496:
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4529              		.loc 1 2719 0 is_stmt 1
 4530 01ac 4FEA4B25 		lsl	r5, fp, #9
 4531              	.LVL641:
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4532              		.loc 1 2720 0
 4533 01b0 A9E7     		b	.L497
 4534              	.LVL642:
 4535              	.L507:
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 4536              		.loc 1 2727 0
 4537 01b2 0123     		movs	r3, #1
 4538 01b4 84F80732 		strb	r3, [r4, #519]
 4539 01b8 0193     		str	r3, [sp, #4]
 4540 01ba 3BE7     		b	.L484
 4541              	.L508:
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4542              		.loc 1 2732 0
 4543 01bc 0123     		movs	r3, #1
 4544 01be 84F80732 		strb	r3, [r4, #519]
 4545 01c2 0193     		str	r3, [sp, #4]
 4546 01c4 36E7     		b	.L484
 4547              	.LVL643:
 4548              	.L502:
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4549              		.loc 1 2676 0
 4550 01c6 0193     		str	r3, [sp, #4]
 4551 01c8 34E7     		b	.L484
 4552              		.cfi_endproc
 4553              	.LFE162:
 4555              		.section	.text.f_write,"ax",%progbits
 4556              		.align	1
 4557              		.global	f_write
 4558              		.syntax unified
 4559              		.thumb
 4560              		.thumb_func
 4561              		.fpu fpv4-sp-d16
 4563              	f_write:
 4564              	.LFB163:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** 
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 
2754:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2755:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2756:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
ARM GAS  /tmp/ccktbAOa.s 			page 139


2757:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 
2759:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void *buff,	/* Pointer to the data to be written */
2762:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
2764:Middlewares/Third_Party/FatFs/src/ff.c **** )
2765:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4565              		.loc 1 2765 0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 8
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 4569              	.LVL644:
 4570 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4571              	.LCFI46:
 4572              		.cfi_def_cfa_offset 36
 4573              		.cfi_offset 4, -36
 4574              		.cfi_offset 5, -32
 4575              		.cfi_offset 6, -28
 4576              		.cfi_offset 7, -24
 4577              		.cfi_offset 8, -20
 4578              		.cfi_offset 9, -16
 4579              		.cfi_offset 10, -12
 4580              		.cfi_offset 11, -8
 4581              		.cfi_offset 14, -4
 4582 0004 83B0     		sub	sp, sp, #12
 4583              	.LCFI47:
 4584              		.cfi_def_cfa_offset 48
 4585 0006 0446     		mov	r4, r0
 4586 0008 8846     		mov	r8, r1
 4587 000a 1646     		mov	r6, r2
 4588 000c 9946     		mov	r9, r3
 4589              	.LVL645:
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
2770:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 4590              		.loc 1 2773 0
 4591 000e 0023     		movs	r3, #0
 4592              	.LVL646:
 4593 0010 C9F80030 		str	r3, [r9]
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity */
 4594              		.loc 1 2775 0
 4595 0014 FFF7FEFF 		bl	validate
 4596              	.LVL647:
2776:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4597              		.loc 1 2776 0
 4598 0018 0190     		str	r0, [sp, #4]
 4599 001a 58B9     		cbnz	r0, .L515
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)							/* Check error */
 4600              		.loc 1 2777 0
ARM GAS  /tmp/ccktbAOa.s 			page 140


 4601 001c 94F80732 		ldrb	r3, [r4, #519]	@ zero_extendqisi2
 4602 0020 002B     		cmp	r3, #0
 4603 0022 40F0F880 		bne	.L536
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2779:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4604              		.loc 1 2779 0
 4605 0026 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4606 002a 13F0020F 		tst	r3, #2
 4607 002e 05D1     		bne	.L541
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
 4608              		.loc 1 2780 0
 4609 0030 0723     		movs	r3, #7
 4610 0032 0193     		str	r3, [sp, #4]
 4611              	.LVL648:
 4612              	.L515:
2781:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
2782:Middlewares/Third_Party/FatFs/src/ff.c **** 
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
2793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
2808:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
2809:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
ARM GAS  /tmp/ccktbAOa.s 			page 141


2823:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
2824:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
2826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2828:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->fs->win.d8, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fs->wflag = 0;
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2831:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
2835:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2837:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2846:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2847:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2852:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
2857:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)	/* Move sector window */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->fs->win.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fs->wflag = 1;
2862:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->buf.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA__DIRTY;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
2872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4613              		.loc 1 2872 0
 4614 0034 0198     		ldr	r0, [sp, #4]
 4615 0036 03B0     		add	sp, sp, #12
 4616              	.LCFI48:
 4617              		.cfi_remember_state
 4618              		.cfi_def_cfa_offset 36
 4619              		@ sp needed
ARM GAS  /tmp/ccktbAOa.s 			page 142


 4620 0038 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4621              	.LVL649:
 4622              	.L541:
 4623              	.LCFI49:
 4624              		.cfi_restore_state
2781:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 4625              		.loc 1 2781 0
 4626 003c D4F80832 		ldr	r3, [r4, #520]
 4627 0040 F342     		cmn	r3, r6
 4628 0042 02D2     		bcs	.L516
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 4629              		.loc 1 2783 0
 4630 0044 002E     		cmp	r6, #0
 4631 0046 40F0BB80 		bne	.L534
 4632              	.LVL650:
 4633              	.L516:
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 4634              		.loc 1 2868 0
 4635 004a D4F80832 		ldr	r3, [r4, #520]
 4636 004e D4F80C22 		ldr	r2, [r4, #524]
 4637 0052 9342     		cmp	r3, r2
 4638 0054 88BF     		it	hi
 4639 0056 C4F80C32 		strhi	r3, [r4, #524]
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4640              		.loc 1 2869 0
 4641 005a 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4642 005e 43F02003 		orr	r3, r3, #32
 4643 0062 84F80632 		strb	r3, [r4, #518]
2871:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4644              		.loc 1 2871 0
 4645 0066 E5E7     		b	.L515
 4646              	.LVL651:
 4647              	.L519:
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4648              		.loc 1 2794 0
 4649 0068 D4F82432 		ldr	r3, [r4, #548]
 4650              	.LVL652:
 4651 006c DBB3     		cbz	r3, .L522
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
 4652              		.loc 1 2795 0
 4653 006e 2046     		mov	r0, r4
 4654 0070 FFF7FEFF 		bl	clmt_clust
 4655              	.LVL653:
 4656              	.L521:
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 4657              		.loc 1 2800 0
 4658 0074 0028     		cmp	r0, #0
 4659 0076 E8D0     		beq	.L516
 4660              	.L520:
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4661              		.loc 1 2801 0
 4662 0078 0128     		cmp	r0, #1
 4663 007a 3AD0     		beq	.L542
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4664              		.loc 1 2802 0
 4665 007c B0F1FF3F 		cmp	r0, #-1
 4666 0080 3CD0     		beq	.L543
ARM GAS  /tmp/ccktbAOa.s 			page 143


2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
 4667              		.loc 1 2803 0
 4668 0082 C4F81402 		str	r0, [r4, #532]
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4669              		.loc 1 2804 0
 4670 0086 D4F81032 		ldr	r3, [r4, #528]
 4671 008a 0BB9     		cbnz	r3, .L518
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4672              		.loc 1 2804 0 is_stmt 0 discriminator 1
 4673 008c C4F81002 		str	r0, [r4, #528]
 4674              	.LVL654:
 4675              	.L518:
2810:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 4676              		.loc 1 2810 0 is_stmt 1
 4677 0090 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4678 0094 13F0400F 		tst	r3, #64
 4679 0098 35D1     		bne	.L544
 4680              	.L525:
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4681              		.loc 1 2816 0
 4682 009a D4F800A2 		ldr	r10, [r4, #512]
 4683 009e D4F81412 		ldr	r1, [r4, #532]
 4684 00a2 5046     		mov	r0, r10
 4685 00a4 FFF7FEFF 		bl	clust2sect
 4686              	.LVL655:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4687              		.loc 1 2817 0
 4688 00a8 0546     		mov	r5, r0
 4689 00aa 0028     		cmp	r0, #0
 4690 00ac 42D0     		beq	.L545
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 4691              		.loc 1 2818 0
 4692 00ae 3D44     		add	r5, r5, r7
 4693              	.LVL656:
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4694              		.loc 1 2820 0
 4695 00b0 5FEA562B 		lsrs	fp, r6, #9
 4696              	.LVL657:
 4697 00b4 56D0     		beq	.L528
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 4698              		.loc 1 2821 0
 4699 00b6 9AF80232 		ldrb	r3, [r10, #514]	@ zero_extendqisi2
 4700 00ba 07EB0B02 		add	r2, r7, fp
 4701 00be 9A42     		cmp	r2, r3
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
 4702              		.loc 1 2822 0
 4703 00c0 88BF     		it	hi
 4704 00c2 A3EB070B 		subhi	fp, r3, r7
 4705              	.LVL658:
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4706              		.loc 1 2823 0
 4707 00c6 5B46     		mov	r3, fp
 4708 00c8 2A46     		mov	r2, r5
 4709 00ca 4146     		mov	r1, r8
 4710 00cc 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4711 00d0 FFF7FEFF 		bl	disk_write
 4712              	.LVL659:
ARM GAS  /tmp/ccktbAOa.s 			page 144


 4713 00d4 98BB     		cbnz	r0, .L546
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
 4714              		.loc 1 2832 0
 4715 00d6 D4F81812 		ldr	r1, [r4, #536]
 4716 00da 491B     		subs	r1, r1, r5
 4717 00dc 8B45     		cmp	fp, r1
 4718 00de 33D8     		bhi	.L547
 4719              	.L531:
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4720              		.loc 1 2838 0
 4721 00e0 4FEA4B25 		lsl	r5, fp, #9
 4722              	.LVL660:
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4723              		.loc 1 2839 0
 4724 00e4 5EE0     		b	.L532
 4725              	.LVL661:
 4726              	.L522:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4727              		.loc 1 2798 0
 4728 00e6 D4F81412 		ldr	r1, [r4, #532]
 4729              	.LVL662:
 4730 00ea 1046     		mov	r0, r2
 4731 00ec FFF7FEFF 		bl	create_chain
 4732              	.LVL663:
 4733 00f0 C0E7     		b	.L521
 4734              	.L542:
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4735              		.loc 1 2801 0 discriminator 1
 4736 00f2 0223     		movs	r3, #2
 4737 00f4 84F80732 		strb	r3, [r4, #519]
 4738 00f8 0193     		str	r3, [sp, #4]
 4739 00fa 9BE7     		b	.L515
 4740              	.L543:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 4741              		.loc 1 2802 0 discriminator 1
 4742 00fc 0123     		movs	r3, #1
 4743 00fe 84F80732 		strb	r3, [r4, #519]
 4744 0102 0193     		str	r3, [sp, #4]
 4745 0104 96E7     		b	.L515
 4746              	.LVL664:
 4747              	.L544:
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4748              		.loc 1 2811 0
 4749 0106 D4F80002 		ldr	r0, [r4, #512]
 4750 010a 0123     		movs	r3, #1
 4751 010c D4F81822 		ldr	r2, [r4, #536]
 4752 0110 2146     		mov	r1, r4
 4753 0112 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 4754 0116 FFF7FEFF 		bl	disk_write
 4755              	.LVL665:
 4756 011a 30B9     		cbnz	r0, .L548
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4757              		.loc 1 2813 0
 4758 011c 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4759 0120 23F04003 		bic	r3, r3, #64
 4760 0124 84F80632 		strb	r3, [r4, #518]
 4761 0128 B7E7     		b	.L525
ARM GAS  /tmp/ccktbAOa.s 			page 145


 4762              	.L548:
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 4763              		.loc 1 2812 0
 4764 012a 0123     		movs	r3, #1
 4765 012c 84F80732 		strb	r3, [r4, #519]
 4766 0130 0193     		str	r3, [sp, #4]
 4767 0132 7FE7     		b	.L515
 4768              	.LVL666:
 4769              	.L545:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4770              		.loc 1 2817 0 discriminator 1
 4771 0134 0223     		movs	r3, #2
 4772 0136 84F80732 		strb	r3, [r4, #519]
 4773 013a 0193     		str	r3, [sp, #4]
 4774 013c 7AE7     		b	.L515
 4775              	.LVL667:
 4776              	.L546:
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 4777              		.loc 1 2824 0
 4778 013e 0123     		movs	r3, #1
 4779 0140 84F80732 		strb	r3, [r4, #519]
 4780 0144 0193     		str	r3, [sp, #4]
 4781 0146 75E7     		b	.L515
 4782              	.L547:
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
 4783              		.loc 1 2833 0
 4784 0148 4FF40072 		mov	r2, #512
 4785 014c 08EB4121 		add	r1, r8, r1, lsl #9
 4786 0150 2046     		mov	r0, r4
 4787 0152 FFF7FEFF 		bl	mem_cpy
 4788              	.LVL668:
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4789              		.loc 1 2834 0
 4790 0156 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4791 015a 23F04003 		bic	r3, r3, #64
 4792 015e 84F80632 		strb	r3, [r4, #518]
 4793 0162 BDE7     		b	.L531
 4794              	.L528:
2847:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
 4795              		.loc 1 2847 0
 4796 0164 D4F81832 		ldr	r3, [r4, #536]
 4797 0168 9D42     		cmp	r5, r3
 4798 016a 05D0     		beq	.L533
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
 4799              		.loc 1 2848 0
 4800 016c D4F80822 		ldr	r2, [r4, #520]
 4801 0170 D4F80C32 		ldr	r3, [r4, #524]
 4802 0174 9A42     		cmp	r2, r3
 4803 0176 40D3     		bcc	.L549
 4804              	.L533:
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4805              		.loc 1 2853 0
 4806 0178 C4F81852 		str	r5, [r4, #536]
 4807              	.LVL669:
 4808              	.L517:
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
 4809              		.loc 1 2855 0
ARM GAS  /tmp/ccktbAOa.s 			page 146


 4810 017c D4F80802 		ldr	r0, [r4, #520]
 4811 0180 C0F30800 		ubfx	r0, r0, #0, #9
 4812 0184 C0F50075 		rsb	r5, r0, #512
 4813              	.LVL670:
 4814 0188 B542     		cmp	r5, r6
 4815 018a 28BF     		it	cs
 4816 018c 3546     		movcs	r5, r6
 4817              	.LVL671:
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA__DIRTY;
 4818              		.loc 1 2863 0
 4819 018e 2A46     		mov	r2, r5
 4820 0190 4146     		mov	r1, r8
 4821 0192 2044     		add	r0, r0, r4
 4822 0194 FFF7FEFF 		bl	mem_cpy
 4823              	.LVL672:
2864:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4824              		.loc 1 2864 0
 4825 0198 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 4826 019c 43F04003 		orr	r3, r3, #64
 4827 01a0 84F80632 		strb	r3, [r4, #518]
 4828              	.L532:
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4829              		.loc 1 2784 0
 4830 01a4 A844     		add	r8, r8, r5
 4831              	.LVL673:
 4832 01a6 D4F80832 		ldr	r3, [r4, #520]
 4833 01aa 2B44     		add	r3, r3, r5
 4834 01ac C4F80832 		str	r3, [r4, #520]
 4835 01b0 D9F80030 		ldr	r3, [r9]
 4836 01b4 2B44     		add	r3, r3, r5
 4837 01b6 C9F80030 		str	r3, [r9]
 4838              	.LVL674:
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 4839              		.loc 1 2783 0
 4840 01ba 761B     		subs	r6, r6, r5
 4841              	.LVL675:
 4842 01bc 3FF445AF 		beq	.L516
 4843              	.LVL676:
 4844              	.L534:
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4845              		.loc 1 2785 0
 4846 01c0 D4F80812 		ldr	r1, [r4, #520]
 4847 01c4 C1F30803 		ubfx	r3, r1, #0, #9
 4848 01c8 002B     		cmp	r3, #0
 4849 01ca D7D1     		bne	.L517
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
 4850              		.loc 1 2786 0
 4851 01cc D4F80022 		ldr	r2, [r4, #512]
 4852 01d0 92F80232 		ldrb	r3, [r2, #514]	@ zero_extendqisi2
 4853 01d4 013B     		subs	r3, r3, #1
 4854 01d6 03EA5123 		and	r3, r3, r1, lsr #9
 4855              	.LVL677:
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4856              		.loc 1 2787 0
 4857 01da 13F0FF07 		ands	r7, r3, #255
 4858 01de 7FF457AF 		bne	.L518
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
ARM GAS  /tmp/ccktbAOa.s 			page 147


 4859              		.loc 1 2788 0
 4860 01e2 0029     		cmp	r1, #0
 4861 01e4 7FF440AF 		bne	.L519
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
 4862              		.loc 1 2789 0
 4863 01e8 D4F81002 		ldr	r0, [r4, #528]
 4864              	.LVL678:
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 4865              		.loc 1 2790 0
 4866 01ec 0028     		cmp	r0, #0
 4867 01ee 7FF443AF 		bne	.L520
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
 4868              		.loc 1 2791 0
 4869 01f2 1046     		mov	r0, r2
 4870              	.LVL679:
 4871 01f4 FFF7FEFF 		bl	create_chain
 4872              	.LVL680:
 4873 01f8 3CE7     		b	.L521
 4874              	.LVL681:
 4875              	.L549:
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 4876              		.loc 1 2849 0 discriminator 1
 4877 01fa 0123     		movs	r3, #1
 4878 01fc 2A46     		mov	r2, r5
 4879 01fe 2146     		mov	r1, r4
 4880 0200 9AF80102 		ldrb	r0, [r10, #513]	@ zero_extendqisi2
 4881 0204 FFF7FEFF 		bl	disk_read
 4882              	.LVL682:
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
 4883              		.loc 1 2848 0 discriminator 1
 4884 0208 0028     		cmp	r0, #0
 4885 020a B5D0     		beq	.L533
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4886              		.loc 1 2850 0
 4887 020c 0123     		movs	r3, #1
 4888 020e 84F80732 		strb	r3, [r4, #519]
 4889 0212 0193     		str	r3, [sp, #4]
 4890 0214 0EE7     		b	.L515
 4891              	.LVL683:
 4892              	.L536:
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4893              		.loc 1 2778 0
 4894 0216 0193     		str	r3, [sp, #4]
 4895 0218 0CE7     		b	.L515
 4896              		.cfi_endproc
 4897              	.LFE163:
 4899              		.section	.text.putc_bfd,"ax",%progbits
 4900              		.align	1
 4901              		.syntax unified
 4902              		.thumb
 4903              		.thumb_func
 4904              		.fpu fpv4-sp-d16
 4906              	putc_bfd:
 4907              	.LFB180:
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 148


2876:Middlewares/Third_Party/FatFs/src/ff.c **** 
2877:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2878:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 
2881:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** )
2884:Middlewares/Third_Party/FatFs/src/ff.c **** {
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
2894:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2901:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fp->fs, fp->dir_sect);
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
2919:Middlewares/Third_Party/FatFs/src/ff.c **** }
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 
2921:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 
2926:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2927:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
2928:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 
2930:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp		/* Pointer to the file object to be closed */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccktbAOa.s 			page 149


2933:Middlewares/Third_Party/FatFs/src/ff.c **** {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 
2937:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
2940:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(fp);				/* Lock volume */
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2944:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2945:Middlewares/Third_Party/FatFs/src/ff.c **** 			FATFS *fs = fp->fs;
2946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->lockid);	/* Decrement file open counter */
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs = 0;				/* Invalidate file object */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
2954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2958:Middlewares/Third_Party/FatFs/src/ff.c **** }
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** 
2961:Middlewares/Third_Party/FatFs/src/ff.c **** 
2962:Middlewares/Third_Party/FatFs/src/ff.c **** 
2963:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2964:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
2965:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 
2967:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
2968:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
2969:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** )
2972:Middlewares/Third_Party/FatFs/src/ff.c **** {
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 
2979:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 
2981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
2983:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
2988:Middlewares/Third_Party/FatFs/src/ff.c **** )
2989:Middlewares/Third_Party/FatFs/src/ff.c **** {
ARM GAS  /tmp/ccktbAOa.s 			page 150


2990:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2992:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2993:Middlewares/Third_Party/FatFs/src/ff.c **** 
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dj.dir) {
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->cdir = ld_clust(dj.fs, dj.dir);
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3015:Middlewares/Third_Party/FatFs/src/ff.c **** }
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 
3018:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
3019:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** )
3023:Middlewares/Third_Party/FatFs/src/ff.c **** {
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, (const TCHAR**)&buff, 0);	/* Get current volume */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper directory from current directory */
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 1);			/* Get parent directory */
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3043:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 0);
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.sclust = ld_clust(dj.fs, dj.dir);	/* Goto parent directory */
3046:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 0);
ARM GAS  /tmp/ccktbAOa.s 			page 151


3047:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {							/* Find the entry links to the child directory */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_read(&dj, 0);
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ccl == ld_clust(dj.fs, dj.dir)) break;	/* Found the entry */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(&dj, 0);	
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3056:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfname = buff;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfsize = i;
3059:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = fno.fname;
3062:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*buff) tp = buff;
3064:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (n = 0; tp[n]; n++) ;
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < n + 3) {
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE; break;
3068:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (n) buff[--i] = tp[--n];
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 			buff[--i] = '/';
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3074:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
3076:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3077:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3091:Middlewares/Third_Party/FatFs/src/ff.c **** }
3092:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 
3097:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3098:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3099:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3100:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 
3102:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
ARM GAS  /tmp/ccktbAOa.s 			page 152


3104:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File pointer from top of file */
3105:Middlewares/Third_Party/FatFs/src/ff.c **** )
3106:Middlewares/Third_Party/FatFs/src/ff.c **** {
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect, ifptr;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 
3119:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3157:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
ARM GAS  /tmp/ccktbAOa.s 			page 153


3161:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fp->fs->drv, fp->buf.d8, dsc, 1) != RES_OK)	/* Load current sector */
3165:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
3166:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->dsect = dsc;
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3169:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3172:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
3177:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			 && !(fp->flag & FA_WRITE)
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 			) ofs = fp->fsize;
3181:Middlewares/Third_Party/FatFs/src/ff.c **** 
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->sclust;						/* start from the first cluster */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
3199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3202:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
3204:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
3205:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3211:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3212:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
ARM GAS  /tmp/ccktbAOa.s 			page 154


3218:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
3219:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fp->fs->drv, fp->buf.d8, nsect, 1) != RES_OK)	/* Fill sector cache */
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = nsect;
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3242:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3251:Middlewares/Third_Party/FatFs/src/ff.c **** }
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** )
3264:Middlewares/Third_Party/FatFs/src/ff.c **** {
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /tmp/ccktbAOa.s 			page 155


3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = 0;	/* Root directory need not to be locked */
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3299:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 
3306:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3307:Middlewares/Third_Party/FatFs/src/ff.c **** }
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3313:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
3314:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 
3316:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
3318:Middlewares/Third_Party/FatFs/src/ff.c **** )
3319:Middlewares/Third_Party/FatFs/src/ff.c **** {
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3325:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 		FATFS *fs = dp->fs;
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3328:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->lockid)				/* Decrement sub-directory open counter */
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
ARM GAS  /tmp/ccktbAOa.s 			page 156


3332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs = 0;				/* Invalidate directory object */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** }
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 
3344:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3345:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 
3348:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3351:Middlewares/Third_Party/FatFs/src/ff.c **** )
3352:Middlewares/Third_Party/FatFs/src/ff.c **** {
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);						/* Check validity of the object */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
3361:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_BUF(*dp);
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_BUF();
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dp->fs, res);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** }
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 
3385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
3386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3387:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find next file                                                        */
3388:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccktbAOa.s 			page 157


3389:Middlewares/Third_Party/FatFs/src/ff.c **** 
3390:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** )
3394:Middlewares/Third_Party/FatFs/src/ff.c **** {
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
3401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fno->lfname && pattern_matching(dp->pat, fno->lfname, 0, 0)) break;	/* Test for LFN if exist 
3403:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;	/* Test for SFN */
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 
3408:Middlewares/Third_Party/FatFs/src/ff.c **** }
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 
3412:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3413:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find first file                                                       */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 
3416:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
3418:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
3421:Middlewares/Third_Party/FatFs/src/ff.c **** )
3422:Middlewares/Third_Party/FatFs/src/ff.c **** {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3431:Middlewares/Third_Party/FatFs/src/ff.c **** }
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 
3437:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
3438:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3439:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 
3442:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3445:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/ccktbAOa.s 			page 158


3446:Middlewares/Third_Party/FatFs/src/ff.c **** {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3468:Middlewares/Third_Party/FatFs/src/ff.c **** }
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 
3472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3474:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
3475:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 
3477:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
3481:Middlewares/Third_Party/FatFs/src/ff.c **** )
3482:Middlewares/Third_Party/FatFs/src/ff.c **** {
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, sect, stat;
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fat, *p;
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(fatfs, &path, 0);
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust <= fs->n_fatent - 2) {
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			fat = fs->fs_type;
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
ARM GAS  /tmp/ccktbAOa.s 			page 159


3503:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(fs, clst);
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fs->n_fatent;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect = fs->fatbase;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!i) {
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fat == FS_FAT16) {
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (--clst);
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = n;
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
3532:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3535:Middlewares/Third_Party/FatFs/src/ff.c **** }
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 
3540:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3541:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 
3544:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3546:Middlewares/Third_Party/FatFs/src/ff.c **** )
3547:Middlewares/Third_Party/FatFs/src/ff.c **** {
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity of the object */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccktbAOa.s 			page 160


3560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
3568:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = get_fat(fp->fs, fp->clust);
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (fp->flag & FA__DIRTY)) {
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
3584:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) fp->err = (FRESULT)res;
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3589:Middlewares/Third_Party/FatFs/src/ff.c **** 
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3591:Middlewares/Third_Party/FatFs/src/ff.c **** }
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** 
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File or Directory                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** )
3603:Middlewares/Third_Party/FatFs/src/ff.c **** {
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
ARM GAS  /tmp/ccktbAOa.s 			page 161


3617:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open object */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_RDO)
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == dj.fs->cdir) {		 		/* Is it the current directory? */
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3636:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(&sdj, &dj, sizeof (DIR));	/* Open the sub-directory */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3646:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** }
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 
3665:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3666:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
3667:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3668:Middlewares/Third_Party/FatFs/src/ff.c **** 
3669:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
3671:Middlewares/Third_Party/FatFs/src/ff.c **** )
3672:Middlewares/Third_Party/FatFs/src/ff.c **** {
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
ARM GAS  /tmp/ccktbAOa.s 			page 162


3674:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, n;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm = GET_FATTIME();
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3678:Middlewares/Third_Party/FatFs/src/ff.c **** 
3679:Middlewares/Third_Party/FatFs/src/ff.c **** 
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3717:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
ARM GAS  /tmp/ccktbAOa.s 			page 163


3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3732:Middlewares/Third_Party/FatFs/src/ff.c **** 
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3734:Middlewares/Third_Party/FatFs/src/ff.c **** }
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 
3739:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3740:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
3741:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 
3743:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
3747:Middlewares/Third_Party/FatFs/src/ff.c **** )
3748:Middlewares/Third_Party/FatFs/src/ff.c **** {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3760:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** }
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 
3782:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3783:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename File/Directory                                                 */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 
3786:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object to be renamed */
ARM GAS  /tmp/ccktbAOa.s 			page 164


3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** )
3790:Middlewares/Third_Party/FatFs/src/ff.c **** {
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[21], *dir;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number of the source object */
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&djo.fs, &path_old, 1);
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Old object is found */
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about object except name */
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
3817:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_INVALID_DRIVE;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3823:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(djo.fs, dw);
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
ARM GAS  /tmp/ccktbAOa.s 			page 165


3845:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of critical section */
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 
3854:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(djo.fs, res);
3855:Middlewares/Third_Party/FatFs/src/ff.c **** }
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 
3860:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3861:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
3862:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
3867:Middlewares/Third_Party/FatFs/src/ff.c **** )
3868:Middlewares/Third_Party/FatFs/src/ff.c **** {
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 
3874:Middlewares/Third_Party/FatFs/src/ff.c **** 
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtTime, fno->ftime);
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3897:Middlewares/Third_Party/FatFs/src/ff.c **** }
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 
3899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
3901:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
ARM GAS  /tmp/ccktbAOa.s 			page 166


3902:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
3907:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
3908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get volume label                                                      */
3910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 
3912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
3916:Middlewares/Third_Party/FatFs/src/ff.c **** )
3917:Middlewares/Third_Party/FatFs/src/ff.c **** {
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = 0;					/* Open root directory */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {			/* A volume label is exist */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = j = 0;
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (i < 11) ? dj.dir[i++] : ' ';
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = w << 8 | dj.dir[i++];
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (j < 11);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(label, dj.dir, 11);
3946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				j = 11;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j] = 0;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!j) break;
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (label[--j] == ' ');
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {	/* No label, return nul string */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				label[0] = 0;
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccktbAOa.s 			page 167


3959:Middlewares/Third_Party/FatFs/src/ff.c **** 
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dj.fs, dj.fs->volbase);
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = LD_DWORD(&dj.fs->win.d8[i]);
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3970:Middlewares/Third_Party/FatFs/src/ff.c **** }
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 
3974:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3976:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set volume label                                                      */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 
3979:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** )
3982:Middlewares/Third_Party/FatFs/src/ff.c **** {
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE vn[11];
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, sl;
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &label, 1);
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res) LEAVE_FF(dj.fs, res);
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create a volume label in directory form */
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	vn[0] = 0;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (sl = 0; label[sl]; sl++) ;				/* Get name length */
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ; sl && label[sl - 1] == ' '; sl--) ;	/* Remove trailing spaces */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sl) {	/* Create volume label in directory form */
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = j = 0;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4002:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(label[i++]), 0);
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (BYTE)label[i++];
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w))
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (j < 10 && i < sl && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
ARM GAS  /tmp/ccktbAOa.s 			page 168


4016:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4017:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4018:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("\"*+,.:;<=>\?[]|\x7F", w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) /* Reject i
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(dj.fs, FR_INVALID_NAME);
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x100) vn[j++] = (BYTE)(w >> 8);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 			vn[j++] = (BYTE)w;
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i < sl);
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j < 11) vn[j++] = ' ';	/* Fill remaining name field */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (vn[0] == DDEM) LEAVE_FF(dj.fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.sclust = 0;					/* Open root directory */
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* A volume label is found */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (vn[0]) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir, vn, 11);	/* Change the volume label name */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dj.dir + DIR_WrtTime, tm);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[0] = DDEM;			/* Remove the volume label */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.fs->wflag = 1;
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(dj.fs);
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {					/* No volume label is found or error */
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (vn[0]) {				/* Create volume label as new */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry for volume label */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZ_DIRE);	/* Set volume label */
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dj.dir, vn, 11);
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.dir[DIR_Attr] = AM_VOL;
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						tm = GET_FATTIME();
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 						ST_DWORD(dj.dir + DIR_WrtTime, tm);
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->wflag = 1;
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(dj.fs);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** }
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 
4070:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4071:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly (available on only tiny cfg)      */
4072:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
ARM GAS  /tmp/ccktbAOa.s 			page 169


4073:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD && _FS_TINY
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
4080:Middlewares/Third_Party/FatFs/src/ff.c **** )
4081:Middlewares/Third_Party/FatFs/src/ff.c **** {
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD remain, clst, sect;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);								/* Check validity of the object */
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)									/* Check error */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ))						/* Check access mode */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream becomes busy */
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
4102:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {							/* On the cluster boundary? */
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust : get_fat(fp->fs, fp->clust);
4107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fp->fs, FR_INT_ERR);
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fp->fs, fp->clust);		/* Get current data sector */
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fp->fs, FR_INT_ERR);
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, sect) != FR_OK)		/* Move sector window */
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->dsect = sect;
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - (WORD)(fp->fptr % SS(fp->fs));	/* Forward data from sector window */
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(&fp->fs->win.d8[(WORD)fp->fptr % SS(fp->fs)], rcnt);
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fp->fs, FR_INT_ERR);
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
4125:Middlewares/Third_Party/FatFs/src/ff.c **** }
4126:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 170


4130:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
4131:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4132:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create file system on the logical drive                               */
4133:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_ROOTDIR	512		/* Number of root directory entries for FAT12/16 */
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_FATS		1		/* Number of FATs (1 or 2) */
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 
4138:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT au				/* Size of allocation unit in unit of byte or sector */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** )
4143:Middlewares/Third_Party/FatFs/src/ff.c **** {
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
4147:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, md, sys, *tbl, pdrv, part;
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_clst, vs, n, wsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_dir, b_data;	/* LBA */
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_vol, n_rsv, n_fat, n_dir;	/* Size */
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD eb[2];
4156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 
4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfd > 1) return FR_INVALID_PARAMETER;
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get disk statics */
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK || SS(fs) > _MAX_SS || SS(fs) < _MIN_SS)
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, fs->win.d8, 0, 1) != RES_OK) return FR_DISK_ERR;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = LD_DWORD(tbl + 8);	/* Volume start sector */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol = LD_DWORD(tbl + 12);	/* Volume size */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a partition in this function */
ARM GAS  /tmp/ccktbAOa.s 			page 171


4187:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au & (au - 1)) au = 0;
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au >= _MIN_SS) au /= SS(fs);	/* Number of sectors per cluster */
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-compute number of clusters and FAT sub-type */
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = n_vol / au;
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine offset and size of FAT structure */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_fat = b_vol + n_rsv;				/* FAT area start sector */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Align data start sector to erase block boundary (for flash memory media) */
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat += n;
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine number of clusters and final check of validity of the FAT sub-type */
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 
4242:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
ARM GAS  /tmp/ccktbAOa.s 			page 172


4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT12 && n_vol < 0x10000) {
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[4] = sys;
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to teh MBR */
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 		md = 0xF8;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sfd) {	/* No partition table (SFD) */
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[1] = 1;						/* Partition start head */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create BPB in the VBR */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fs->win.d8;							/* Clear sector */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_BytsPerSec, i);
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_TotSec32, n_vol);
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_Media] = md;					/* Media descriptor */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
ARM GAS  /tmp/ccktbAOa.s 			page 173


4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID, n);		/* VSN */
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BS_55AA, 0xAA55);			/* Signature (Offset is fixed here regardless of sector size) */
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize FAT area */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	wsect = b_fat;
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= 0xFFFFFF00;
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize root directory */
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 
4356:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM	/* Erase data area if needed */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
ARM GAS  /tmp/ccktbAOa.s 			page 174


4358:Middlewares/Third_Party/FatFs/src/ff.c **** 		eb[0] = wsect; eb[1] = wsect + (n_clst - ((fmt == FS_FAT32) ? 1 : 0)) * au - 1;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, eb);
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4361:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create FSINFO if needed */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
4375:Middlewares/Third_Party/FatFs/src/ff.c **** }
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 
4379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
4380:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4381:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
4382:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 
4384:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD szt[],	/* Pointer to the size table for each partitions */
4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
4388:Middlewares/Third_Party/FatFs/src/ff.c **** )
4389:Middlewares/Third_Party/FatFs/src/ff.c **** {
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine CHS in the table regardless of the drive geometry */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
ARM GAS  /tmp/ccktbAOa.s 			page 175


4415:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x06;						/* System type (temporary setting) */
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 8, s_part);			/* Start sector in LBA */
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 12, sz_part);			/* Partition size */
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(p, 0xAA55);
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
4443:Middlewares/Third_Party/FatFs/src/ff.c **** }
4444:Middlewares/Third_Party/FatFs/src/ff.c **** 
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 
4446:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
4447:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 
4452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
4453:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
4455:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** )
4462:Middlewares/Third_Party/FatFs/src/ff.c **** {
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
4470:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4471:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
ARM GAS  /tmp/ccktbAOa.s 			page 176


4472:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence */
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4493:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
4497:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
4501:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
4511:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
4512:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4513:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4517:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
4522:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
4525:Middlewares/Third_Party/FatFs/src/ff.c **** }
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/ccktbAOa.s 			page 177


4529:Middlewares/Third_Party/FatFs/src/ff.c **** 
4530:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4531:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
4532:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4533:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 
4536:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp;
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];
4540:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 
4543:Middlewares/Third_Party/FatFs/src/ff.c **** static
4544:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
4547:Middlewares/Third_Party/FatFs/src/ff.c **** )
4548:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4908              		.loc 1 4548 0
 4909              		.cfi_startproc
 4910              		@ args = 0, pretend = 0, frame = 8
 4911              		@ frame_needed = 0, uses_anonymous_args = 0
 4912              	.LVL684:
 4913 0000 70B5     		push	{r4, r5, r6, lr}
 4914              	.LCFI50:
 4915              		.cfi_def_cfa_offset 16
 4916              		.cfi_offset 4, -16
 4917              		.cfi_offset 5, -12
 4918              		.cfi_offset 6, -8
 4919              		.cfi_offset 14, -4
 4920 0002 82B0     		sub	sp, sp, #8
 4921              	.LCFI51:
 4922              		.cfi_def_cfa_offset 24
 4923 0004 0446     		mov	r4, r0
 4924 0006 0E46     		mov	r6, r1
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n')	 /* LF -> CRLF conversion */
 4925              		.loc 1 4553 0
 4926 0008 0A29     		cmp	r1, #10
 4927 000a 0DD0     		beq	.L556
 4928              	.LVL685:
 4929              	.L551:
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;	/* Buffer write index (-1:error) */
 4930              		.loc 1 4556 0
 4931 000c 6368     		ldr	r3, [r4, #4]
 4932              	.LVL686:
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 4933              		.loc 1 4557 0
 4934 000e 002B     		cmp	r3, #0
 4935 0010 08DB     		blt	.L550
ARM GAS  /tmp/ccktbAOa.s 			page 178


4558:Middlewares/Third_Party/FatFs/src/ff.c **** 
4559:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4578:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
 4936              		.loc 1 4586 0
 4937 0012 5D1C     		adds	r5, r3, #1
 4938              	.LVL687:
 4939 0014 2344     		add	r3, r3, r4
 4940 0016 1E73     		strb	r6, [r3, #12]
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 4941              		.loc 1 4589 0
 4942 0018 3C2D     		cmp	r5, #60
 4943 001a 09DC     		bgt	.L557
 4944              	.LVL688:
 4945              	.L553:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
 4946              		.loc 1 4593 0
 4947 001c 6560     		str	r5, [r4, #4]
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 4948              		.loc 1 4594 0
 4949 001e A368     		ldr	r3, [r4, #8]
 4950 0020 0133     		adds	r3, r3, #1
 4951 0022 A360     		str	r3, [r4, #8]
 4952              	.LVL689:
 4953              	.L550:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4954              		.loc 1 4595 0
ARM GAS  /tmp/ccktbAOa.s 			page 179


 4955 0024 02B0     		add	sp, sp, #8
 4956              	.LCFI52:
 4957              		.cfi_remember_state
 4958              		.cfi_def_cfa_offset 16
 4959              		@ sp needed
 4960 0026 70BD     		pop	{r4, r5, r6, pc}
 4961              	.LVL690:
 4962              	.L556:
 4963              	.LCFI53:
 4964              		.cfi_restore_state
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4965              		.loc 1 4554 0
 4966 0028 0D21     		movs	r1, #13
 4967              	.LVL691:
 4968 002a FFF7E9FF 		bl	putc_bfd
 4969              	.LVL692:
 4970 002e EDE7     		b	.L551
 4971              	.LVL693:
 4972              	.L557:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 4973              		.loc 1 4590 0
 4974 0030 01AB     		add	r3, sp, #4
 4975 0032 2A46     		mov	r2, r5
 4976 0034 04F10C01 		add	r1, r4, #12
 4977 0038 2068     		ldr	r0, [r4]
 4978 003a FFF7FEFF 		bl	f_write
 4979              	.LVL694:
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 4980              		.loc 1 4591 0
 4981 003e 019B     		ldr	r3, [sp, #4]
 4982 0040 5D1B     		subs	r5, r3, r5
 4983              	.LVL695:
 4984 0042 18BF     		it	ne
 4985 0044 4FF0FF35 		movne	r5, #-1
 4986 0048 E8E7     		b	.L553
 4987              		.cfi_endproc
 4988              	.LFE180:
 4990              		.section	.text.f_sync,"ax",%progbits
 4991              		.align	1
 4992              		.global	f_sync
 4993              		.syntax unified
 4994              		.thumb
 4995              		.thumb_func
 4996              		.fpu fpv4-sp-d16
 4998              	f_sync:
 4999              	.LFB164:
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5000              		.loc 1 2884 0
 5001              		.cfi_startproc
 5002              		@ args = 0, pretend = 0, frame = 0
 5003              		@ frame_needed = 0, uses_anonymous_args = 0
 5004              	.LVL696:
 5005 0000 38B5     		push	{r3, r4, r5, lr}
 5006              	.LCFI54:
 5007              		.cfi_def_cfa_offset 16
 5008              		.cfi_offset 3, -16
 5009              		.cfi_offset 4, -12
ARM GAS  /tmp/ccktbAOa.s 			page 180


 5010              		.cfi_offset 5, -8
 5011              		.cfi_offset 14, -4
 5012 0002 0446     		mov	r4, r0
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5013              		.loc 1 2890 0
 5014 0004 FFF7FEFF 		bl	validate
 5015              	.LVL697:
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 5016              		.loc 1 2891 0
 5017 0008 0346     		mov	r3, r0
 5018 000a 08BB     		cbnz	r0, .L559
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
 5019              		.loc 1 2892 0
 5020 000c 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 5021 0010 12F0200F 		tst	r2, #32
 5022 0014 1CD0     		beq	.L559
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5023              		.loc 1 2895 0
 5024 0016 12F0400F 		tst	r2, #64
 5025 001a 11D0     		beq	.L560
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
 5026              		.loc 1 2896 0
 5027 001c D4F80002 		ldr	r0, [r4, #512]
 5028              	.LVL698:
 5029 0020 0123     		movs	r3, #1
 5030 0022 D4F81822 		ldr	r2, [r4, #536]
 5031 0026 2146     		mov	r1, r4
 5032 0028 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 5033 002c FFF7FEFF 		bl	disk_write
 5034              	.LVL699:
 5035 0030 0028     		cmp	r0, #0
 5036 0032 4AD1     		bne	.L561
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5037              		.loc 1 2898 0
 5038 0034 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5039 0038 23F04003 		bic	r3, r3, #64
 5040 003c 84F80632 		strb	r3, [r4, #518]
 5041              	.L560:
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
 5042              		.loc 1 2902 0
 5043 0040 D4F81C12 		ldr	r1, [r4, #540]
 5044 0044 D4F80002 		ldr	r0, [r4, #512]
 5045 0048 FFF7FEFF 		bl	move_window
 5046              	.LVL700:
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
 5047              		.loc 1 2903 0
 5048 004c 0346     		mov	r3, r0
 5049 004e 08B1     		cbz	r0, .L563
 5050              	.LVL701:
 5051              	.L559:
2919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5052              		.loc 1 2919 0
 5053 0050 1846     		mov	r0, r3
 5054 0052 38BD     		pop	{r3, r4, r5, pc}
 5055              	.LVL702:
 5056              	.L563:
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
ARM GAS  /tmp/ccktbAOa.s 			page 181


 5057              		.loc 1 2904 0
 5058 0054 D4F82052 		ldr	r5, [r4, #544]
 5059              	.LVL703:
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
 5060              		.loc 1 2905 0
 5061 0058 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5062 005a 43F02003 		orr	r3, r3, #32
 5063 005e EB72     		strb	r3, [r5, #11]
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
 5064              		.loc 1 2906 0
 5065 0060 D4F80C32 		ldr	r3, [r4, #524]
 5066 0064 2B77     		strb	r3, [r5, #28]
 5067 0066 B4F80C32 		ldrh	r3, [r4, #524]
 5068 006a 1B0A     		lsrs	r3, r3, #8
 5069 006c 6B77     		strb	r3, [r5, #29]
 5070 006e B4F80E32 		ldrh	r3, [r4, #526]
 5071 0072 AB77     		strb	r3, [r5, #30]
 5072 0074 94F80F32 		ldrb	r3, [r4, #527]	@ zero_extendqisi2
 5073 0078 EB77     		strb	r3, [r5, #31]
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
 5074              		.loc 1 2907 0
 5075 007a D4F81032 		ldr	r3, [r4, #528]
 5076              	.LVL704:
 5077              	.LBB56:
 5078              	.LBB57:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 5079              		.loc 1 1330 0
 5080 007e AB76     		strb	r3, [r5, #26]
 5081 0080 C3F30722 		ubfx	r2, r3, #8, #8
 5082 0084 EA76     		strb	r2, [r5, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5083              		.loc 1 1331 0
 5084 0086 1B0C     		lsrs	r3, r3, #16
 5085              	.LVL705:
 5086 0088 2B75     		strb	r3, [r5, #20]
 5087 008a 1B0A     		lsrs	r3, r3, #8
 5088 008c 6B75     		strb	r3, [r5, #21]
 5089              	.LVL706:
 5090              	.LBE57:
 5091              	.LBE56:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 5092              		.loc 1 2908 0
 5093 008e FFF7FEFF 		bl	get_fattime
 5094              	.LVL707:
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
 5095              		.loc 1 2909 0
 5096 0092 A875     		strb	r0, [r5, #22]
 5097 0094 C0F30723 		ubfx	r3, r0, #8, #8
 5098 0098 EB75     		strb	r3, [r5, #23]
 5099 009a 030C     		lsrs	r3, r0, #16
 5100 009c 2B76     		strb	r3, [r5, #24]
 5101 009e 000E     		lsrs	r0, r0, #24
 5102              	.LVL708:
 5103 00a0 6876     		strb	r0, [r5, #25]
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
 5104              		.loc 1 2910 0
 5105 00a2 0023     		movs	r3, #0
ARM GAS  /tmp/ccktbAOa.s 			page 182


 5106 00a4 AB74     		strb	r3, [r5, #18]
 5107 00a6 EB74     		strb	r3, [r5, #19]
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
 5108              		.loc 1 2911 0
 5109 00a8 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5110 00ac 23F02003 		bic	r3, r3, #32
 5111 00b0 84F80632 		strb	r3, [r4, #518]
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
 5112              		.loc 1 2912 0
 5113 00b4 D4F80032 		ldr	r3, [r4, #512]
 5114 00b8 0122     		movs	r2, #1
 5115 00ba 83F80422 		strb	r2, [r3, #516]
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5116              		.loc 1 2913 0
 5117 00be D4F80002 		ldr	r0, [r4, #512]
 5118 00c2 FFF7FEFF 		bl	sync_fs
 5119              	.LVL709:
 5120 00c6 0346     		mov	r3, r0
 5121              	.LVL710:
 5122 00c8 C2E7     		b	.L559
 5123              	.LVL711:
 5124              	.L561:
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5125              		.loc 1 2897 0
 5126 00ca 0123     		movs	r3, #1
 5127 00cc C0E7     		b	.L559
 5128              		.cfi_endproc
 5129              	.LFE164:
 5131              		.section	.text.f_close,"ax",%progbits
 5132              		.align	1
 5133              		.global	f_close
 5134              		.syntax unified
 5135              		.thumb
 5136              		.thumb_func
 5137              		.fpu fpv4-sp-d16
 5139              	f_close:
 5140              	.LFB165:
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5141              		.loc 1 2933 0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 0
 5144              		@ frame_needed = 0, uses_anonymous_args = 0
 5145              	.LVL712:
 5146 0000 10B5     		push	{r4, lr}
 5147              	.LCFI55:
 5148              		.cfi_def_cfa_offset 8
 5149              		.cfi_offset 4, -8
 5150              		.cfi_offset 14, -4
 5151 0002 0446     		mov	r4, r0
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5152              		.loc 1 2938 0
 5153 0004 FFF7FEFF 		bl	f_sync
 5154              	.LVL713:
2939:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5155              		.loc 1 2939 0
 5156 0008 0346     		mov	r3, r0
 5157 000a 08B1     		cbz	r0, .L567
ARM GAS  /tmp/ccktbAOa.s 			page 183


 5158              	.L565:
 5159              	.LVL714:
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5160              		.loc 1 2958 0
 5161 000c 1846     		mov	r0, r3
 5162 000e 10BD     		pop	{r4, pc}
 5163              	.LVL715:
 5164              	.L567:
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5165              		.loc 1 2942 0
 5166 0010 2046     		mov	r0, r4
 5167              	.LVL716:
 5168 0012 FFF7FEFF 		bl	validate
 5169              	.LVL717:
2943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5170              		.loc 1 2943 0
 5171 0016 0346     		mov	r3, r0
 5172 0018 0028     		cmp	r0, #0
 5173 001a F7D1     		bne	.L565
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5174              		.loc 1 2948 0
 5175 001c D4F82802 		ldr	r0, [r4, #552]
 5176              	.LVL718:
 5177 0020 FFF7FEFF 		bl	dec_lock
 5178              	.LVL719:
2949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5179              		.loc 1 2949 0
 5180 0024 0346     		mov	r3, r0
 5181 0026 0028     		cmp	r0, #0
 5182 0028 F0D1     		bne	.L565
2951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5183              		.loc 1 2951 0
 5184 002a 0022     		movs	r2, #0
 5185 002c C4F80022 		str	r2, [r4, #512]
 5186 0030 ECE7     		b	.L565
 5187              		.cfi_endproc
 5188              	.LFE165:
 5190              		.section	.text.f_lseek,"ax",%progbits
 5191              		.align	1
 5192              		.global	f_lseek
 5193              		.syntax unified
 5194              		.thumb
 5195              		.thumb_func
 5196              		.fpu fpv4-sp-d16
 5198              	f_lseek:
 5199              	.LFB166:
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5200              		.loc 1 3106 0
 5201              		.cfi_startproc
 5202              		@ args = 0, pretend = 0, frame = 0
 5203              		@ frame_needed = 0, uses_anonymous_args = 0
 5204              	.LVL720:
 5205 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5206              	.LCFI56:
 5207              		.cfi_def_cfa_offset 40
 5208              		.cfi_offset 3, -40
 5209              		.cfi_offset 4, -36
ARM GAS  /tmp/ccktbAOa.s 			page 184


 5210              		.cfi_offset 5, -32
 5211              		.cfi_offset 6, -28
 5212              		.cfi_offset 7, -24
 5213              		.cfi_offset 8, -20
 5214              		.cfi_offset 9, -16
 5215              		.cfi_offset 10, -12
 5216              		.cfi_offset 11, -8
 5217              		.cfi_offset 14, -4
 5218 0004 0446     		mov	r4, r0
 5219 0006 0E46     		mov	r6, r1
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5220              		.loc 1 3114 0
 5221 0008 FFF7FEFF 		bl	validate
 5222              	.LVL721:
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
 5223              		.loc 1 3115 0
 5224 000c 0546     		mov	r5, r0
 5225 000e 0028     		cmp	r0, #0
 5226 0010 40F07981 		bne	.L569
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
 5227              		.loc 1 3116 0
 5228 0014 94F80732 		ldrb	r3, [r4, #519]	@ zero_extendqisi2
 5229 0018 002B     		cmp	r3, #0
 5230 001a 40F07381 		bne	.L601
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5231              		.loc 1 3120 0
 5232 001e D4F82432 		ldr	r3, [r4, #548]
 5233 0022 002B     		cmp	r3, #0
 5234 0024 00F09D80 		beq	.L570
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5235              		.loc 1 3121 0
 5236 0028 B6F1FF3F 		cmp	r6, #-1
 5237 002c 1DD0     		beq	.L611
 5238 002e D4F80C32 		ldr	r3, [r4, #524]
 5239 0032 9E42     		cmp	r6, r3
 5240 0034 28BF     		it	cs
 5241 0036 1E46     		movcs	r6, r3
 5242              	.LVL722:
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5243              		.loc 1 3149 0
 5244 0038 C4F80862 		str	r6, [r4, #520]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
 5245              		.loc 1 3150 0
 5246 003c 002E     		cmp	r6, #0
 5247 003e 00F06281 		beq	.L569
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
 5248              		.loc 1 3151 0
 5249 0042 06F1FF38 		add	r8, r6, #-1
 5250 0046 4146     		mov	r1, r8
 5251 0048 2046     		mov	r0, r4
 5252              	.LVL723:
 5253 004a FFF7FEFF 		bl	clmt_clust
 5254              	.LVL724:
 5255 004e 0146     		mov	r1, r0
 5256 0050 C4F81402 		str	r0, [r4, #532]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
 5257              		.loc 1 3152 0
ARM GAS  /tmp/ccktbAOa.s 			page 185


 5258 0054 D4F80072 		ldr	r7, [r4, #512]
 5259 0058 3846     		mov	r0, r7
 5260 005a FFF7FEFF 		bl	clust2sect
 5261              	.LVL725:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 5262              		.loc 1 3153 0
 5263 005e 0028     		cmp	r0, #0
 5264 0060 47D1     		bne	.L578
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 5265              		.loc 1 3153 0 is_stmt 0 discriminator 1
 5266 0062 0225     		movs	r5, #2
 5267 0064 84F80752 		strb	r5, [r4, #519]
 5268 0068 4DE1     		b	.L569
 5269              	.LVL726:
 5270              	.L611:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5271              		.loc 1 3123 0 is_stmt 1
 5272 006a 03F1040B 		add	fp, r3, #4
 5273              	.LVL727:
 5274 006e D3F800A0 		ldr	r10, [r3]
 5275              	.LVL728:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5276              		.loc 1 3124 0
 5277 0072 D4F81082 		ldr	r8, [r4, #528]
 5278              	.LVL729:
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5279              		.loc 1 3125 0
 5280 0076 B8F1000F 		cmp	r8, #0
 5281 007a 2CD0     		beq	.L602
 5282 007c 4FF00209 		mov	r9, #2
 5283              	.LVL730:
 5284              	.L577:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5285              		.loc 1 3131 0
 5286 0080 4646     		mov	r6, r8
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5287              		.loc 1 3128 0
 5288 0082 0027     		movs	r7, #0
 5289              	.LVL731:
 5290              	.L575:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
 5291              		.loc 1 3130 0
 5292 0084 0137     		adds	r7, r7, #1
 5293              	.LVL732:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5294              		.loc 1 3131 0
 5295 0086 3146     		mov	r1, r6
 5296 0088 D4F80002 		ldr	r0, [r4, #512]
 5297 008c FFF7FEFF 		bl	get_fat
 5298              	.LVL733:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5299              		.loc 1 3132 0
 5300 0090 0128     		cmp	r0, #1
 5301 0092 18D9     		bls	.L612
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5302              		.loc 1 3133 0
 5303 0094 B0F1FF3F 		cmp	r0, #-1
ARM GAS  /tmp/ccktbAOa.s 			page 186


 5304 0098 19D0     		beq	.L613
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5305              		.loc 1 3134 0
 5306 009a 731C     		adds	r3, r6, #1
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5307              		.loc 1 3131 0
 5308 009c 0646     		mov	r6, r0
 5309              	.LVL734:
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5310              		.loc 1 3134 0
 5311 009e 9842     		cmp	r0, r3
 5312 00a0 F0D0     		beq	.L575
 5313              	.LVL735:
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5314              		.loc 1 3128 0
 5315 00a2 09F10209 		add	r9, r9, #2
 5316              	.LVL736:
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5317              		.loc 1 3135 0
 5318 00a6 CA45     		cmp	r10, r9
 5319 00a8 05D3     		bcc	.L576
 5320              	.LVL737:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5321              		.loc 1 3136 0
 5322 00aa 5B46     		mov	r3, fp
 5323              	.LVL738:
 5324 00ac 43F8087B 		str	r7, [r3], #8
 5325              	.LVL739:
 5326 00b0 CBF80480 		str	r8, [fp, #4]
 5327 00b4 9B46     		mov	fp, r3
 5328              	.LVL740:
 5329              	.L576:
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5330              		.loc 1 3138 0
 5331 00b6 D4F80032 		ldr	r3, [r4, #512]
 5332 00ba D3F81432 		ldr	r3, [r3, #532]
 5333 00be 9842     		cmp	r0, r3
 5334 00c0 0BD2     		bcs	.L572
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5335              		.loc 1 3131 0
 5336 00c2 8046     		mov	r8, r0
 5337              	.LVL741:
 5338 00c4 DCE7     		b	.L577
 5339              	.LVL742:
 5340              	.L612:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5341              		.loc 1 3132 0 discriminator 1
 5342 00c6 0225     		movs	r5, #2
 5343 00c8 84F80752 		strb	r5, [r4, #519]
 5344 00cc 1BE1     		b	.L569
 5345              	.L613:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5346              		.loc 1 3133 0 discriminator 1
 5347 00ce 0125     		movs	r5, #1
 5348 00d0 84F80752 		strb	r5, [r4, #519]
 5349 00d4 17E1     		b	.L569
 5350              	.LVL743:
ARM GAS  /tmp/ccktbAOa.s 			page 187


 5351              	.L602:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5352              		.loc 1 3123 0
 5353 00d6 4FF00209 		mov	r9, #2
 5354              	.LVL744:
 5355              	.L572:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
 5356              		.loc 1 3140 0
 5357 00da D4F82432 		ldr	r3, [r4, #548]
 5358 00de C3F80090 		str	r9, [r3]
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5359              		.loc 1 3141 0
 5360 00e2 D145     		cmp	r9, r10
 5361 00e4 01D9     		bls	.L614
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5362              		.loc 1 3144 0
 5363 00e6 1125     		movs	r5, #17
 5364 00e8 0DE1     		b	.L569
 5365              	.L614:
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
 5366              		.loc 1 3142 0
 5367 00ea 0023     		movs	r3, #0
 5368 00ec CBF80030 		str	r3, [fp]
 5369 00f0 09E1     		b	.L569
 5370              	.LVL745:
 5371              	.L578:
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5372              		.loc 1 3155 0
 5373 00f2 C6F30806 		ubfx	r6, r6, #0, #9
 5374              	.LVL746:
 5375 00f6 002E     		cmp	r6, #0
 5376 00f8 00F00581 		beq	.L569
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
 5377              		.loc 1 3154 0 discriminator 1
 5378 00fc 97F80262 		ldrb	r6, [r7, #514]	@ zero_extendqisi2
 5379 0100 013E     		subs	r6, r6, #1
 5380 0102 06EA5828 		and	r8, r6, r8, lsr #9
 5381              	.LVL747:
 5382 0106 08EB0006 		add	r6, r8, r0
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5383              		.loc 1 3155 0 discriminator 1
 5384 010a D4F81822 		ldr	r2, [r4, #536]
 5385 010e 9642     		cmp	r6, r2
 5386 0110 00F0F980 		beq	.L569
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5387              		.loc 1 3158 0
 5388 0114 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5389 0118 13F0400F 		tst	r3, #64
 5390 011c 0CD0     		beq	.L579
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
 5391              		.loc 1 3159 0
 5392 011e 0123     		movs	r3, #1
 5393 0120 2146     		mov	r1, r4
 5394 0122 97F80102 		ldrb	r0, [r7, #513]	@ zero_extendqisi2
 5395 0126 FFF7FEFF 		bl	disk_write
 5396              	.LVL748:
 5397 012a 98B9     		cbnz	r0, .L615
ARM GAS  /tmp/ccktbAOa.s 			page 188


3161:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5398              		.loc 1 3161 0
 5399 012c 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5400 0130 23F04003 		bic	r3, r3, #64
 5401 0134 84F80632 		strb	r3, [r4, #518]
 5402              	.L579:
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
 5403              		.loc 1 3164 0
 5404 0138 D4F80002 		ldr	r0, [r4, #512]
 5405 013c 0123     		movs	r3, #1
 5406 013e 3246     		mov	r2, r6
 5407 0140 2146     		mov	r1, r4
 5408 0142 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 5409 0146 FFF7FEFF 		bl	disk_read
 5410              	.LVL749:
 5411 014a 38B1     		cbz	r0, .L581
3165:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5412              		.loc 1 3165 0
 5413 014c 0125     		movs	r5, #1
 5414 014e 84F80752 		strb	r5, [r4, #519]
 5415 0152 D8E0     		b	.L569
 5416              	.L615:
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
 5417              		.loc 1 3160 0
 5418 0154 0125     		movs	r5, #1
 5419 0156 84F80752 		strb	r5, [r4, #519]
 5420 015a D4E0     		b	.L569
 5421              	.L581:
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5422              		.loc 1 3167 0
 5423 015c C4F81862 		str	r6, [r4, #536]
 5424 0160 D1E0     		b	.L569
 5425              	.LVL750:
 5426              	.L570:
3176:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5427              		.loc 1 3176 0
 5428 0162 D4F80C32 		ldr	r3, [r4, #524]
 5429 0166 9E42     		cmp	r6, r3
 5430 0168 06D9     		bls	.L582
3178:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5431              		.loc 1 3178 0
 5432 016a 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 5433 016e 02F00202 		and	r2, r2, #2
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5434              		.loc 1 3180 0
 5435 0172 002A     		cmp	r2, #0
 5436 0174 08BF     		it	eq
 5437 0176 1E46     		moveq	r6, r3
 5438              	.LVL751:
 5439              	.L582:
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5440              		.loc 1 3182 0
 5441 0178 D4F80832 		ldr	r3, [r4, #520]
 5442              	.LVL752:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5443              		.loc 1 3183 0
 5444 017c 0022     		movs	r2, #0
ARM GAS  /tmp/ccktbAOa.s 			page 189


 5445 017e C4F80822 		str	r2, [r4, #520]
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 5446              		.loc 1 3184 0
 5447 0182 002E     		cmp	r6, #0
 5448 0184 00F0BF80 		beq	.L569
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5449              		.loc 1 3185 0
 5450 0188 D4F80002 		ldr	r0, [r4, #512]
 5451              	.LVL753:
 5452 018c 90F80282 		ldrb	r8, [r0, #514]	@ zero_extendqisi2
 5453 0190 4FEA4828 		lsl	r8, r8, #9
 5454              	.LVL754:
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5455              		.loc 1 3186 0
 5456 0194 83B1     		cbz	r3, .L583
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 5457              		.loc 1 3187 0 discriminator 1
 5458 0196 013B     		subs	r3, r3, #1
 5459              	.LVL755:
 5460 0198 721E     		subs	r2, r6, #1
 5461 019a B2FBF8F2 		udiv	r2, r2, r8
 5462 019e B3FBF8F1 		udiv	r1, r3, r8
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5463              		.loc 1 3186 0 discriminator 1
 5464 01a2 8A42     		cmp	r2, r1
 5465 01a4 08D3     		bcc	.L583
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5466              		.loc 1 3188 0
 5467 01a6 C8F10002 		rsb	r2, r8, #0
 5468 01aa 1340     		ands	r3, r3, r2
 5469              	.LVL756:
 5470 01ac C4F80832 		str	r3, [r4, #520]
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5471              		.loc 1 3189 0
 5472 01b0 F61A     		subs	r6, r6, r3
 5473              	.LVL757:
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5474              		.loc 1 3190 0
 5475 01b2 D4F81472 		ldr	r7, [r4, #532]
 5476              	.LVL758:
 5477 01b6 04E0     		b	.L584
 5478              	.LVL759:
 5479              	.L583:
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5480              		.loc 1 3192 0
 5481 01b8 D4F81072 		ldr	r7, [r4, #528]
 5482              	.LVL760:
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
 5483              		.loc 1 3194 0
 5484 01bc 37B1     		cbz	r7, .L616
 5485              	.L585:
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5486              		.loc 1 3201 0
 5487 01be C4F81472 		str	r7, [r4, #532]
 5488              	.L584:
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 5489              		.loc 1 3203 0
ARM GAS  /tmp/ccktbAOa.s 			page 190


 5490 01c2 002F     		cmp	r7, #0
 5491 01c4 5ED0     		beq	.L588
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5492              		.loc 1 3204 0
 5493 01c6 4645     		cmp	r6, r8
 5494 01c8 30D8     		bhi	.L607
 5495 01ca 3DE0     		b	.L589
 5496              	.L616:
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5497              		.loc 1 3195 0
 5498 01cc 0021     		movs	r1, #0
 5499 01ce FFF7FEFF 		bl	create_chain
 5500              	.LVL761:
 5501 01d2 0746     		mov	r7, r0
 5502              	.LVL762:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5503              		.loc 1 3196 0
 5504 01d4 0128     		cmp	r0, #1
 5505 01d6 05D0     		beq	.L617
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 5506              		.loc 1 3197 0
 5507 01d8 B0F1FF3F 		cmp	r0, #-1
 5508 01dc 06D0     		beq	.L618
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5509              		.loc 1 3198 0
 5510 01de C4F81002 		str	r0, [r4, #528]
 5511 01e2 ECE7     		b	.L585
 5512              	.L617:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5513              		.loc 1 3196 0 discriminator 1
 5514 01e4 0225     		movs	r5, #2
 5515 01e6 84F80752 		strb	r5, [r4, #519]
 5516 01ea 8CE0     		b	.L569
 5517              	.L618:
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 5518              		.loc 1 3197 0 discriminator 1
 5519 01ec 0125     		movs	r5, #1
 5520 01ee 84F80752 		strb	r5, [r4, #519]
 5521 01f2 88E0     		b	.L569
 5522              	.LVL763:
 5523              	.L590:
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5524              		.loc 1 3213 0
 5525 01f4 3946     		mov	r1, r7
 5526 01f6 D4F80002 		ldr	r0, [r4, #512]
 5527 01fa FFF7FEFF 		bl	get_fat
 5528              	.LVL764:
 5529 01fe 0746     		mov	r7, r0
 5530              	.LVL765:
 5531              	.L591:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5532              		.loc 1 3214 0
 5533 0200 B7F1FF3F 		cmp	r7, #-1
 5534 0204 32D0     		beq	.L619
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5535              		.loc 1 3215 0
 5536 0206 012F     		cmp	r7, #1
ARM GAS  /tmp/ccktbAOa.s 			page 191


 5537 0208 34D9     		bls	.L593
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5538              		.loc 1 3215 0 is_stmt 0 discriminator 2
 5539 020a D4F80032 		ldr	r3, [r4, #512]
 5540 020e D3F81432 		ldr	r3, [r3, #532]
 5541 0212 9F42     		cmp	r7, r3
 5542 0214 2ED2     		bcs	.L593
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
 5543              		.loc 1 3216 0 is_stmt 1
 5544 0216 C4F81472 		str	r7, [r4, #532]
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
 5545              		.loc 1 3217 0
 5546 021a D4F80832 		ldr	r3, [r4, #520]
 5547 021e 4344     		add	r3, r3, r8
 5548 0220 C4F80832 		str	r3, [r4, #520]
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5549              		.loc 1 3218 0
 5550 0224 A6EB0806 		sub	r6, r6, r8
 5551              	.LVL766:
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5552              		.loc 1 3204 0
 5553 0228 B045     		cmp	r8, r6
 5554 022a 0DD2     		bcs	.L589
 5555              	.LVL767:
 5556              	.L607:
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 5557              		.loc 1 3206 0
 5558 022c 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5559 0230 13F0020F 		tst	r3, #2
 5560 0234 DED0     		beq	.L590
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 5561              		.loc 1 3207 0
 5562 0236 3946     		mov	r1, r7
 5563 0238 D4F80002 		ldr	r0, [r4, #512]
 5564 023c FFF7FEFF 		bl	create_chain
 5565              	.LVL768:
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
 5566              		.loc 1 3208 0
 5567 0240 0746     		mov	r7, r0
 5568 0242 0028     		cmp	r0, #0
 5569 0244 DCD1     		bne	.L591
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 5570              		.loc 1 3209 0
 5571 0246 4646     		mov	r6, r8
 5572              	.LVL769:
 5573              	.L589:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
 5574              		.loc 1 3220 0
 5575 0248 D4F80832 		ldr	r3, [r4, #520]
 5576 024c 3344     		add	r3, r3, r6
 5577 024e C4F80832 		str	r3, [r4, #520]
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 5578              		.loc 1 3221 0
 5579 0252 C6F30803 		ubfx	r3, r6, #0, #9
 5580 0256 A3B1     		cbz	r3, .L606
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 5581              		.loc 1 3222 0
ARM GAS  /tmp/ccktbAOa.s 			page 192


 5582 0258 3946     		mov	r1, r7
 5583 025a D4F80002 		ldr	r0, [r4, #512]
 5584 025e FFF7FEFF 		bl	clust2sect
 5585              	.LVL770:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 5586              		.loc 1 3223 0
 5587 0262 58B9     		cbnz	r0, .L596
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 5588              		.loc 1 3223 0 is_stmt 0 discriminator 1
 5589 0264 0225     		movs	r5, #2
 5590 0266 84F80752 		strb	r5, [r4, #519]
 5591 026a 4CE0     		b	.L569
 5592              	.LVL771:
 5593              	.L619:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5594              		.loc 1 3214 0 is_stmt 1 discriminator 1
 5595 026c 0125     		movs	r5, #1
 5596 026e 84F80752 		strb	r5, [r4, #519]
 5597 0272 48E0     		b	.L569
 5598              	.L593:
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5599              		.loc 1 3215 0 discriminator 3
 5600 0274 0225     		movs	r5, #2
 5601 0276 84F80752 		strb	r5, [r4, #519]
 5602 027a 44E0     		b	.L569
 5603              	.LVL772:
 5604              	.L596:
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5605              		.loc 1 3224 0
 5606 027c 00EB5627 		add	r7, r0, r6, lsr #9
 5607              	.LVL773:
 5608 0280 00E0     		b	.L588
 5609              	.LVL774:
 5610              	.L606:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5611              		.loc 1 3183 0
 5612 0282 0027     		movs	r7, #0
 5613              	.LVL775:
 5614              	.L588:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5615              		.loc 1 3228 0
 5616 0284 D4F80832 		ldr	r3, [r4, #520]
 5617 0288 C3F30803 		ubfx	r3, r3, #0, #9
 5618 028c 1BB3     		cbz	r3, .L597
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5619              		.loc 1 3228 0 is_stmt 0 discriminator 1
 5620 028e D4F81822 		ldr	r2, [r4, #536]
 5621 0292 9742     		cmp	r7, r2
 5622 0294 1FD0     		beq	.L597
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 5623              		.loc 1 3231 0 is_stmt 1
 5624 0296 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5625 029a 13F0400F 		tst	r3, #64
 5626 029e 0ED0     		beq	.L598
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5627              		.loc 1 3232 0
 5628 02a0 D4F80002 		ldr	r0, [r4, #512]
ARM GAS  /tmp/ccktbAOa.s 			page 193


 5629 02a4 0123     		movs	r3, #1
 5630 02a6 2146     		mov	r1, r4
 5631 02a8 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 5632 02ac FFF7FEFF 		bl	disk_write
 5633              	.LVL776:
 5634 02b0 00BB     		cbnz	r0, .L620
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5635              		.loc 1 3234 0
 5636 02b2 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5637 02b6 23F04003 		bic	r3, r3, #64
 5638 02ba 84F80632 		strb	r3, [r4, #518]
 5639              	.L598:
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 5640              		.loc 1 3237 0
 5641 02be D4F80002 		ldr	r0, [r4, #512]
 5642 02c2 0123     		movs	r3, #1
 5643 02c4 3A46     		mov	r2, r7
 5644 02c6 2146     		mov	r1, r4
 5645 02c8 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 5646 02cc FFF7FEFF 		bl	disk_read
 5647              	.LVL777:
 5648 02d0 A0B9     		cbnz	r0, .L621
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5649              		.loc 1 3240 0
 5650 02d2 C4F81872 		str	r7, [r4, #536]
 5651              	.L597:
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
 5652              		.loc 1 3243 0
 5653 02d6 D4F80832 		ldr	r3, [r4, #520]
 5654 02da D4F80C22 		ldr	r2, [r4, #524]
 5655 02de 9342     		cmp	r3, r2
 5656 02e0 11D9     		bls	.L569
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 5657              		.loc 1 3244 0
 5658 02e2 C4F80C32 		str	r3, [r4, #524]
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5659              		.loc 1 3245 0
 5660 02e6 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 5661 02ea 43F02003 		orr	r3, r3, #32
 5662 02ee 84F80632 		strb	r3, [r4, #518]
 5663 02f2 08E0     		b	.L569
 5664              	.L620:
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
 5665              		.loc 1 3233 0
 5666 02f4 0125     		movs	r5, #1
 5667 02f6 84F80752 		strb	r5, [r4, #519]
 5668 02fa 04E0     		b	.L569
 5669              	.L621:
3238:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5670              		.loc 1 3238 0
 5671 02fc 0125     		movs	r5, #1
 5672 02fe 84F80752 		strb	r5, [r4, #519]
 5673 0302 00E0     		b	.L569
 5674              	.LVL778:
 5675              	.L601:
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5676              		.loc 1 3117 0
ARM GAS  /tmp/ccktbAOa.s 			page 194


 5677 0304 1D46     		mov	r5, r3
 5678              	.LVL779:
 5679              	.L569:
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5680              		.loc 1 3251 0
 5681 0306 2846     		mov	r0, r5
 5682 0308 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5683              		.cfi_endproc
 5684              	.LFE166:
 5686              		.section	.text.f_opendir,"ax",%progbits
 5687              		.align	1
 5688              		.global	f_opendir
 5689              		.syntax unified
 5690              		.thumb
 5691              		.thumb_func
 5692              		.fpu fpv4-sp-d16
 5694              	f_opendir:
 5695              	.LFB167:
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5696              		.loc 1 3264 0
 5697              		.cfi_startproc
 5698              		@ args = 0, pretend = 0, frame = 24
 5699              		@ frame_needed = 0, uses_anonymous_args = 0
 5700              	.LVL780:
 5701 0000 30B5     		push	{r4, r5, lr}
 5702              	.LCFI57:
 5703              		.cfi_def_cfa_offset 12
 5704              		.cfi_offset 4, -12
 5705              		.cfi_offset 5, -8
 5706              		.cfi_offset 14, -4
 5707 0002 87B0     		sub	sp, sp, #28
 5708              	.LCFI58:
 5709              		.cfi_def_cfa_offset 40
 5710 0004 0191     		str	r1, [sp, #4]
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5711              		.loc 1 3270 0
 5712 0006 0028     		cmp	r0, #0
 5713 0008 45D0     		beq	.L632
 5714 000a 0446     		mov	r4, r0
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5715              		.loc 1 3273 0
 5716 000c 0022     		movs	r2, #0
 5717 000e 01A9     		add	r1, sp, #4
 5718              	.LVL781:
 5719 0010 05A8     		add	r0, sp, #20
 5720              	.LVL782:
 5721 0012 FFF7FEFF 		bl	find_volume
 5722              	.LVL783:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
 5723              		.loc 1 3274 0
 5724 0016 0546     		mov	r5, r0
 5725 0018 18B1     		cbz	r0, .L639
 5726              	.LVL784:
 5727              	.L627:
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5728              		.loc 1 3304 0 discriminator 1
 5729 001a 0023     		movs	r3, #0
ARM GAS  /tmp/ccktbAOa.s 			page 195


 5730 001c C4F80032 		str	r3, [r4, #512]
 5731 0020 3AE0     		b	.L636
 5732              	.LVL785:
 5733              	.L639:
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
 5734              		.loc 1 3275 0
 5735 0022 059B     		ldr	r3, [sp, #20]
 5736 0024 C4F80032 		str	r3, [r4, #512]
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 5737              		.loc 1 3276 0
 5738 0028 02AB     		add	r3, sp, #8
 5739 002a C4F81832 		str	r3, [r4, #536]
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 5740              		.loc 1 3277 0
 5741 002e 0199     		ldr	r1, [sp, #4]
 5742 0030 2046     		mov	r0, r4
 5743              	.LVL786:
 5744 0032 FFF7FEFF 		bl	follow_path
 5745              	.LVL787:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
 5746              		.loc 1 3279 0
 5747 0036 0546     		mov	r5, r0
 5748 0038 88BB     		cbnz	r0, .L625
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
 5749              		.loc 1 3280 0
 5750 003a D4F81412 		ldr	r1, [r4, #532]
 5751 003e 41B1     		cbz	r1, .L626
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
 5752              		.loc 1 3281 0
 5753 0040 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 5754 0042 13F0100F 		tst	r3, #16
 5755 0046 24D0     		beq	.L633
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
 5756              		.loc 1 3282 0
 5757 0048 0598     		ldr	r0, [sp, #20]
 5758              	.LVL788:
 5759 004a FFF7FEFF 		bl	ld_clust
 5760              	.LVL789:
 5761 004e C4F80802 		str	r0, [r4, #520]
 5762              	.L626:
 5763              	.LVL790:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 5764              		.loc 1 3287 0
 5765 0052 059B     		ldr	r3, [sp, #20]
 5766 0054 B3F80632 		ldrh	r3, [r3, #518]
 5767 0058 A4F80432 		strh	r3, [r4, #516]	@ movhi
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 5768              		.loc 1 3288 0
 5769 005c 0021     		movs	r1, #0
 5770 005e 2046     		mov	r0, r4
 5771 0060 FFF7FEFF 		bl	dir_sdi
 5772              	.LVL791:
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
 5773              		.loc 1 3290 0
 5774 0064 0546     		mov	r5, r0
 5775 0066 20B1     		cbz	r0, .L630
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/ccktbAOa.s 			page 196


 5776              		.loc 1 3302 0
 5777 0068 0428     		cmp	r0, #4
 5778 006a 14BF     		ite	ne
 5779 006c 0546     		movne	r5, r0
 5780 006e 0525     		moveq	r5, #5
 5781 0070 D3E7     		b	.L627
 5782              	.L630:
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 5783              		.loc 1 3291 0
 5784 0072 D4F80832 		ldr	r3, [r4, #520]
 5785 0076 1BB9     		cbnz	r3, .L640
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5786              		.loc 1 3296 0
 5787 0078 0023     		movs	r3, #0
 5788 007a C4F81C32 		str	r3, [r4, #540]
 5789 007e 0BE0     		b	.L636
 5790              	.L640:
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
 5791              		.loc 1 3292 0
 5792 0080 0021     		movs	r1, #0
 5793 0082 2046     		mov	r0, r4
 5794              	.LVL792:
 5795 0084 FFF7FEFF 		bl	inc_lock
 5796              	.LVL793:
 5797 0088 C4F81C02 		str	r0, [r4, #540]
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
 5798              		.loc 1 3293 0
 5799 008c 20B9     		cbnz	r0, .L636
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 5800              		.loc 1 3294 0
 5801 008e 1225     		movs	r5, #18
 5802 0090 C3E7     		b	.L627
 5803              	.LVL794:
 5804              	.L633:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5805              		.loc 1 3284 0
 5806 0092 0525     		movs	r5, #5
 5807 0094 C1E7     		b	.L627
 5808              	.LVL795:
 5809              	.L632:
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5810              		.loc 1 3270 0
 5811 0096 0925     		movs	r5, #9
 5812              	.LVL796:
 5813              	.L636:
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5814              		.loc 1 3307 0
 5815 0098 2846     		mov	r0, r5
 5816 009a 07B0     		add	sp, sp, #28
 5817              	.LCFI59:
 5818              		.cfi_remember_state
 5819              		.cfi_def_cfa_offset 12
 5820              		@ sp needed
 5821 009c 30BD     		pop	{r4, r5, pc}
 5822              	.LVL797:
 5823              	.L625:
 5824              	.LCFI60:
ARM GAS  /tmp/ccktbAOa.s 			page 197


 5825              		.cfi_restore_state
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5826              		.loc 1 3302 0
 5827 009e 0428     		cmp	r0, #4
 5828 00a0 14BF     		ite	ne
 5829 00a2 0546     		movne	r5, r0
 5830 00a4 0525     		moveq	r5, #5
 5831 00a6 B8E7     		b	.L627
 5832              		.cfi_endproc
 5833              	.LFE167:
 5835              		.section	.text.f_closedir,"ax",%progbits
 5836              		.align	1
 5837              		.global	f_closedir
 5838              		.syntax unified
 5839              		.thumb
 5840              		.thumb_func
 5841              		.fpu fpv4-sp-d16
 5843              	f_closedir:
 5844              	.LFB168:
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5845              		.loc 1 3319 0
 5846              		.cfi_startproc
 5847              		@ args = 0, pretend = 0, frame = 0
 5848              		@ frame_needed = 0, uses_anonymous_args = 0
 5849              	.LVL798:
 5850 0000 38B5     		push	{r3, r4, r5, lr}
 5851              	.LCFI61:
 5852              		.cfi_def_cfa_offset 16
 5853              		.cfi_offset 3, -16
 5854              		.cfi_offset 4, -12
 5855              		.cfi_offset 5, -8
 5856              		.cfi_offset 14, -4
 5857 0002 0546     		mov	r5, r0
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5858              		.loc 1 3323 0
 5859 0004 FFF7FEFF 		bl	validate
 5860              	.LVL799:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5861              		.loc 1 3324 0
 5862 0008 0446     		mov	r4, r0
 5863 000a 28B9     		cbnz	r0, .L642
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
 5864              		.loc 1 3329 0
 5865 000c D5F81C02 		ldr	r0, [r5, #540]
 5866              	.LVL800:
 5867 0010 20B9     		cbnz	r0, .L646
 5868              	.L643:
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5869              		.loc 1 3333 0
 5870 0012 0023     		movs	r3, #0
 5871 0014 C5F80032 		str	r3, [r5, #512]
 5872              	.L642:
 5873              	.LVL801:
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5874              		.loc 1 3339 0
 5875 0018 2046     		mov	r0, r4
 5876 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccktbAOa.s 			page 198


 5877              	.LVL802:
 5878              	.L646:
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
 5879              		.loc 1 3330 0
 5880 001c FFF7FEFF 		bl	dec_lock
 5881              	.LVL803:
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5882              		.loc 1 3331 0
 5883 0020 0028     		cmp	r0, #0
 5884 0022 F6D0     		beq	.L643
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
 5885              		.loc 1 3330 0
 5886 0024 0446     		mov	r4, r0
 5887 0026 F7E7     		b	.L642
 5888              		.cfi_endproc
 5889              	.LFE168:
 5891              		.section	.text.f_readdir,"ax",%progbits
 5892              		.align	1
 5893              		.global	f_readdir
 5894              		.syntax unified
 5895              		.thumb
 5896              		.thumb_func
 5897              		.fpu fpv4-sp-d16
 5899              	f_readdir:
 5900              	.LFB169:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5901              		.loc 1 3352 0
 5902              		.cfi_startproc
 5903              		@ args = 0, pretend = 0, frame = 16
 5904              		@ frame_needed = 0, uses_anonymous_args = 0
 5905              	.LVL804:
 5906 0000 70B5     		push	{r4, r5, r6, lr}
 5907              	.LCFI62:
 5908              		.cfi_def_cfa_offset 16
 5909              		.cfi_offset 4, -16
 5910              		.cfi_offset 5, -12
 5911              		.cfi_offset 6, -8
 5912              		.cfi_offset 14, -4
 5913 0002 84B0     		sub	sp, sp, #16
 5914              	.LCFI63:
 5915              		.cfi_def_cfa_offset 32
 5916 0004 0446     		mov	r4, r0
 5917 0006 0E46     		mov	r6, r1
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5918              		.loc 1 3357 0
 5919 0008 FFF7FEFF 		bl	validate
 5920              	.LVL805:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 5921              		.loc 1 3358 0
 5922 000c 0546     		mov	r5, r0
 5923 000e 58B9     		cbnz	r0, .L648
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 5924              		.loc 1 3359 0
 5925 0010 6EB1     		cbz	r6, .L655
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 5926              		.loc 1 3362 0
 5927 0012 01AB     		add	r3, sp, #4
ARM GAS  /tmp/ccktbAOa.s 			page 199


 5928 0014 C4F81832 		str	r3, [r4, #536]
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 5929              		.loc 1 3363 0
 5930 0018 0021     		movs	r1, #0
 5931 001a 2046     		mov	r0, r4
 5932              	.LVL806:
 5933 001c FFF7FEFF 		bl	dir_read
 5934              	.LVL807:
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
 5935              		.loc 1 3364 0
 5936 0020 0428     		cmp	r0, #4
 5937 0022 0AD0     		beq	.L656
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 5938              		.loc 1 3368 0
 5939 0024 60B1     		cbz	r0, .L651
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 5940              		.loc 1 3363 0
 5941 0026 0546     		mov	r5, r0
 5942              	.LVL808:
 5943              	.L648:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5944              		.loc 1 3381 0
 5945 0028 2846     		mov	r0, r5
 5946 002a 04B0     		add	sp, sp, #16
 5947              	.LCFI64:
 5948              		.cfi_remember_state
 5949              		.cfi_def_cfa_offset 16
 5950              		@ sp needed
 5951 002c 70BD     		pop	{r4, r5, r6, pc}
 5952              	.LVL809:
 5953              	.L655:
 5954              	.LCFI65:
 5955              		.cfi_restore_state
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 5956              		.loc 1 3360 0
 5957 002e 0021     		movs	r1, #0
 5958 0030 2046     		mov	r0, r4
 5959              	.LVL810:
 5960 0032 FFF7FEFF 		bl	dir_sdi
 5961              	.LVL811:
 5962 0036 0546     		mov	r5, r0
 5963              	.LVL812:
 5964 0038 F6E7     		b	.L648
 5965              	.LVL813:
 5966              	.L656:
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 5967              		.loc 1 3365 0
 5968 003a 0023     		movs	r3, #0
 5969 003c C4F81032 		str	r3, [r4, #528]
 5970              	.LVL814:
 5971              	.L651:
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 5972              		.loc 1 3369 0
 5973 0040 3146     		mov	r1, r6
 5974 0042 2046     		mov	r0, r4
 5975 0044 FFF7FEFF 		bl	get_fileinfo
 5976              	.LVL815:
ARM GAS  /tmp/ccktbAOa.s 			page 200


3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 5977              		.loc 1 3370 0
 5978 0048 0021     		movs	r1, #0
 5979 004a 2046     		mov	r0, r4
 5980 004c FFF7FEFF 		bl	dir_next
 5981              	.LVL816:
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
 5982              		.loc 1 3371 0
 5983 0050 0428     		cmp	r0, #4
 5984 0052 01D0     		beq	.L657
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 5985              		.loc 1 3370 0
 5986 0054 0546     		mov	r5, r0
 5987 0056 E7E7     		b	.L648
 5988              	.L657:
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
 5989              		.loc 1 3372 0
 5990 0058 0023     		movs	r3, #0
 5991 005a C4F81032 		str	r3, [r4, #528]
 5992              	.LVL817:
 5993 005e E3E7     		b	.L648
 5994              		.cfi_endproc
 5995              	.LFE169:
 5997              		.section	.text.f_stat,"ax",%progbits
 5998              		.align	1
 5999              		.global	f_stat
 6000              		.syntax unified
 6001              		.thumb
 6002              		.thumb_func
 6003              		.fpu fpv4-sp-d16
 6005              	f_stat:
 6006              	.LFB170:
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6007              		.loc 1 3446 0
 6008              		.cfi_startproc
 6009              		@ args = 0, pretend = 0, frame = 568
 6010              		@ frame_needed = 0, uses_anonymous_args = 0
 6011              	.LVL818:
 6012 0000 30B5     		push	{r4, r5, lr}
 6013              	.LCFI66:
 6014              		.cfi_def_cfa_offset 12
 6015              		.cfi_offset 4, -12
 6016              		.cfi_offset 5, -8
 6017              		.cfi_offset 14, -4
 6018 0002 ADF50F7D 		sub	sp, sp, #572
 6019              	.LCFI67:
 6020              		.cfi_def_cfa_offset 584
 6021 0006 0190     		str	r0, [sp, #4]
 6022 0008 0D46     		mov	r5, r1
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6023              		.loc 1 3453 0
 6024 000a 0022     		movs	r2, #0
 6025 000c 01A9     		add	r1, sp, #4
 6026              	.LVL819:
 6027 000e 86A8     		add	r0, sp, #536
 6028              	.LVL820:
 6029 0010 FFF7FEFF 		bl	find_volume
ARM GAS  /tmp/ccktbAOa.s 			page 201


 6030              	.LVL821:
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6031              		.loc 1 3454 0
 6032 0014 0446     		mov	r4, r0
 6033 0016 18B1     		cbz	r0, .L662
 6034              	.LVL822:
 6035              	.L659:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6036              		.loc 1 3468 0
 6037 0018 2046     		mov	r0, r4
 6038 001a 0DF50F7D 		add	sp, sp, #572
 6039              	.LCFI68:
 6040              		.cfi_remember_state
 6041              		.cfi_def_cfa_offset 12
 6042              		@ sp needed
 6043 001e 30BD     		pop	{r4, r5, pc}
 6044              	.LVL823:
 6045              	.L662:
 6046              	.LCFI69:
 6047              		.cfi_restore_state
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6048              		.loc 1 3455 0
 6049 0020 03AB     		add	r3, sp, #12
 6050 0022 8C93     		str	r3, [sp, #560]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6051              		.loc 1 3456 0
 6052 0024 0199     		ldr	r1, [sp, #4]
 6053 0026 06A8     		add	r0, sp, #24
 6054              	.LVL824:
 6055 0028 FFF7FEFF 		bl	follow_path
 6056              	.LVL825:
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
 6057              		.loc 1 3457 0
 6058 002c 0446     		mov	r4, r0
 6059 002e 0028     		cmp	r0, #0
 6060 0030 F2D1     		bne	.L659
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
 6061              		.loc 1 3458 0
 6062 0032 8B9B     		ldr	r3, [sp, #556]
 6063 0034 33B1     		cbz	r3, .L660
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6064              		.loc 1 3459 0
 6065 0036 002D     		cmp	r5, #0
 6066 0038 EED0     		beq	.L659
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6067              		.loc 1 3459 0 is_stmt 0 discriminator 1
 6068 003a 2946     		mov	r1, r5
 6069 003c 06A8     		add	r0, sp, #24
 6070              	.LVL826:
 6071 003e FFF7FEFF 		bl	get_fileinfo
 6072              	.LVL827:
 6073 0042 E9E7     		b	.L659
 6074              	.LVL828:
 6075              	.L660:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6076              		.loc 1 3461 0 is_stmt 1
 6077 0044 0624     		movs	r4, #6
ARM GAS  /tmp/ccktbAOa.s 			page 202


 6078 0046 E7E7     		b	.L659
 6079              		.cfi_endproc
 6080              	.LFE170:
 6082              		.section	.text.f_getfree,"ax",%progbits
 6083              		.align	1
 6084              		.global	f_getfree
 6085              		.syntax unified
 6086              		.thumb
 6087              		.thumb_func
 6088              		.fpu fpv4-sp-d16
 6090              	f_getfree:
 6091              	.LFB171:
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6092              		.loc 1 3482 0
 6093              		.cfi_startproc
 6094              		@ args = 0, pretend = 0, frame = 8
 6095              		@ frame_needed = 0, uses_anonymous_args = 0
 6096              	.LVL829:
 6097 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6098              	.LCFI70:
 6099              		.cfi_def_cfa_offset 32
 6100              		.cfi_offset 4, -32
 6101              		.cfi_offset 5, -28
 6102              		.cfi_offset 6, -24
 6103              		.cfi_offset 7, -20
 6104              		.cfi_offset 8, -16
 6105              		.cfi_offset 9, -12
 6106              		.cfi_offset 10, -8
 6107              		.cfi_offset 14, -4
 6108 0004 82B0     		sub	sp, sp, #8
 6109              	.LCFI71:
 6110              		.cfi_def_cfa_offset 40
 6111 0006 02AB     		add	r3, sp, #8
 6112 0008 43F8040D 		str	r0, [r3, #-4]!
 6113 000c 8946     		mov	r9, r1
 6114 000e 1446     		mov	r4, r2
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
 6115              		.loc 1 3491 0
 6116 0010 0022     		movs	r2, #0
 6117              	.LVL830:
 6118 0012 1946     		mov	r1, r3
 6119              	.LVL831:
 6120 0014 2046     		mov	r0, r4
 6121              	.LVL832:
 6122 0016 FFF7FEFF 		bl	find_volume
 6123              	.LVL833:
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
 6124              		.loc 1 3493 0
 6125 001a 8046     		mov	r8, r0
 6126 001c 0028     		cmp	r0, #0
 6127 001e 69D1     		bne	.L664
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6128              		.loc 1 3492 0
 6129 0020 2568     		ldr	r5, [r4]
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
 6130              		.loc 1 3495 0
 6131 0022 D5F81032 		ldr	r3, [r5, #528]
ARM GAS  /tmp/ccktbAOa.s 			page 203


 6132 0026 D5F81442 		ldr	r4, [r5, #532]
 6133              	.LVL834:
 6134 002a A21E     		subs	r2, r4, #2
 6135 002c 9342     		cmp	r3, r2
 6136 002e 09D9     		bls	.L682
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
 6137              		.loc 1 3499 0
 6138 0030 95F80072 		ldrb	r7, [r5, #512]	@ zero_extendqisi2
 6139              	.LVL835:
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
 6140              		.loc 1 3501 0
 6141 0034 012F     		cmp	r7, #1
 6142 0036 08D0     		beq	.L683
 6143              	.LVL836:
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
 6144              		.loc 1 3511 0
 6145 0038 D5F82012 		ldr	r1, [r5, #544]
 6146              	.LVL837:
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6147              		.loc 1 3512 0
 6148 003c 0022     		movs	r2, #0
 6149 003e 1046     		mov	r0, r2
 6150              	.LVL838:
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
 6151              		.loc 1 3500 0
 6152 0040 1646     		mov	r6, r2
 6153 0042 2FE0     		b	.L675
 6154              	.LVL839:
 6155              	.L682:
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6156              		.loc 1 3496 0
 6157 0044 C9F80030 		str	r3, [r9]
 6158 0048 54E0     		b	.L664
 6159              	.LVL840:
 6160              	.L683:
 6161 004a 0224     		movs	r4, #2
 6162 004c 0026     		movs	r6, #0
 6163 004e 04E0     		b	.L669
 6164              	.LVL841:
 6165              	.L668:
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6166              		.loc 1 3508 0
 6167 0050 0134     		adds	r4, r4, #1
 6168              	.LVL842:
 6169 0052 D5F81432 		ldr	r3, [r5, #532]
 6170 0056 9C42     		cmp	r4, r3
 6171 0058 42D2     		bcs	.L667
 6172              	.LVL843:
 6173              	.L669:
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6174              		.loc 1 3504 0
 6175 005a 2146     		mov	r1, r4
 6176 005c 2846     		mov	r0, r5
 6177 005e FFF7FEFF 		bl	get_fat
 6178              	.LVL844:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6179              		.loc 1 3505 0
ARM GAS  /tmp/ccktbAOa.s 			page 204


 6180 0062 B0F1FF3F 		cmp	r0, #-1
 6181 0066 34D0     		beq	.L676
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6182              		.loc 1 3506 0
 6183 0068 0128     		cmp	r0, #1
 6184 006a 35D0     		beq	.L677
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6185              		.loc 1 3507 0
 6186 006c 0028     		cmp	r0, #0
 6187 006e EFD1     		bne	.L668
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6188              		.loc 1 3507 0 is_stmt 0 discriminator 1
 6189 0070 0136     		adds	r6, r6, #1
 6190              	.LVL845:
 6191 0072 EDE7     		b	.L668
 6192              	.LVL846:
 6193              	.L670:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
 6194              		.loc 1 3520 0 is_stmt 1
 6195 0074 022F     		cmp	r7, #2
 6196 0076 22D0     		beq	.L684
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 6197              		.loc 1 3524 0
 6198 0078 92F803E0 		ldrb	lr, [r2, #3]	@ zero_extendqisi2
 6199 007c 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 6200 007e 1B04     		lsls	r3, r3, #16
 6201 0080 43EA0E63 		orr	r3, r3, lr, lsl #24
 6202 0084 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 6203 0088 43EA0E03 		orr	r3, r3, lr
 6204 008c 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6205 0090 43EA0E23 		orr	r3, r3, lr, lsl #8
 6206 0094 33F07043 		bics	r3, r3, #-268435456
 6207 0098 08BF     		it	eq
 6208 009a 0136     		addeq	r6, r6, #1
 6209              	.LVL847:
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6210              		.loc 1 3525 0
 6211 009c 0432     		adds	r2, r2, #4
 6212              	.LVL848:
 6213 009e 0438     		subs	r0, r0, #4
 6214              	.LVL849:
 6215              	.L673:
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6216              		.loc 1 3527 0
 6217 00a0 013C     		subs	r4, r4, #1
 6218              	.LVL850:
 6219 00a2 1DD0     		beq	.L667
 6220              	.LVL851:
 6221              	.L675:
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
 6222              		.loc 1 3514 0
 6223 00a4 0028     		cmp	r0, #0
 6224 00a6 E5D1     		bne	.L670
 6225              	.LVL852:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6226              		.loc 1 3515 0
 6227 00a8 01F1010A 		add	r10, r1, #1
ARM GAS  /tmp/ccktbAOa.s 			page 205


 6228              	.LVL853:
 6229 00ac 2846     		mov	r0, r5
 6230 00ae FFF7FEFF 		bl	move_window
 6231              	.LVL854:
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
 6232              		.loc 1 3516 0
 6233 00b2 A0B9     		cbnz	r0, .L678
 6234              	.LVL855:
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
 6235              		.loc 1 3517 0
 6236 00b4 2A46     		mov	r2, r5
 6237              	.LVL856:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6238              		.loc 1 3515 0
 6239 00b6 5146     		mov	r1, r10
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6240              		.loc 1 3518 0
 6241 00b8 4FF40070 		mov	r0, #512
 6242              	.LVL857:
 6243 00bc DAE7     		b	.L670
 6244              	.LVL858:
 6245              	.L684:
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 6246              		.loc 1 3521 0
 6247 00be 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6248 00c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6249 00c4 53EA0E23 		orrs	r3, r3, lr, lsl #8
 6250 00c8 08BF     		it	eq
 6251 00ca 0136     		addeq	r6, r6, #1
 6252              	.LVL859:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6253              		.loc 1 3522 0
 6254 00cc 0232     		adds	r2, r2, #2
 6255              	.LVL860:
 6256 00ce 0238     		subs	r0, r0, #2
 6257              	.LVL861:
 6258 00d0 E6E7     		b	.L673
 6259              	.LVL862:
 6260              	.L676:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6261              		.loc 1 3505 0
 6262 00d2 4FF00108 		mov	r8, #1
 6263 00d6 03E0     		b	.L667
 6264              	.L677:
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6265              		.loc 1 3506 0
 6266 00d8 4FF00208 		mov	r8, #2
 6267 00dc 00E0     		b	.L667
 6268              	.LVL863:
 6269              	.L678:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6270              		.loc 1 3515 0
 6271 00de 8046     		mov	r8, r0
 6272              	.LVL864:
 6273              	.L667:
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 6274              		.loc 1 3529 0
ARM GAS  /tmp/ccktbAOa.s 			page 206


 6275 00e0 C5F81062 		str	r6, [r5, #528]
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
 6276              		.loc 1 3530 0
 6277 00e4 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
 6278 00e8 43F00103 		orr	r3, r3, #1
 6279 00ec 85F80532 		strb	r3, [r5, #517]
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6280              		.loc 1 3531 0
 6281 00f0 C9F80060 		str	r6, [r9]
 6282              	.LVL865:
 6283              	.L664:
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6284              		.loc 1 3535 0
 6285 00f4 4046     		mov	r0, r8
 6286 00f6 02B0     		add	sp, sp, #8
 6287              	.LCFI72:
 6288              		.cfi_def_cfa_offset 32
 6289              		@ sp needed
 6290 00f8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6291              		.cfi_endproc
 6292              	.LFE171:
 6294              		.section	.text.f_truncate,"ax",%progbits
 6295              		.align	1
 6296              		.global	f_truncate
 6297              		.syntax unified
 6298              		.thumb
 6299              		.thumb_func
 6300              		.fpu fpv4-sp-d16
 6302              	f_truncate:
 6303              	.LFB172:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6304              		.loc 1 3547 0
 6305              		.cfi_startproc
 6306              		@ args = 0, pretend = 0, frame = 0
 6307              		@ frame_needed = 0, uses_anonymous_args = 0
 6308              	.LVL866:
 6309 0000 70B5     		push	{r4, r5, r6, lr}
 6310              	.LCFI73:
 6311              		.cfi_def_cfa_offset 16
 6312              		.cfi_offset 4, -16
 6313              		.cfi_offset 5, -12
 6314              		.cfi_offset 6, -8
 6315              		.cfi_offset 14, -4
 6316 0002 0446     		mov	r4, r0
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6317              		.loc 1 3552 0
 6318 0004 FFF7FEFF 		bl	validate
 6319              	.LVL867:
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
 6320              		.loc 1 3553 0
 6321 0008 0546     		mov	r5, r0
 6322 000a 0028     		cmp	r0, #0
 6323 000c 60D1     		bne	.L704
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
 6324              		.loc 1 3554 0
 6325 000e 94F80732 		ldrb	r3, [r4, #519]	@ zero_extendqisi2
 6326 0012 002B     		cmp	r3, #0
ARM GAS  /tmp/ccktbAOa.s 			page 207


 6327 0014 53D1     		bne	.L697
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
 6328              		.loc 1 3557 0
 6329 0016 94F80622 		ldrb	r2, [r4, #518]	@ zero_extendqisi2
 6330 001a 12F0020F 		tst	r2, #2
 6331 001e 50D0     		beq	.L698
 6332              	.LVL868:
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 6333              		.loc 1 3562 0
 6334 0020 D4F80832 		ldr	r3, [r4, #520]
 6335 0024 D4F80C12 		ldr	r1, [r4, #524]
 6336 0028 9942     		cmp	r1, r3
 6337 002a 51D9     		bls	.L704
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 6338              		.loc 1 3563 0
 6339 002c C4F80C32 		str	r3, [r4, #524]
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6340              		.loc 1 3564 0
 6341 0030 42F02002 		orr	r2, r2, #32
 6342 0034 84F80622 		strb	r2, [r4, #518]
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
 6343              		.loc 1 3565 0
 6344 0038 03BB     		cbnz	r3, .L688
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
 6345              		.loc 1 3566 0
 6346 003a D4F81012 		ldr	r1, [r4, #528]
 6347 003e D4F80002 		ldr	r0, [r4, #512]
 6348 0042 FFF7FEFF 		bl	remove_chain
 6349              	.LVL869:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
 6350              		.loc 1 3567 0
 6351 0046 0023     		movs	r3, #0
 6352 0048 C4F81032 		str	r3, [r4, #528]
 6353              	.L689:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 6354              		.loc 1 3579 0
 6355 004c E8BB     		cbnz	r0, .L702
 6356              	.LVL870:
 6357              	.L692:
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
 6358              		.loc 1 3579 0 is_stmt 0 discriminator 1
 6359 004e 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
 6360 0052 13F0400F 		tst	r3, #64
 6361 0056 3BD0     		beq	.L704
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
 6362              		.loc 1 3580 0 is_stmt 1
 6363 0058 D4F80002 		ldr	r0, [r4, #512]
 6364 005c 0123     		movs	r3, #1
 6365 005e D4F81822 		ldr	r2, [r4, #536]
 6366 0062 2146     		mov	r1, r4
 6367 0064 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 6368 0068 FFF7FEFF 		bl	disk_write
 6369              	.LVL871:
 6370 006c 90BB     		cbnz	r0, .L703
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6371              		.loc 1 3583 0
 6372 006e 94F80632 		ldrb	r3, [r4, #518]	@ zero_extendqisi2
ARM GAS  /tmp/ccktbAOa.s 			page 208


 6373 0072 23F04003 		bic	r3, r3, #64
 6374 0076 84F80632 		strb	r3, [r4, #518]
 6375 007a 29E0     		b	.L704
 6376              	.L688:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 6377              		.loc 1 3569 0
 6378 007c D4F81412 		ldr	r1, [r4, #532]
 6379 0080 D4F80002 		ldr	r0, [r4, #512]
 6380 0084 FFF7FEFF 		bl	get_fat
 6381              	.LVL872:
 6382 0088 0646     		mov	r6, r0
 6383              	.LVL873:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6384              		.loc 1 3572 0
 6385 008a 0128     		cmp	r0, #1
 6386 008c 1BD0     		beq	.L699
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6387              		.loc 1 3573 0
 6388 008e B0F1FF3F 		cmp	r0, #-1
 6389 0092 21D0     		beq	.L700
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6390              		.loc 1 3573 0 is_stmt 0 discriminator 1
 6391 0094 D4F80002 		ldr	r0, [r4, #512]
 6392              	.LVL874:
 6393 0098 D0F81432 		ldr	r3, [r0, #532]
 6394 009c 9E42     		cmp	r6, r3
 6395 009e D6D2     		bcs	.L692
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 6396              		.loc 1 3574 0 is_stmt 1
 6397 00a0 6FF07042 		mvn	r2, #-268435456
 6398 00a4 D4F81412 		ldr	r1, [r4, #532]
 6399 00a8 FFF7FEFF 		bl	put_fat
 6400              	.LVL875:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6401              		.loc 1 3575 0
 6402 00ac 08B1     		cbz	r0, .L707
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 6403              		.loc 1 3574 0
 6404 00ae 0546     		mov	r5, r0
 6405 00b0 0CE0     		b	.L696
 6406              	.L707:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6407              		.loc 1 3575 0 discriminator 1
 6408 00b2 3146     		mov	r1, r6
 6409 00b4 D4F80002 		ldr	r0, [r4, #512]
 6410              	.LVL876:
 6411 00b8 FFF7FEFF 		bl	remove_chain
 6412              	.LVL877:
 6413 00bc C6E7     		b	.L689
 6414              	.LVL878:
 6415              	.L697:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6416              		.loc 1 3555 0
 6417 00be 1D46     		mov	r5, r3
 6418 00c0 06E0     		b	.L704
 6419              	.L698:
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/ccktbAOa.s 			page 209


 6420              		.loc 1 3558 0
 6421 00c2 0725     		movs	r5, #7
 6422              	.LVL879:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6423              		.loc 1 3590 0
 6424 00c4 04E0     		b	.L704
 6425              	.LVL880:
 6426              	.L699:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6427              		.loc 1 3572 0
 6428 00c6 0225     		movs	r5, #2
 6429 00c8 00E0     		b	.L696
 6430              	.LVL881:
 6431              	.L702:
 6432 00ca 0546     		mov	r5, r0
 6433              	.LVL882:
 6434              	.L696:
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6435              		.loc 1 3587 0 discriminator 1
 6436 00cc 84F80752 		strb	r5, [r4, #519]
 6437              	.LVL883:
 6438              	.L704:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6439              		.loc 1 3591 0
 6440 00d0 2846     		mov	r0, r5
 6441 00d2 70BD     		pop	{r4, r5, r6, pc}
 6442              	.LVL884:
 6443              	.L703:
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 6444              		.loc 1 3581 0
 6445 00d4 0125     		movs	r5, #1
 6446              	.LVL885:
 6447 00d6 F9E7     		b	.L696
 6448              	.LVL886:
 6449              	.L700:
 6450 00d8 0125     		movs	r5, #1
 6451 00da F7E7     		b	.L696
 6452              		.cfi_endproc
 6453              	.LFE172:
 6455              		.section	.text.f_unlink,"ax",%progbits
 6456              		.align	1
 6457              		.global	f_unlink
 6458              		.syntax unified
 6459              		.thumb
 6460              		.thumb_func
 6461              		.fpu fpv4-sp-d16
 6463              	f_unlink:
 6464              	.LFB173:
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6465              		.loc 1 3603 0
 6466              		.cfi_startproc
 6467              		@ args = 0, pretend = 0, frame = 1112
 6468              		@ frame_needed = 0, uses_anonymous_args = 0
 6469              	.LVL887:
 6470 0000 30B5     		push	{r4, r5, lr}
 6471              	.LCFI74:
 6472              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccktbAOa.s 			page 210


 6473              		.cfi_offset 4, -12
 6474              		.cfi_offset 5, -8
 6475              		.cfi_offset 14, -4
 6476 0002 ADF25C4D 		subw	sp, sp, #1116
 6477              	.LCFI75:
 6478              		.cfi_def_cfa_offset 1128
 6479 0006 0190     		str	r0, [sp, #4]
 6480              	.LVL888:
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6481              		.loc 1 3612 0
 6482 0008 0122     		movs	r2, #1
 6483 000a 01A9     		add	r1, sp, #4
 6484 000c 0DF58760 		add	r0, sp, #1080
 6485              	.LVL889:
 6486 0010 FFF7FEFF 		bl	find_volume
 6487              	.LVL890:
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6488              		.loc 1 3613 0
 6489 0014 0346     		mov	r3, r0
 6490 0016 18B1     		cbz	r0, .L723
 6491              	.LVL891:
 6492              	.L720:
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6493              		.loc 1 3660 0
 6494 0018 1846     		mov	r0, r3
 6495 001a 0DF25C4D 		addw	sp, sp, #1116
 6496              	.LCFI76:
 6497              		.cfi_remember_state
 6498              		.cfi_def_cfa_offset 12
 6499              		@ sp needed
 6500 001e 30BD     		pop	{r4, r5, pc}
 6501              	.LVL892:
 6502              	.L723:
 6503              	.LCFI77:
 6504              		.cfi_restore_state
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6505              		.loc 1 3614 0
 6506 0020 03AB     		add	r3, sp, #12
 6507 0022 CDF85034 		str	r3, [sp, #1104]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
 6508              		.loc 1 3615 0
 6509 0026 0199     		ldr	r1, [sp, #4]
 6510 0028 8EA8     		add	r0, sp, #568
 6511              	.LVL893:
 6512 002a FFF7FEFF 		bl	follow_path
 6513              	.LVL894:
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6514              		.loc 1 3619 0
 6515 002e 0346     		mov	r3, r0
 6516 0030 0028     		cmp	r0, #0
 6517 0032 F1D1     		bne	.L720
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6518              		.loc 1 3619 0 is_stmt 0 discriminator 1
 6519 0034 0221     		movs	r1, #2
 6520 0036 8EA8     		add	r0, sp, #568
 6521              	.LVL895:
 6522 0038 FFF7FEFF 		bl	chk_lock
ARM GAS  /tmp/ccktbAOa.s 			page 211


 6523              	.LVL896:
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 6524              		.loc 1 3621 0 is_stmt 1 discriminator 1
 6525 003c 0346     		mov	r3, r0
 6526 003e 0028     		cmp	r0, #0
 6527 0040 EAD1     		bne	.L720
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
 6528              		.loc 1 3622 0
 6529 0042 DDF84C14 		ldr	r1, [sp, #1100]
 6530              	.LVL897:
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 6531              		.loc 1 3623 0
 6532 0046 0029     		cmp	r1, #0
 6533 0048 3BD0     		beq	.L717
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6534              		.loc 1 3626 0
 6535 004a CC7A     		ldrb	r4, [r1, #11]	@ zero_extendqisi2
 6536 004c 14F0010F 		tst	r4, #1
 6537 0050 39D1     		bne	.L718
 6538              	.LVL898:
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
 6539              		.loc 1 3630 0
 6540 0052 DDF83804 		ldr	r0, [sp, #1080]
 6541 0056 FFF7FEFF 		bl	ld_clust
 6542              	.LVL899:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 6543              		.loc 1 3631 0
 6544 005a 0546     		mov	r5, r0
 6545 005c 60B9     		cbnz	r0, .L715
 6546              	.LVL900:
 6547              	.L712:
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
 6548              		.loc 1 3650 0
 6549 005e 8EA8     		add	r0, sp, #568
 6550 0060 FFF7FEFF 		bl	dir_remove
 6551              	.LVL901:
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 6552              		.loc 1 3651 0
 6553 0064 0346     		mov	r3, r0
 6554 0066 0028     		cmp	r0, #0
 6555 0068 D6D1     		bne	.L720
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 6556              		.loc 1 3651 0 is_stmt 0 discriminator 1
 6557 006a FDB9     		cbnz	r5, .L724
 6558              	.L714:
 6559              	.LVL902:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6560              		.loc 1 3653 0 is_stmt 1 discriminator 1
 6561 006c DDF83804 		ldr	r0, [sp, #1080]
 6562 0070 FFF7FEFF 		bl	sync_fs
 6563              	.LVL903:
 6564 0074 0346     		mov	r3, r0
 6565 0076 CFE7     		b	.L720
 6566              	.LVL904:
 6567              	.L715:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 6568              		.loc 1 3631 0 discriminator 1
ARM GAS  /tmp/ccktbAOa.s 			page 212


 6569 0078 14F0100F 		tst	r4, #16
 6570 007c EFD0     		beq	.L712
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
 6571              		.loc 1 3638 0
 6572 007e 4FF40872 		mov	r2, #544
 6573 0082 8EA9     		add	r1, sp, #568
 6574 0084 06A8     		add	r0, sp, #24
 6575              	.LVL905:
 6576 0086 FFF7FEFF 		bl	mem_cpy
 6577              	.LVL906:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
 6578              		.loc 1 3639 0
 6579 008a 8895     		str	r5, [sp, #544]
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 6580              		.loc 1 3640 0
 6581 008c 0221     		movs	r1, #2
 6582 008e 06A8     		add	r0, sp, #24
 6583 0090 FFF7FEFF 		bl	dir_sdi
 6584              	.LVL907:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
 6585              		.loc 1 3641 0
 6586 0094 0346     		mov	r3, r0
 6587 0096 0028     		cmp	r0, #0
 6588 0098 BED1     		bne	.L720
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
 6589              		.loc 1 3642 0
 6590 009a 0021     		movs	r1, #0
 6591 009c 06A8     		add	r0, sp, #24
 6592              	.LVL908:
 6593 009e FFF7FEFF 		bl	dir_read
 6594              	.LVL909:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 6595              		.loc 1 3643 0
 6596 00a2 0346     		mov	r3, r0
 6597 00a4 58B1     		cbz	r0, .L719
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6598              		.loc 1 3644 0
 6599 00a6 0428     		cmp	r0, #4
 6600 00a8 D9D0     		beq	.L712
 6601 00aa B5E7     		b	.L720
 6602              	.L724:
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
 6603              		.loc 1 3652 0
 6604 00ac 2946     		mov	r1, r5
 6605 00ae DDF83804 		ldr	r0, [sp, #1080]
 6606              	.LVL910:
 6607 00b2 FFF7FEFF 		bl	remove_chain
 6608              	.LVL911:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6609              		.loc 1 3653 0
 6610 00b6 0346     		mov	r3, r0
 6611 00b8 0028     		cmp	r0, #0
 6612 00ba ADD1     		bne	.L720
 6613 00bc D6E7     		b	.L714
 6614              	.L719:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 6615              		.loc 1 3643 0
ARM GAS  /tmp/ccktbAOa.s 			page 213


 6616 00be 0723     		movs	r3, #7
 6617              	.LVL912:
 6618 00c0 AAE7     		b	.L720
 6619              	.LVL913:
 6620              	.L717:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6621              		.loc 1 3624 0
 6622 00c2 0623     		movs	r3, #6
 6623 00c4 A8E7     		b	.L720
 6624              	.L718:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6625              		.loc 1 3627 0
 6626 00c6 0723     		movs	r3, #7
 6627              	.LVL914:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6628              		.loc 1 3659 0
 6629 00c8 A6E7     		b	.L720
 6630              		.cfi_endproc
 6631              	.LFE173:
 6633              		.section	.text.f_mkdir,"ax",%progbits
 6634              		.align	1
 6635              		.global	f_mkdir
 6636              		.syntax unified
 6637              		.thumb
 6638              		.thumb_func
 6639              		.fpu fpv4-sp-d16
 6641              	f_mkdir:
 6642              	.LFB174:
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6643              		.loc 1 3672 0
 6644              		.cfi_startproc
 6645              		@ args = 0, pretend = 0, frame = 568
 6646              		@ frame_needed = 0, uses_anonymous_args = 0
 6647              	.LVL915:
 6648 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6649              	.LCFI78:
 6650              		.cfi_def_cfa_offset 36
 6651              		.cfi_offset 4, -36
 6652              		.cfi_offset 5, -32
 6653              		.cfi_offset 6, -28
 6654              		.cfi_offset 7, -24
 6655              		.cfi_offset 8, -20
 6656              		.cfi_offset 9, -16
 6657              		.cfi_offset 10, -12
 6658              		.cfi_offset 11, -8
 6659              		.cfi_offset 14, -4
 6660 0004 ADF50F7D 		sub	sp, sp, #572
 6661              	.LCFI79:
 6662              		.cfi_def_cfa_offset 608
 6663 0008 0190     		str	r0, [sp, #4]
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 6664              		.loc 1 3676 0
 6665 000a FFF7FEFF 		bl	get_fattime
 6666              	.LVL916:
 6667 000e 0546     		mov	r5, r0
 6668              	.LVL917:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
ARM GAS  /tmp/ccktbAOa.s 			page 214


 6669              		.loc 1 3681 0
 6670 0010 0122     		movs	r2, #1
 6671 0012 01A9     		add	r1, sp, #4
 6672 0014 86A8     		add	r0, sp, #536
 6673              	.LVL918:
 6674 0016 FFF7FEFF 		bl	find_volume
 6675              	.LVL919:
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6676              		.loc 1 3682 0
 6677 001a 0446     		mov	r4, r0
 6678 001c 20B1     		cbz	r0, .L743
 6679              	.LVL920:
 6680              	.L740:
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6681              		.loc 1 3734 0
 6682 001e 2046     		mov	r0, r4
 6683 0020 0DF50F7D 		add	sp, sp, #572
 6684              	.LCFI80:
 6685              		.cfi_remember_state
 6686              		.cfi_def_cfa_offset 36
 6687              		@ sp needed
 6688 0024 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6689              	.LVL921:
 6690              	.L743:
 6691              	.LCFI81:
 6692              		.cfi_restore_state
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6693              		.loc 1 3683 0
 6694 0028 03AB     		add	r3, sp, #12
 6695 002a 8C93     		str	r3, [sp, #560]
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6696              		.loc 1 3684 0
 6697 002c 0199     		ldr	r1, [sp, #4]
 6698 002e 06A8     		add	r0, sp, #24
 6699              	.LVL922:
 6700 0030 FFF7FEFF 		bl	follow_path
 6701              	.LVL923:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 6702              		.loc 1 3685 0
 6703 0034 0028     		cmp	r0, #0
 6704 0036 00F0AB80 		beq	.L735
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 6705              		.loc 1 3688 0
 6706 003a 0428     		cmp	r0, #4
 6707 003c 01D0     		beq	.L744
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6708              		.loc 1 3684 0
 6709 003e 0446     		mov	r4, r0
3733:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6710              		.loc 1 3733 0
 6711 0040 EDE7     		b	.L740
 6712              	.L744:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 6713              		.loc 1 3689 0
 6714 0042 0021     		movs	r1, #0
 6715 0044 8698     		ldr	r0, [sp, #536]
 6716              	.LVL924:
ARM GAS  /tmp/ccktbAOa.s 			page 215


 6717 0046 FFF7FEFF 		bl	create_chain
 6718              	.LVL925:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 6719              		.loc 1 3691 0
 6720 004a 0746     		mov	r7, r0
 6721 004c 48B1     		cbz	r0, .L737
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6722              		.loc 1 3692 0
 6723 004e 0128     		cmp	r0, #1
 6724 0050 01D1     		bne	.L745
 6725 0052 0224     		movs	r4, #2
 6726 0054 06E0     		b	.L727
 6727              	.L745:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 6728              		.loc 1 3693 0
 6729 0056 B0F1FF3F 		cmp	r0, #-1
 6730 005a 08BF     		it	eq
 6731 005c 0124     		moveq	r4, #1
 6732 005e 74D0     		beq	.L728
 6733 0060 00E0     		b	.L727
 6734              	.L737:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
 6735              		.loc 1 3691 0
 6736 0062 0724     		movs	r4, #7
 6737              	.L727:
 6738              	.LVL926:
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
 6739              		.loc 1 3694 0
 6740 0064 24B1     		cbz	r4, .L746
 6741              	.LVL927:
 6742              	.L729:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6743              		.loc 1 3720 0
 6744 0066 3946     		mov	r1, r7
 6745 0068 8698     		ldr	r0, [sp, #536]
 6746 006a FFF7FEFF 		bl	remove_chain
 6747              	.LVL928:
 6748 006e D6E7     		b	.L740
 6749              	.LVL929:
 6750              	.L746:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 6751              		.loc 1 3695 0
 6752 0070 8698     		ldr	r0, [sp, #536]
 6753              	.LVL930:
 6754 0072 FFF7FEFF 		bl	sync_window
 6755              	.LVL931:
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
 6756              		.loc 1 3696 0
 6757 0076 0446     		mov	r4, r0
 6758 0078 0028     		cmp	r0, #0
 6759 007a F4D1     		bne	.L729
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
 6760              		.loc 1 3697 0
 6761 007c 869E     		ldr	r6, [sp, #536]
 6762 007e 3946     		mov	r1, r7
 6763 0080 3046     		mov	r0, r6
 6764              	.LVL932:
ARM GAS  /tmp/ccktbAOa.s 			page 216


 6765 0082 FFF7FEFF 		bl	clust2sect
 6766              	.LVL933:
 6767 0086 0446     		mov	r4, r0
 6768              	.LVL934:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
 6769              		.loc 1 3698 0
 6770 0088 B246     		mov	r10, r6
 6771              	.LVL935:
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 6772              		.loc 1 3699 0
 6773 008a 4FF40072 		mov	r2, #512
 6774 008e 0021     		movs	r1, #0
 6775 0090 3046     		mov	r0, r6
 6776              	.LVL936:
 6777 0092 FFF7FEFF 		bl	mem_set
 6778              	.LVL937:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
 6779              		.loc 1 3700 0
 6780 0096 0B22     		movs	r2, #11
 6781 0098 2021     		movs	r1, #32
 6782 009a 3046     		mov	r0, r6
 6783 009c FFF7FEFF 		bl	mem_set
 6784              	.LVL938:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
 6785              		.loc 1 3701 0
 6786 00a0 4FF02E08 		mov	r8, #46
 6787 00a4 86F80080 		strb	r8, [r6]
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 6788              		.loc 1 3702 0
 6789 00a8 1023     		movs	r3, #16
 6790 00aa F372     		strb	r3, [r6, #11]
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
 6791              		.loc 1 3703 0
 6792 00ac B575     		strb	r5, [r6, #22]
 6793 00ae C5F30723 		ubfx	r3, r5, #8, #8
 6794 00b2 F375     		strb	r3, [r6, #23]
 6795 00b4 2B0C     		lsrs	r3, r5, #16
 6796 00b6 3376     		strb	r3, [r6, #24]
 6797 00b8 2B0E     		lsrs	r3, r5, #24
 6798 00ba 7376     		strb	r3, [r6, #25]
 6799              	.LVL939:
 6800              	.LBB64:
 6801              	.LBB65:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 6802              		.loc 1 1330 0
 6803 00bc B776     		strb	r7, [r6, #26]
 6804 00be C7F30723 		ubfx	r3, r7, #8, #8
 6805 00c2 F376     		strb	r3, [r6, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6806              		.loc 1 1331 0
 6807 00c4 3B0C     		lsrs	r3, r7, #16
 6808 00c6 3375     		strb	r3, [r6, #20]
 6809 00c8 1B0A     		lsrs	r3, r3, #8
 6810 00ca 7375     		strb	r3, [r6, #21]
 6811              	.LVL940:
 6812              	.LBE65:
 6813              	.LBE64:
ARM GAS  /tmp/ccktbAOa.s 			page 217


3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
 6814              		.loc 1 3705 0
 6815 00cc 2022     		movs	r2, #32
 6816 00ce 3146     		mov	r1, r6
 6817 00d0 B018     		adds	r0, r6, r2
 6818 00d2 FFF7FEFF 		bl	mem_cpy
 6819              	.LVL941:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 6820              		.loc 1 3706 0
 6821 00d6 86F82180 		strb	r8, [r6, #33]
 6822 00da 889B     		ldr	r3, [sp, #544]
 6823              	.LVL942:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 6824              		.loc 1 3707 0
 6825 00dc 869A     		ldr	r2, [sp, #536]
 6826 00de 92F80012 		ldrb	r1, [r2, #512]	@ zero_extendqisi2
 6827 00e2 0329     		cmp	r1, #3
 6828 00e4 4ED0     		beq	.L747
 6829              	.LVL943:
 6830              	.L731:
 6831              	.LBB66:
 6832              	.LBB67:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 6833              		.loc 1 1330 0
 6834 00e6 86F83A30 		strb	r3, [r6, #58]
 6835 00ea C3F30722 		ubfx	r2, r3, #8, #8
 6836 00ee 86F83B20 		strb	r2, [r6, #59]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6837              		.loc 1 1331 0
 6838 00f2 1B0C     		lsrs	r3, r3, #16
 6839              	.LVL944:
 6840 00f4 86F83430 		strb	r3, [r6, #52]
 6841 00f8 1B0A     		lsrs	r3, r3, #8
 6842 00fa 86F83530 		strb	r3, [r6, #53]
 6843              	.LVL945:
 6844              	.LBE67:
 6845              	.LBE66:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 6846              		.loc 1 3710 0
 6847 00fe 869B     		ldr	r3, [sp, #536]
 6848 0100 93F80232 		ldrb	r3, [r3, #514]	@ zero_extendqisi2
 6849              	.LVL946:
 6850 0104 EBB1     		cbz	r3, .L732
 6851 0106 03F1FF38 		add	r8, r3, #-1
 6852 010a 5FFA88F8 		uxtb	r8, r8
 6853 010e 08F10108 		add	r8, r8, #1
 6854 0112 A044     		add	r8, r8, r4
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
 6855              		.loc 1 3712 0
 6856 0114 4FF00109 		mov	r9, #1
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6857              		.loc 1 3715 0
 6858 0118 4FF4007B 		mov	fp, #512
 6859              	.LVL947:
 6860              	.L733:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 6861              		.loc 1 3711 0
ARM GAS  /tmp/ccktbAOa.s 			page 218


 6862 011c 8698     		ldr	r0, [sp, #536]
 6863 011e 661C     		adds	r6, r4, #1
 6864              	.LVL948:
 6865 0120 C0F82C42 		str	r4, [r0, #556]
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
 6866              		.loc 1 3712 0
 6867 0124 80F80492 		strb	r9, [r0, #516]
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 6868              		.loc 1 3713 0
 6869 0128 FFF7FEFF 		bl	sync_window
 6870              	.LVL949:
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
 6871              		.loc 1 3714 0
 6872 012c 0446     		mov	r4, r0
 6873 012e 0028     		cmp	r0, #0
 6874 0130 99D1     		bne	.L729
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6875              		.loc 1 3715 0 discriminator 2
 6876 0132 5A46     		mov	r2, fp
 6877 0134 0021     		movs	r1, #0
 6878 0136 5046     		mov	r0, r10
 6879              	.LVL950:
 6880 0138 FFF7FEFF 		bl	mem_set
 6881              	.LVL951:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 6882              		.loc 1 3711 0 discriminator 2
 6883 013c 3446     		mov	r4, r6
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 6884              		.loc 1 3710 0 discriminator 2
 6885 013e 4645     		cmp	r6, r8
 6886 0140 ECD1     		bne	.L733
 6887              	.LVL952:
 6888              	.L732:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 6889              		.loc 1 3718 0
 6890 0142 06A8     		add	r0, sp, #24
 6891 0144 FFF7FEFF 		bl	dir_register
 6892              	.LVL953:
 6893 0148 0446     		mov	r4, r0
 6894              	.LVL954:
 6895              	.L728:
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 6896              		.loc 1 3719 0
 6897 014a 002C     		cmp	r4, #0
 6898 014c 8BD1     		bne	.L729
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6899              		.loc 1 3722 0
 6900 014e 8B9B     		ldr	r3, [sp, #556]
 6901              	.LVL955:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
 6902              		.loc 1 3723 0
 6903 0150 1022     		movs	r2, #16
 6904 0152 DA72     		strb	r2, [r3, #11]
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
 6905              		.loc 1 3724 0
 6906 0154 9D75     		strb	r5, [r3, #22]
 6907 0156 C5F30722 		ubfx	r2, r5, #8, #8
ARM GAS  /tmp/ccktbAOa.s 			page 219


 6908 015a DA75     		strb	r2, [r3, #23]
 6909 015c 2A0C     		lsrs	r2, r5, #16
 6910 015e 1A76     		strb	r2, [r3, #24]
 6911 0160 2D0E     		lsrs	r5, r5, #24
 6912              	.LVL956:
 6913 0162 5D76     		strb	r5, [r3, #25]
 6914              	.LVL957:
 6915              	.LBB68:
 6916              	.LBB69:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 6917              		.loc 1 1330 0
 6918 0164 9F76     		strb	r7, [r3, #26]
 6919 0166 C7F30722 		ubfx	r2, r7, #8, #8
 6920 016a DA76     		strb	r2, [r3, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6921              		.loc 1 1331 0
 6922 016c 3F0C     		lsrs	r7, r7, #16
 6923              	.LVL958:
 6924 016e 1F75     		strb	r7, [r3, #20]
 6925 0170 3F0A     		lsrs	r7, r7, #8
 6926 0172 5F75     		strb	r7, [r3, #21]
 6927              	.LVL959:
 6928              	.LBE69:
 6929              	.LBE68:
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 6930              		.loc 1 3726 0
 6931 0174 8698     		ldr	r0, [sp, #536]
 6932 0176 0123     		movs	r3, #1
 6933              	.LVL960:
 6934 0178 80F80432 		strb	r3, [r0, #516]
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6935              		.loc 1 3727 0
 6936 017c FFF7FEFF 		bl	sync_fs
 6937              	.LVL961:
 6938 0180 0446     		mov	r4, r0
 6939              	.LVL962:
 6940 0182 4CE7     		b	.L740
 6941              	.LVL963:
 6942              	.L747:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 6943              		.loc 1 3707 0 discriminator 1
 6944 0184 D2F82422 		ldr	r2, [r2, #548]
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
 6945              		.loc 1 3708 0 discriminator 1
 6946 0188 9342     		cmp	r3, r2
 6947 018a 08BF     		it	eq
 6948 018c 0023     		moveq	r3, #0
 6949              	.LVL964:
 6950 018e AAE7     		b	.L731
 6951              	.LVL965:
 6952              	.L735:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 6953              		.loc 1 3685 0
 6954 0190 0824     		movs	r4, #8
 6955 0192 44E7     		b	.L740
 6956              		.cfi_endproc
 6957              	.LFE174:
ARM GAS  /tmp/ccktbAOa.s 			page 220


 6959              		.section	.text.f_chmod,"ax",%progbits
 6960              		.align	1
 6961              		.global	f_chmod
 6962              		.syntax unified
 6963              		.thumb
 6964              		.thumb_func
 6965              		.fpu fpv4-sp-d16
 6967              	f_chmod:
 6968              	.LFB175:
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6969              		.loc 1 3748 0
 6970              		.cfi_startproc
 6971              		@ args = 0, pretend = 0, frame = 568
 6972              		@ frame_needed = 0, uses_anonymous_args = 0
 6973              	.LVL966:
 6974 0000 30B5     		push	{r4, r5, lr}
 6975              	.LCFI82:
 6976              		.cfi_def_cfa_offset 12
 6977              		.cfi_offset 4, -12
 6978              		.cfi_offset 5, -8
 6979              		.cfi_offset 14, -4
 6980 0002 ADF50F7D 		sub	sp, sp, #572
 6981              	.LCFI83:
 6982              		.cfi_def_cfa_offset 584
 6983 0006 0190     		str	r0, [sp, #4]
 6984 0008 0D46     		mov	r5, r1
 6985 000a 1446     		mov	r4, r2
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6986              		.loc 1 3756 0
 6987 000c 0122     		movs	r2, #1
 6988              	.LVL967:
 6989 000e 01A9     		add	r1, sp, #4
 6990              	.LVL968:
 6991 0010 86A8     		add	r0, sp, #536
 6992              	.LVL969:
 6993 0012 FFF7FEFF 		bl	find_volume
 6994              	.LVL970:
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6995              		.loc 1 3757 0
 6996 0016 0346     		mov	r3, r0
 6997 0018 18B1     		cbz	r0, .L752
 6998              	.LVL971:
 6999              	.L749:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7000              		.loc 1 3777 0
 7001 001a 1846     		mov	r0, r3
 7002 001c 0DF50F7D 		add	sp, sp, #572
 7003              	.LCFI84:
 7004              		.cfi_remember_state
 7005              		.cfi_def_cfa_offset 12
 7006              		@ sp needed
 7007 0020 30BD     		pop	{r4, r5, pc}
 7008              	.LVL972:
 7009              	.L752:
 7010              	.LCFI85:
 7011              		.cfi_restore_state
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
ARM GAS  /tmp/ccktbAOa.s 			page 221


 7012              		.loc 1 3758 0
 7013 0022 03AB     		add	r3, sp, #12
 7014 0024 8C93     		str	r3, [sp, #560]
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7015              		.loc 1 3759 0
 7016 0026 0199     		ldr	r1, [sp, #4]
 7017 0028 06A8     		add	r0, sp, #24
 7018              	.LVL973:
 7019 002a FFF7FEFF 		bl	follow_path
 7020              	.LVL974:
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 7021              		.loc 1 3763 0
 7022 002e 0346     		mov	r3, r0
 7023 0030 0028     		cmp	r0, #0
 7024 0032 F2D1     		bne	.L749
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
 7025              		.loc 1 3764 0
 7026 0034 8B9B     		ldr	r3, [sp, #556]
 7027              	.LVL975:
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 7028              		.loc 1 3765 0
 7029 0036 73B1     		cbz	r3, .L750
 7030              	.LVL976:
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7031              		.loc 1 3769 0
 7032 0038 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 7033 003a 5540     		eors	r5, r5, r2
 7034 003c 2C40     		ands	r4, r4, r5
 7035              	.LVL977:
 7036 003e 04F02704 		and	r4, r4, #39
 7037 0042 5440     		eors	r4, r4, r2
 7038 0044 DC72     		strb	r4, [r3, #11]
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7039              		.loc 1 3770 0
 7040 0046 8698     		ldr	r0, [sp, #536]
 7041              	.LVL978:
 7042 0048 0123     		movs	r3, #1
 7043              	.LVL979:
 7044 004a 80F80432 		strb	r3, [r0, #516]
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7045              		.loc 1 3771 0
 7046 004e FFF7FEFF 		bl	sync_fs
 7047              	.LVL980:
 7048 0052 0346     		mov	r3, r0
 7049              	.LVL981:
 7050 0054 E1E7     		b	.L749
 7051              	.LVL982:
 7052              	.L750:
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
 7053              		.loc 1 3766 0
 7054 0056 0623     		movs	r3, #6
 7055              	.LVL983:
 7056 0058 DFE7     		b	.L749
 7057              		.cfi_endproc
 7058              	.LFE175:
 7060              		.section	.text.f_rename,"ax",%progbits
 7061              		.align	1
ARM GAS  /tmp/ccktbAOa.s 			page 222


 7062              		.global	f_rename
 7063              		.syntax unified
 7064              		.thumb
 7065              		.thumb_func
 7066              		.fpu fpv4-sp-d16
 7068              	f_rename:
 7069              	.LFB176:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7070              		.loc 1 3790 0
 7071              		.cfi_startproc
 7072              		@ args = 0, pretend = 0, frame = 1136
 7073              		@ frame_needed = 0, uses_anonymous_args = 0
 7074              	.LVL984:
 7075 0000 30B5     		push	{r4, r5, lr}
 7076              	.LCFI86:
 7077              		.cfi_def_cfa_offset 12
 7078              		.cfi_offset 4, -12
 7079              		.cfi_offset 5, -8
 7080              		.cfi_offset 14, -4
 7081 0002 ADF2744D 		subw	sp, sp, #1140
 7082              	.LCFI87:
 7083              		.cfi_def_cfa_offset 1152
 7084 0006 0190     		str	r0, [sp, #4]
 7085 0008 0091     		str	r1, [sp]
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7086              		.loc 1 3799 0
 7087 000a 0122     		movs	r2, #1
 7088 000c 01A9     		add	r1, sp, #4
 7089              	.LVL985:
 7090 000e 0DF58A60 		add	r0, sp, #1104
 7091              	.LVL986:
 7092 0012 FFF7FEFF 		bl	find_volume
 7093              	.LVL987:
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
 7094              		.loc 1 3800 0
 7095 0016 0346     		mov	r3, r0
 7096 0018 18B1     		cbz	r0, .L764
 7097              	.LVL988:
 7098              	.L762:
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7099              		.loc 1 3855 0
 7100 001a 1846     		mov	r0, r3
 7101 001c 0DF2744D 		addw	sp, sp, #1140
 7102              	.LCFI88:
 7103              		.cfi_remember_state
 7104              		.cfi_def_cfa_offset 12
 7105              		@ sp needed
 7106 0020 30BD     		pop	{r4, r5, pc}
 7107              	.LVL989:
 7108              	.L764:
 7109              	.LCFI89:
 7110              		.cfi_restore_state
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
 7111              		.loc 1 3801 0
 7112 0022 DDF85034 		ldr	r3, [sp, #1104]
 7113 0026 8C93     		str	r3, [sp, #560]
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
ARM GAS  /tmp/ccktbAOa.s 			page 223


 7114              		.loc 1 3802 0
 7115 0028 03AB     		add	r3, sp, #12
 7116 002a CDF86834 		str	r3, [sp, #1128]
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
 7117              		.loc 1 3803 0
 7118 002e 0199     		ldr	r1, [sp, #4]
 7119 0030 94A8     		add	r0, sp, #592
 7120              	.LVL990:
 7121 0032 FFF7FEFF 		bl	follow_path
 7122              	.LVL991:
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7123              		.loc 1 3807 0
 7124 0036 0346     		mov	r3, r0
 7125 0038 0028     		cmp	r0, #0
 7126 003a EED1     		bne	.L762
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7127              		.loc 1 3807 0 is_stmt 0 discriminator 1
 7128 003c 0221     		movs	r1, #2
 7129 003e 94A8     		add	r0, sp, #592
 7130              	.LVL992:
 7131 0040 FFF7FEFF 		bl	chk_lock
 7132              	.LVL993:
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
 7133              		.loc 1 3809 0 is_stmt 1 discriminator 1
 7134 0044 0346     		mov	r3, r0
 7135 0046 0028     		cmp	r0, #0
 7136 0048 E7D1     		bne	.L762
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
 7137              		.loc 1 3810 0
 7138 004a DDF86414 		ldr	r1, [sp, #1124]
 7139 004e 0029     		cmp	r1, #0
 7140 0050 71D0     		beq	.L758
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7141              		.loc 1 3813 0
 7142 0052 1522     		movs	r2, #21
 7143 0054 0B31     		adds	r1, r1, #11
 7144 0056 06A8     		add	r0, sp, #24
 7145              	.LVL994:
 7146 0058 FFF7FEFF 		bl	mem_cpy
 7147              	.LVL995:
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
 7148              		.loc 1 3814 0
 7149 005c 4FF40872 		mov	r2, #544
 7150 0060 94A9     		add	r1, sp, #592
 7151 0062 0CA8     		add	r0, sp, #48
 7152 0064 FFF7FEFF 		bl	mem_cpy
 7153              	.LVL996:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
 7154              		.loc 1 3815 0
 7155 0068 6846     		mov	r0, sp
 7156 006a FFF7FEFF 		bl	get_ldnumber
 7157              	.LVL997:
 7158 006e 0028     		cmp	r0, #0
 7159 0070 63DB     		blt	.L759
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 7160              		.loc 1 3816 0
 7161 0072 0099     		ldr	r1, [sp]
ARM GAS  /tmp/ccktbAOa.s 			page 224


 7162 0074 0CA8     		add	r0, sp, #48
 7163 0076 FFF7FEFF 		bl	follow_path
 7164              	.LVL998:
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 7165              		.loc 1 3819 0
 7166 007a 0346     		mov	r3, r0
 7167 007c 08B9     		cbnz	r0, .L765
 7168 007e 0823     		movs	r3, #8
 7169 0080 CBE7     		b	.L762
 7170              	.L765:
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7171              		.loc 1 3820 0
 7172 0082 0428     		cmp	r0, #4
 7173 0084 C9D1     		bne	.L762
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7174              		.loc 1 3821 0
 7175 0086 0CA8     		add	r0, sp, #48
 7176              	.LVL999:
 7177 0088 FFF7FEFF 		bl	dir_register
 7178              	.LVL1000:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
 7179              		.loc 1 3822 0
 7180 008c 0346     		mov	r3, r0
 7181 008e 0028     		cmp	r0, #0
 7182 0090 C3D1     		bne	.L762
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7183              		.loc 1 3824 0
 7184 0092 919C     		ldr	r4, [sp, #580]
 7185              	.LVL1001:
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7186              		.loc 1 3825 0
 7187 0094 1322     		movs	r2, #19
 7188 0096 0DF11A01 		add	r1, sp, #26
 7189 009a 04F10D00 		add	r0, r4, #13
 7190              	.LVL1002:
 7191 009e FFF7FEFF 		bl	mem_cpy
 7192              	.LVL1003:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
 7193              		.loc 1 3826 0
 7194 00a2 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 7195 00a6 43F02003 		orr	r3, r3, #32
 7196 00aa E372     		strb	r3, [r4, #11]
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
 7197              		.loc 1 3827 0
 7198 00ac DDF85054 		ldr	r5, [sp, #1104]
 7199 00b0 0123     		movs	r3, #1
 7200 00b2 85F80432 		strb	r3, [r5, #516]
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7201              		.loc 1 3828 0
 7202 00b6 E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 7203 00b8 13F0100F 		tst	r3, #16
 7204 00bc 1CD0     		beq	.L755
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7205              		.loc 1 3828 0 is_stmt 0 discriminator 1
 7206 00be 8E9B     		ldr	r3, [sp, #568]
 7207 00c0 DDF85824 		ldr	r2, [sp, #1112]
 7208 00c4 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccktbAOa.s 			page 225


 7209 00c6 17D0     		beq	.L755
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7210              		.loc 1 3829 0 is_stmt 1
 7211 00c8 2146     		mov	r1, r4
 7212 00ca 2846     		mov	r0, r5
 7213 00cc FFF7FEFF 		bl	ld_clust
 7214              	.LVL1004:
 7215 00d0 0146     		mov	r1, r0
 7216 00d2 2846     		mov	r0, r5
 7217 00d4 FFF7FEFF 		bl	clust2sect
 7218              	.LVL1005:
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7219              		.loc 1 3830 0
 7220 00d8 0146     		mov	r1, r0
 7221 00da 08B9     		cbnz	r0, .L766
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7222              		.loc 1 3831 0
 7223 00dc 0223     		movs	r3, #2
 7224              	.LVL1006:
 7225 00de 9CE7     		b	.L762
 7226              	.LVL1007:
 7227              	.L766:
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
 7228              		.loc 1 3833 0
 7229 00e0 2846     		mov	r0, r5
 7230              	.LVL1008:
 7231 00e2 FFF7FEFF 		bl	move_window
 7232              	.LVL1009:
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7233              		.loc 1 3835 0
 7234 00e6 0346     		mov	r3, r0
 7235 00e8 0028     		cmp	r0, #0
 7236 00ea 96D1     		bne	.L762
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7237              		.loc 1 3834 0 discriminator 1
 7238 00ec DDF85024 		ldr	r2, [sp, #1104]
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7239              		.loc 1 3835 0 discriminator 1
 7240 00f0 92F82130 		ldrb	r3, [r2, #33]	@ zero_extendqisi2
 7241 00f4 2E2B     		cmp	r3, #46
 7242 00f6 0BD0     		beq	.L767
 7243              	.LVL1010:
 7244              	.L755:
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
 7245              		.loc 1 3842 0
 7246 00f8 94A8     		add	r0, sp, #592
 7247 00fa FFF7FEFF 		bl	dir_remove
 7248              	.LVL1011:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
 7249              		.loc 1 3843 0
 7250 00fe 0346     		mov	r3, r0
 7251 0100 0028     		cmp	r0, #0
 7252 0102 8AD1     		bne	.L762
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7253              		.loc 1 3844 0
 7254 0104 DDF85004 		ldr	r0, [sp, #1104]
 7255              	.LVL1012:
ARM GAS  /tmp/ccktbAOa.s 			page 226


 7256 0108 FFF7FEFF 		bl	sync_fs
 7257              	.LVL1013:
 7258 010c 0346     		mov	r3, r0
 7259              	.LVL1014:
 7260 010e 84E7     		b	.L762
 7261              	.LVL1015:
 7262              	.L767:
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
 7263              		.loc 1 3836 0
 7264 0110 8E9B     		ldr	r3, [sp, #568]
 7265              	.LVL1016:
 7266              	.LBB72:
 7267              	.LBB73:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 7268              		.loc 1 1330 0
 7269 0112 82F83A30 		strb	r3, [r2, #58]
 7270 0116 C3F30721 		ubfx	r1, r3, #8, #8
 7271 011a 82F83B10 		strb	r1, [r2, #59]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7272              		.loc 1 1331 0
 7273 011e 1B0C     		lsrs	r3, r3, #16
 7274              	.LVL1017:
 7275 0120 82F83430 		strb	r3, [r2, #52]
 7276 0124 1B0A     		lsrs	r3, r3, #8
 7277 0126 82F83530 		strb	r3, [r2, #53]
 7278              	.LVL1018:
 7279              	.LBE73:
 7280              	.LBE72:
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7281              		.loc 1 3837 0
 7282 012a 0122     		movs	r2, #1
 7283              	.LVL1019:
 7284 012c DDF85034 		ldr	r3, [sp, #1104]
 7285 0130 83F80422 		strb	r2, [r3, #516]
 7286 0134 E0E7     		b	.L755
 7287              	.L758:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7288              		.loc 1 3811 0
 7289 0136 0423     		movs	r3, #4
 7290 0138 6FE7     		b	.L762
 7291              	.LVL1020:
 7292              	.L759:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 7293              		.loc 1 3818 0
 7294 013a 0B23     		movs	r3, #11
 7295 013c 6DE7     		b	.L762
 7296              		.cfi_endproc
 7297              	.LFE176:
 7299              		.section	.text.f_utime,"ax",%progbits
 7300              		.align	1
 7301              		.global	f_utime
 7302              		.syntax unified
 7303              		.thumb
 7304              		.thumb_func
 7305              		.fpu fpv4-sp-d16
 7307              	f_utime:
 7308              	.LFB177:
ARM GAS  /tmp/ccktbAOa.s 			page 227


3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7309              		.loc 1 3868 0
 7310              		.cfi_startproc
 7311              		@ args = 0, pretend = 0, frame = 568
 7312              		@ frame_needed = 0, uses_anonymous_args = 0
 7313              	.LVL1021:
 7314 0000 10B5     		push	{r4, lr}
 7315              	.LCFI90:
 7316              		.cfi_def_cfa_offset 8
 7317              		.cfi_offset 4, -8
 7318              		.cfi_offset 14, -4
 7319 0002 ADF50E7D 		sub	sp, sp, #568
 7320              	.LCFI91:
 7321              		.cfi_def_cfa_offset 576
 7322 0006 0190     		str	r0, [sp, #4]
 7323 0008 0C46     		mov	r4, r1
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7324              		.loc 1 3876 0
 7325 000a 0122     		movs	r2, #1
 7326 000c 01A9     		add	r1, sp, #4
 7327              	.LVL1022:
 7328 000e 86A8     		add	r0, sp, #536
 7329              	.LVL1023:
 7330 0010 FFF7FEFF 		bl	find_volume
 7331              	.LVL1024:
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 7332              		.loc 1 3877 0
 7333 0014 0346     		mov	r3, r0
 7334 0016 18B1     		cbz	r0, .L772
 7335              	.LVL1025:
 7336              	.L769:
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7337              		.loc 1 3897 0
 7338 0018 1846     		mov	r0, r3
 7339 001a 0DF50E7D 		add	sp, sp, #568
 7340              	.LCFI92:
 7341              		.cfi_remember_state
 7342              		.cfi_def_cfa_offset 8
 7343              		@ sp needed
 7344 001e 10BD     		pop	{r4, pc}
 7345              	.LVL1026:
 7346              	.L772:
 7347              	.LCFI93:
 7348              		.cfi_restore_state
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 7349              		.loc 1 3878 0
 7350 0020 03AB     		add	r3, sp, #12
 7351 0022 8C93     		str	r3, [sp, #560]
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7352              		.loc 1 3879 0
 7353 0024 0199     		ldr	r1, [sp, #4]
 7354 0026 06A8     		add	r0, sp, #24
 7355              	.LVL1027:
 7356 0028 FFF7FEFF 		bl	follow_path
 7357              	.LVL1028:
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 7358              		.loc 1 3883 0
ARM GAS  /tmp/ccktbAOa.s 			page 228


 7359 002c 0346     		mov	r3, r0
 7360 002e 0028     		cmp	r0, #0
 7361 0030 F2D1     		bne	.L769
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
 7362              		.loc 1 3884 0
 7363 0032 8B9B     		ldr	r3, [sp, #556]
 7364              	.LVL1029:
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 7365              		.loc 1 3885 0
 7366 0034 8BB1     		cbz	r3, .L770
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
 7367              		.loc 1 3888 0
 7368 0036 E288     		ldrh	r2, [r4, #6]
 7369 0038 9A75     		strb	r2, [r3, #22]
 7370 003a E288     		ldrh	r2, [r4, #6]
 7371 003c 120A     		lsrs	r2, r2, #8
 7372 003e DA75     		strb	r2, [r3, #23]
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7373              		.loc 1 3889 0
 7374 0040 A288     		ldrh	r2, [r4, #4]
 7375 0042 1A76     		strb	r2, [r3, #24]
 7376 0044 A288     		ldrh	r2, [r4, #4]
 7377 0046 120A     		lsrs	r2, r2, #8
 7378 0048 5A76     		strb	r2, [r3, #25]
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7379              		.loc 1 3890 0
 7380 004a 8698     		ldr	r0, [sp, #536]
 7381              	.LVL1030:
 7382 004c 0123     		movs	r3, #1
 7383              	.LVL1031:
 7384 004e 80F80432 		strb	r3, [r0, #516]
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7385              		.loc 1 3891 0
 7386 0052 FFF7FEFF 		bl	sync_fs
 7387              	.LVL1032:
 7388 0056 0346     		mov	r3, r0
 7389              	.LVL1033:
 7390 0058 DEE7     		b	.L769
 7391              	.LVL1034:
 7392              	.L770:
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
 7393              		.loc 1 3886 0
 7394 005a 0623     		movs	r3, #6
 7395              	.LVL1035:
 7396 005c DCE7     		b	.L769
 7397              		.cfi_endproc
 7398              	.LFE177:
 7400              		.section	.text.f_mkfs,"ax",%progbits
 7401              		.align	1
 7402              		.global	f_mkfs
 7403              		.syntax unified
 7404              		.thumb
 7405              		.thumb_func
 7406              		.fpu fpv4-sp-d16
 7408              	f_mkfs:
 7409              	.LFB178:
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
ARM GAS  /tmp/ccktbAOa.s 			page 229


 7410              		.loc 1 4143 0
 7411              		.cfi_startproc
 7412              		@ args = 0, pretend = 0, frame = 32
 7413              		@ frame_needed = 0, uses_anonymous_args = 0
 7414              	.LVL1036:
 7415 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7416              	.LCFI94:
 7417              		.cfi_def_cfa_offset 36
 7418              		.cfi_offset 4, -36
 7419              		.cfi_offset 5, -32
 7420              		.cfi_offset 6, -28
 7421              		.cfi_offset 7, -24
 7422              		.cfi_offset 8, -20
 7423              		.cfi_offset 9, -16
 7424              		.cfi_offset 10, -12
 7425              		.cfi_offset 11, -8
 7426              		.cfi_offset 14, -4
 7427 0004 89B0     		sub	sp, sp, #36
 7428              	.LCFI95:
 7429              		.cfi_def_cfa_offset 72
 7430 0006 0590     		str	r0, [sp, #20]
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
 7431              		.loc 1 4160 0
 7432 0008 0129     		cmp	r1, #1
 7433 000a 88BF     		it	hi
 7434 000c 1320     		movhi	r0, #19
 7435              	.LVL1037:
 7436 000e 02D9     		bls	.L841
 7437              	.LVL1038:
 7438              	.L837:
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7439              		.loc 1 4375 0
 7440 0010 09B0     		add	sp, sp, #36
 7441              	.LCFI96:
 7442              		.cfi_remember_state
 7443              		.cfi_def_cfa_offset 36
 7444              		@ sp needed
 7445 0012 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7446              	.LVL1039:
 7447              	.L841:
 7448              	.LCFI97:
 7449              		.cfi_restore_state
 7450 0016 0C46     		mov	r4, r1
 7451 0018 1746     		mov	r7, r2
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7452              		.loc 1 4161 0
 7453 001a 05A8     		add	r0, sp, #20
 7454              	.LVL1040:
 7455 001c FFF7FEFF 		bl	get_ldnumber
 7456              	.LVL1041:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 7457              		.loc 1 4162 0
 7458 0020 0028     		cmp	r0, #0
 7459 0022 C0F28882 		blt	.L810
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
 7460              		.loc 1 4163 0
 7461 0026 D34B     		ldr	r3, .L848
ARM GAS  /tmp/ccktbAOa.s 			page 230


 7462 0028 53F82050 		ldr	r5, [r3, r0, lsl #2]
 7463              	.LVL1042:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 7464              		.loc 1 4164 0
 7465 002c 002D     		cmp	r5, #0
 7466 002e 00F08482 		beq	.L811
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7467              		.loc 1 4165 0
 7468 0032 0023     		movs	r3, #0
 7469 0034 85F80032 		strb	r3, [r5, #512]
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
 7470              		.loc 1 4166 0
 7471 0038 C6B2     		uxtb	r6, r0
 7472              	.LVL1043:
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7473              		.loc 1 4170 0
 7474 003a 3046     		mov	r0, r6
 7475              	.LVL1044:
 7476 003c FFF7FEFF 		bl	disk_initialize
 7477              	.LVL1045:
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7478              		.loc 1 4171 0
 7479 0040 10F0010F 		tst	r0, #1
 7480 0044 01D0     		beq	.L842
 7481 0046 0320     		movs	r0, #3
 7482              	.LVL1046:
 7483 0048 E2E7     		b	.L837
 7484              	.LVL1047:
 7485              	.L842:
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 7486              		.loc 1 4172 0
 7487 004a 10F0040F 		tst	r0, #4
 7488 004e 01D0     		beq	.L843
 7489 0050 0A20     		movs	r0, #10
 7490              	.LVL1048:
 7491 0052 DDE7     		b	.L837
 7492              	.LVL1049:
 7493              	.L843:
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7494              		.loc 1 4187 0
 7495 0054 06AA     		add	r2, sp, #24
 7496 0056 0121     		movs	r1, #1
 7497 0058 3046     		mov	r0, r6
 7498              	.LVL1050:
 7499 005a FFF7FEFF 		bl	disk_ioctl
 7500              	.LVL1051:
 7501 005e 0028     		cmp	r0, #0
 7502 0060 40F06D82 		bne	.L814
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7503              		.loc 1 4187 0 is_stmt 0 discriminator 1
 7504 0064 069A     		ldr	r2, [sp, #24]
 7505 0066 7F2A     		cmp	r2, #127
 7506 0068 40F26B82 		bls	.L815
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 7507              		.loc 1 4189 0 is_stmt 1
 7508 006c 002C     		cmp	r4, #0
 7509 006e 14BF     		ite	ne
ARM GAS  /tmp/ccktbAOa.s 			page 231


 7510 0070 4FF00009 		movne	r9, #0
 7511 0074 4FF03F09 		moveq	r9, #63
 7512              	.LVL1052:
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7513              		.loc 1 4190 0
 7514 0078 A2EB0902 		sub	r2, r2, r9
 7515 007c 0692     		str	r2, [sp, #24]
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 7516              		.loc 1 4193 0
 7517 007e 7B1E     		subs	r3, r7, #1
 7518 0080 3B42     		tst	r3, r7
 7519 0082 04D1     		bne	.L776
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
 7520              		.loc 1 4194 0
 7521 0084 1FB1     		cbz	r7, .L776
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 7522              		.loc 1 4199 0
 7523 0086 B7F5007F 		cmp	r7, #512
 7524 008a 14D2     		bcs	.L778
 7525 008c 17E0     		b	.L781
 7526              	.L776:
 7527              	.LVL1053:
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
 7528              		.loc 1 4195 0
 7529 008e 4FF4FA61 		mov	r1, #2000
 7530 0092 B2FBF1F1 		udiv	r1, r2, r1
 7531              	.LVL1054:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7532              		.loc 1 4196 0
 7533 0096 B1F5806F 		cmp	r1, #1024
 7534 009a 27D2     		bcs	.L817
 7535 009c B648     		ldr	r0, .L848+4
 7536 009e 0023     		movs	r3, #0
 7537              	.LVL1055:
 7538              	.L779:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7539              		.loc 1 4196 0 is_stmt 0 discriminator 3
 7540 00a0 0133     		adds	r3, r3, #1
 7541              	.LVL1056:
 7542 00a2 30F8027F 		ldrh	r7, [r0, #2]!
 7543 00a6 B942     		cmp	r1, r7
 7544 00a8 FAD3     		bcc	.L779
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7545              		.loc 1 4197 0 is_stmt 1
 7546 00aa B449     		ldr	r1, .L848+8
 7547              	.LVL1057:
 7548 00ac 31F81370 		ldrh	r7, [r1, r3, lsl #1]
 7549              	.LVL1058:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 7550              		.loc 1 4199 0
 7551 00b0 B7F5007F 		cmp	r7, #512
 7552 00b4 00D3     		bcc	.L780
 7553              	.LVL1059:
 7554              	.L778:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 7555              		.loc 1 4199 0 is_stmt 0 discriminator 1
 7556 00b6 7F0A     		lsrs	r7, r7, #9
ARM GAS  /tmp/ccktbAOa.s 			page 232


 7557              	.LVL1060:
 7558              	.L780:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
 7559              		.loc 1 4200 0 is_stmt 1
 7560 00b8 002F     		cmp	r7, #0
 7561 00ba 08BF     		it	eq
 7562 00bc 0127     		moveq	r7, #1
 7563              	.LVL1061:
 7564              	.L781:
 7565 00be 802F     		cmp	r7, #128
 7566 00c0 28BF     		it	cs
 7567 00c2 8027     		movcs	r7, #128
 7568              	.LVL1062:
 7569 00c4 0197     		str	r7, [sp, #4]
 7570              	.LVL1063:
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 7571              		.loc 1 4204 0
 7572 00c6 B2FBF7F3 		udiv	r3, r2, r7
 7573              	.LVL1064:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 7574              		.loc 1 4206 0
 7575 00ca 40F6F571 		movw	r1, #4085
 7576 00ce 8B42     		cmp	r3, r1
 7577 00d0 00F24582 		bhi	.L782
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7578              		.loc 1 4207 0
 7579 00d4 4FF6F571 		movw	r1, #65525
 7580 00d8 8B42     		cmp	r3, r1
 7581 00da 0AD8     		bhi	.L805
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 7582              		.loc 1 4215 0 discriminator 1
 7583 00dc 03EB4303 		add	r3, r3, r3, lsl #1
 7584              	.LVL1065:
 7585 00e0 0133     		adds	r3, r3, #1
 7586 00e2 5B08     		lsrs	r3, r3, #1
 7587 00e4 0333     		adds	r3, r3, #3
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
 7588              		.loc 1 4205 0 discriminator 1
 7589 00e6 4FF00108 		mov	r8, #1
 7590 00ea 41E2     		b	.L785
 7591              	.LVL1066:
 7592              	.L817:
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7593              		.loc 1 4197 0
 7594 00ec 4FF40047 		mov	r7, #32768
 7595 00f0 E1E7     		b	.L778
 7596              	.LVL1067:
 7597              	.L805:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
 7598              		.loc 1 4211 0
 7599 00f2 9F00     		lsls	r7, r3, #2
 7600              	.LVL1068:
 7601 00f4 07F20727 		addw	r7, r7, #519
 7602 00f8 7F0A     		lsrs	r7, r7, #9
 7603              	.LVL1069:
 7604 00fa 4FF00308 		mov	r8, #3
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
ARM GAS  /tmp/ccktbAOa.s 			page 233


 7605              		.loc 1 4213 0
 7606 00fe 0023     		movs	r3, #0
 7607              	.LVL1070:
 7608 0100 0093     		str	r3, [sp]
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
 7609              		.loc 1 4212 0
 7610 0102 4FF0200A 		mov	r10, #32
 7611 0106 3AE2     		b	.L784
 7612              	.LVL1071:
 7613              	.L847:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7614              		.loc 1 4226 0
 7615 0108 07AA     		add	r2, sp, #28
 7616              	.LVL1072:
 7617 010a 0321     		movs	r1, #3
 7618              	.LVL1073:
 7619 010c 3046     		mov	r0, r6
 7620 010e FFF7FEFF 		bl	disk_ioctl
 7621              	.LVL1074:
 7622 0112 20B9     		cbnz	r0, .L786
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7623              		.loc 1 4226 0 is_stmt 0 discriminator 2
 7624 0114 079B     		ldr	r3, [sp, #28]
 7625 0116 013B     		subs	r3, r3, #1
 7626 0118 B3F5004F 		cmp	r3, #32768
 7627 011c 01D3     		bcc	.L787
 7628              	.L786:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 7629              		.loc 1 4226 0 discriminator 5
 7630 011e 0123     		movs	r3, #1
 7631 0120 0793     		str	r3, [sp, #28]
 7632              	.L787:
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
 7633              		.loc 1 4227 0 is_stmt 1
 7634 0122 079A     		ldr	r2, [sp, #28]
 7635 0124 531E     		subs	r3, r2, #1
 7636 0126 5B44     		add	r3, r3, fp
 7637 0128 5242     		negs	r2, r2
 7638 012a 1340     		ands	r3, r3, r2
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
 7639              		.loc 1 4228 0
 7640 012c A3EB0B03 		sub	r3, r3, fp
 7641 0130 0793     		str	r3, [sp, #28]
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
 7642              		.loc 1 4229 0
 7643 0132 B8F1030F 		cmp	r8, #3
 7644 0136 19D0     		beq	.L844
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7645              		.loc 1 4233 0
 7646 0138 1F44     		add	r7, r7, r3
 7647              	.LVL1075:
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 7648              		.loc 1 4237 0
 7649 013a 069A     		ldr	r2, [sp, #24]
 7650 013c A2EB0A03 		sub	r3, r2, r10
 7651 0140 DB1B     		subs	r3, r3, r7
 7652 0142 0099     		ldr	r1, [sp]
ARM GAS  /tmp/ccktbAOa.s 			page 234


 7653 0144 5B1A     		subs	r3, r3, r1
 7654 0146 0199     		ldr	r1, [sp, #4]
 7655 0148 B3FBF1F3 		udiv	r3, r3, r1
 7656 014c 0393     		str	r3, [sp, #12]
 7657              	.LVL1076:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 7658              		.loc 1 4238 0
 7659 014e B8F1020F 		cmp	r8, #2
 7660 0152 00F0F180 		beq	.L845
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 7661              		.loc 1 4246 0
 7662 0156 B8F1010F 		cmp	r8, #1
 7663 015a 40F0F380 		bne	.L791
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7664              		.loc 1 4249 0 discriminator 1
 7665 015e B2F5803F 		cmp	r2, #65536
 7666 0162 34BF     		ite	cc
 7667 0164 C346     		movcc	fp, r8
 7668              	.LVL1077:
 7669 0166 4FF0060B 		movcs	fp, #6
 7670 016a 15E0     		b	.L789
 7671              	.LVL1078:
 7672              	.L844:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
 7673              		.loc 1 4230 0
 7674 016c 9A44     		add	r10, r10, r3
 7675              	.LVL1079:
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
 7676              		.loc 1 4231 0
 7677 016e 029A     		ldr	r2, [sp, #8]
 7678 0170 1A44     		add	r2, r2, r3
 7679 0172 0292     		str	r2, [sp, #8]
 7680              	.LVL1080:
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 7681              		.loc 1 4237 0
 7682 0174 069B     		ldr	r3, [sp, #24]
 7683 0176 A3EB0A03 		sub	r3, r3, r10
 7684 017a DB1B     		subs	r3, r3, r7
 7685 017c 009A     		ldr	r2, [sp]
 7686              	.LVL1081:
 7687 017e 9B1A     		subs	r3, r3, r2
 7688 0180 019A     		ldr	r2, [sp, #4]
 7689 0182 B3FBF2F3 		udiv	r3, r3, r2
 7690 0186 1A46     		mov	r2, r3
 7691 0188 0393     		str	r3, [sp, #12]
 7692              	.LVL1082:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 7693              		.loc 1 4239 0
 7694 018a 4FF6F573 		movw	r3, #65525
 7695 018e 9A42     		cmp	r2, r3
 7696 0190 40F2D981 		bls	.L819
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7697              		.loc 1 4244 0
 7698 0194 4FF00C0B 		mov	fp, #12
 7699              	.LVL1083:
 7700              	.L789:
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
ARM GAS  /tmp/ccktbAOa.s 			page 235


 7701              		.loc 1 4261 0
 7702 0198 002C     		cmp	r4, #0
 7703 019a 40F0DB80 		bne	.L823
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
 7704              		.loc 1 4264 0
 7705 019e 4FF40072 		mov	r2, #512
 7706 01a2 0021     		movs	r1, #0
 7707 01a4 2846     		mov	r0, r5
 7708 01a6 FFF7FEFF 		bl	mem_set
 7709              	.LVL1084:
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
 7710              		.loc 1 4266 0
 7711 01aa 0123     		movs	r3, #1
 7712 01ac 85F8BF31 		strb	r3, [r5, #447]
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
 7713              		.loc 1 4267 0
 7714 01b0 85F8C031 		strb	r3, [r5, #448]
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
 7715              		.loc 1 4268 0
 7716 01b4 0022     		movs	r2, #0
 7717 01b6 85F8C121 		strb	r2, [r5, #449]
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
 7718              		.loc 1 4269 0
 7719 01ba 85F8C2B1 		strb	fp, [r5, #450]
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
 7720              		.loc 1 4270 0
 7721 01be FE21     		movs	r1, #254
 7722 01c0 85F8C311 		strb	r1, [r5, #451]
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
 7723              		.loc 1 4271 0
 7724 01c4 0699     		ldr	r1, [sp, #24]
 7725 01c6 09EB0100 		add	r0, r9, r1
 7726 01ca 43F6C164 		movw	r4, #16065
 7727 01ce B0FBF4F0 		udiv	r0, r0, r4
 7728 01d2 0790     		str	r0, [sp, #28]
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
 7729              		.loc 1 4272 0
 7730 01d4 8408     		lsrs	r4, r0, #2
 7731 01d6 44F03F04 		orr	r4, r4, #63
 7732 01da 85F8C441 		strb	r4, [r5, #452]
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
 7733              		.loc 1 4273 0
 7734 01de 85F8C501 		strb	r0, [r5, #453]
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
 7735              		.loc 1 4274 0
 7736 01e2 3F20     		movs	r0, #63
 7737 01e4 85F8C601 		strb	r0, [r5, #454]
 7738 01e8 85F8C721 		strb	r2, [r5, #455]
 7739 01ec 85F8C821 		strb	r2, [r5, #456]
 7740 01f0 85F8C921 		strb	r2, [r5, #457]
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
 7741              		.loc 1 4275 0
 7742 01f4 85F8CA11 		strb	r1, [r5, #458]
 7743 01f8 C1F30720 		ubfx	r0, r1, #8, #8
 7744 01fc 85F8CB01 		strb	r0, [r5, #459]
 7745 0200 080C     		lsrs	r0, r1, #16
 7746 0202 85F8CC01 		strb	r0, [r5, #460]
ARM GAS  /tmp/ccktbAOa.s 			page 236


 7747 0206 090E     		lsrs	r1, r1, #24
 7748 0208 85F8CD11 		strb	r1, [r5, #461]
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
 7749              		.loc 1 4276 0
 7750 020c 5521     		movs	r1, #85
 7751 020e 85F8FE11 		strb	r1, [r5, #510]
 7752 0212 AA21     		movs	r1, #170
 7753 0214 85F8FF11 		strb	r1, [r5, #511]
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 7754              		.loc 1 4277 0
 7755 0218 2946     		mov	r1, r5
 7756 021a 3046     		mov	r0, r6
 7757 021c FFF7FEFF 		bl	disk_write
 7758              	.LVL1085:
 7759 0220 0028     		cmp	r0, #0
 7760 0222 40F09481 		bne	.L824
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7761              		.loc 1 4279 0
 7762 0226 4FF0F80B 		mov	fp, #248
 7763              	.LVL1086:
 7764              	.L792:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
 7765              		.loc 1 4284 0
 7766 022a 0495     		str	r5, [sp, #16]
 7767              	.LVL1087:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
 7768              		.loc 1 4285 0
 7769 022c 4FF40072 		mov	r2, #512
 7770 0230 0021     		movs	r1, #0
 7771 0232 2846     		mov	r0, r5
 7772 0234 FFF7FEFF 		bl	mem_set
 7773              	.LVL1088:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
 7774              		.loc 1 4286 0
 7775 0238 0B22     		movs	r2, #11
 7776 023a 5149     		ldr	r1, .L848+12
 7777 023c 2846     		mov	r0, r5
 7778 023e FFF7FEFF 		bl	mem_cpy
 7779              	.LVL1089:
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
 7780              		.loc 1 4288 0
 7781 0242 0023     		movs	r3, #0
 7782 0244 EB72     		strb	r3, [r5, #11]
 7783 0246 0223     		movs	r3, #2
 7784 0248 2B73     		strb	r3, [r5, #12]
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
 7785              		.loc 1 4289 0
 7786 024a 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 7787 024e 6B73     		strb	r3, [r5, #13]
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
 7788              		.loc 1 4290 0
 7789 0250 85F80EA0 		strb	r10, [r5, #14]
 7790 0254 CAF3072A 		ubfx	r10, r10, #8, #8
 7791              	.LVL1090:
 7792 0258 85F80FA0 		strb	r10, [r5, #15]
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
 7793              		.loc 1 4291 0
ARM GAS  /tmp/ccktbAOa.s 			page 237


 7794 025c 0123     		movs	r3, #1
 7795 025e 2B74     		strb	r3, [r5, #16]
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 7796              		.loc 1 4292 0
 7797 0260 B8F1030F 		cmp	r8, #3
 7798              	.LVL1091:
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
 7799              		.loc 1 4293 0
 7800 0264 4FF00003 		mov	r3, #0
 7801 0268 6B74     		strb	r3, [r5, #17]
 7802 026a 18BF     		it	ne
 7803 026c 0223     		movne	r3, #2
 7804 026e AB74     		strb	r3, [r5, #18]
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
 7805              		.loc 1 4294 0
 7806 0270 069B     		ldr	r3, [sp, #24]
 7807 0272 B3F5803F 		cmp	r3, #65536
 7808              	.LVL1092:
 7809 0276 70D2     		bcs	.L794
 7810              	.LVL1093:
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7811              		.loc 1 4295 0
 7812 0278 EB74     		strb	r3, [r5, #19]
 7813 027a C3F30723 		ubfx	r3, r3, #8, #8
 7814 027e 2B75     		strb	r3, [r5, #20]
 7815              	.L795:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
 7816              		.loc 1 4299 0
 7817 0280 85F815B0 		strb	fp, [r5, #21]
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
 7818              		.loc 1 4300 0
 7819 0284 3F23     		movs	r3, #63
 7820 0286 2B76     		strb	r3, [r5, #24]
 7821 0288 0023     		movs	r3, #0
 7822 028a 6B76     		strb	r3, [r5, #25]
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
 7823              		.loc 1 4301 0
 7824 028c FF22     		movs	r2, #255
 7825 028e AA76     		strb	r2, [r5, #26]
 7826 0290 EB76     		strb	r3, [r5, #27]
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
 7827              		.loc 1 4302 0
 7828 0292 85F81C90 		strb	r9, [r5, #28]
 7829 0296 6B77     		strb	r3, [r5, #29]
 7830 0298 AB77     		strb	r3, [r5, #30]
 7831 029a EB77     		strb	r3, [r5, #31]
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 7832              		.loc 1 4303 0
 7833 029c FFF7FEFF 		bl	get_fattime
 7834              	.LVL1094:
 7835 02a0 0790     		str	r0, [sp, #28]
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
 7836              		.loc 1 4304 0
 7837 02a2 B8F1030F 		cmp	r8, #3
 7838 02a6 6FD1     		bne	.L796
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
 7839              		.loc 1 4305 0
ARM GAS  /tmp/ccktbAOa.s 			page 238


 7840 02a8 85F84300 		strb	r0, [r5, #67]
 7841 02ac C0F30723 		ubfx	r3, r0, #8, #8
 7842 02b0 85F84430 		strb	r3, [r5, #68]
 7843 02b4 030C     		lsrs	r3, r0, #16
 7844 02b6 85F84530 		strb	r3, [r5, #69]
 7845 02ba 000E     		lsrs	r0, r0, #24
 7846 02bc 85F84600 		strb	r0, [r5, #70]
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
 7847              		.loc 1 4306 0
 7848 02c0 85F82470 		strb	r7, [r5, #36]
 7849 02c4 C7F30723 		ubfx	r3, r7, #8, #8
 7850 02c8 85F82530 		strb	r3, [r5, #37]
 7851 02cc 3B0C     		lsrs	r3, r7, #16
 7852 02ce 85F82630 		strb	r3, [r5, #38]
 7853 02d2 3B0E     		lsrs	r3, r7, #24
 7854 02d4 85F82730 		strb	r3, [r5, #39]
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
 7855              		.loc 1 4307 0
 7856 02d8 0223     		movs	r3, #2
 7857 02da 85F82C30 		strb	r3, [r5, #44]
 7858 02de 0023     		movs	r3, #0
 7859 02e0 85F82D30 		strb	r3, [r5, #45]
 7860 02e4 85F82E30 		strb	r3, [r5, #46]
 7861 02e8 85F82F30 		strb	r3, [r5, #47]
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
 7862              		.loc 1 4308 0
 7863 02ec 0124     		movs	r4, #1
 7864 02ee 85F83040 		strb	r4, [r5, #48]
 7865 02f2 85F83130 		strb	r3, [r5, #49]
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
 7866              		.loc 1 4309 0
 7867 02f6 0622     		movs	r2, #6
 7868 02f8 85F83220 		strb	r2, [r5, #50]
 7869 02fc 85F83330 		strb	r3, [r5, #51]
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
 7870              		.loc 1 4310 0
 7871 0300 8023     		movs	r3, #128
 7872 0302 85F84030 		strb	r3, [r5, #64]
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 7873              		.loc 1 4311 0
 7874 0306 2923     		movs	r3, #41
 7875 0308 85F84230 		strb	r3, [r5, #66]
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 7876              		.loc 1 4312 0
 7877 030c 1322     		movs	r2, #19
 7878 030e 1D49     		ldr	r1, .L848+16
 7879 0310 05F14700 		add	r0, r5, #71
 7880 0314 FFF7FEFF 		bl	mem_cpy
 7881              	.LVL1095:
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 7882              		.loc 1 4320 0
 7883 0318 5523     		movs	r3, #85
 7884 031a 85F8FE31 		strb	r3, [r5, #510]
 7885 031e AA23     		movs	r3, #170
 7886 0320 85F8FF31 		strb	r3, [r5, #511]
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 7887              		.loc 1 4321 0
ARM GAS  /tmp/ccktbAOa.s 			page 239


 7888 0324 2346     		mov	r3, r4
 7889 0326 4A46     		mov	r2, r9
 7890 0328 2946     		mov	r1, r5
 7891 032a 3046     		mov	r0, r6
 7892 032c FFF7FEFF 		bl	disk_write
 7893              	.LVL1096:
 7894 0330 0028     		cmp	r0, #0
 7895 0332 56D0     		beq	.L835
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
 7896              		.loc 1 4322 0
 7897 0334 0120     		movs	r0, #1
 7898 0336 6BE6     		b	.L837
 7899              	.LVL1097:
 7900              	.L845:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 7901              		.loc 1 4238 0 discriminator 1
 7902 0338 40F6F573 		movw	r3, #4085
 7903              	.LVL1098:
 7904 033c 0399     		ldr	r1, [sp, #12]
 7905 033e 9942     		cmp	r1, r3
 7906 0340 40F20381 		bls	.L820
 7907              	.L791:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 7908              		.loc 1 4249 0
 7909 0344 B2F5803F 		cmp	r2, #65536
 7910 0348 34BF     		ite	cc
 7911 034a 4FF0040B 		movcc	fp, #4
 7912              	.LVL1099:
 7913 034e 4FF0060B 		movcs	fp, #6
 7914 0352 21E7     		b	.L789
 7915              	.LVL1100:
 7916              	.L823:
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
 7917              		.loc 1 4262 0
 7918 0354 4FF0F00B 		mov	fp, #240
 7919              	.LVL1101:
 7920 0358 67E7     		b	.L792
 7921              	.LVL1102:
 7922              	.L794:
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7923              		.loc 1 4297 0
 7924 035a 85F82030 		strb	r3, [r5, #32]
 7925 035e C3F30722 		ubfx	r2, r3, #8, #8
 7926 0362 85F82120 		strb	r2, [r5, #33]
 7927 0366 1A0C     		lsrs	r2, r3, #16
 7928 0368 85F82220 		strb	r2, [r5, #34]
 7929 036c 1B0E     		lsrs	r3, r3, #24
 7930 036e 85F82330 		strb	r3, [r5, #35]
 7931 0372 85E7     		b	.L795
 7932              	.L849:
 7933              		.align	2
 7934              	.L848:
 7935 0374 00000000 		.word	.LANCHOR1
 7936 0378 00000000 		.word	.LANCHOR4
 7937 037c 00000000 		.word	.LANCHOR5
 7938 0380 00000000 		.word	.LC1
 7939 0384 0C000000 		.word	.LC2
ARM GAS  /tmp/ccktbAOa.s 			page 240


 7940              	.L796:
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
 7941              		.loc 1 4314 0
 7942 0388 85F82700 		strb	r0, [r5, #39]
 7943 038c C0F30723 		ubfx	r3, r0, #8, #8
 7944 0390 85F82830 		strb	r3, [r5, #40]
 7945 0394 030C     		lsrs	r3, r0, #16
 7946 0396 85F82930 		strb	r3, [r5, #41]
 7947 039a 000E     		lsrs	r0, r0, #24
 7948 039c 85F82A00 		strb	r0, [r5, #42]
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
 7949              		.loc 1 4315 0
 7950 03a0 AF75     		strb	r7, [r5, #22]
 7951 03a2 C7F30723 		ubfx	r3, r7, #8, #8
 7952 03a6 EB75     		strb	r3, [r5, #23]
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
 7953              		.loc 1 4316 0
 7954 03a8 8023     		movs	r3, #128
 7955 03aa 85F82430 		strb	r3, [r5, #36]
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 7956              		.loc 1 4317 0
 7957 03ae 2923     		movs	r3, #41
 7958 03b0 85F82630 		strb	r3, [r5, #38]
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7959              		.loc 1 4318 0
 7960 03b4 1322     		movs	r2, #19
 7961 03b6 8749     		ldr	r1, .L850
 7962 03b8 05F12B00 		add	r0, r5, #43
 7963 03bc FFF7FEFF 		bl	mem_cpy
 7964              	.LVL1103:
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 7965              		.loc 1 4320 0
 7966 03c0 5523     		movs	r3, #85
 7967 03c2 85F8FE31 		strb	r3, [r5, #510]
 7968 03c6 AA23     		movs	r3, #170
 7969 03c8 85F8FF31 		strb	r3, [r5, #511]
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 7970              		.loc 1 4321 0
 7971 03cc 0123     		movs	r3, #1
 7972 03ce 4A46     		mov	r2, r9
 7973 03d0 2946     		mov	r1, r5
 7974 03d2 3046     		mov	r0, r6
 7975 03d4 FFF7FEFF 		bl	disk_write
 7976              	.LVL1104:
 7977 03d8 0028     		cmp	r0, #0
 7978 03da 00F0E080 		beq	.L836
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
 7979              		.loc 1 4322 0
 7980 03de 0120     		movs	r0, #1
 7981 03e0 16E6     		b	.L837
 7982              	.L835:
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7983              		.loc 1 4324 0
 7984 03e2 0123     		movs	r3, #1
 7985 03e4 09F10602 		add	r2, r9, #6
 7986 03e8 2946     		mov	r1, r5
 7987 03ea 3046     		mov	r0, r6
ARM GAS  /tmp/ccktbAOa.s 			page 241


 7988 03ec FFF7FEFF 		bl	disk_write
 7989              	.LVL1105:
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
 7990              		.loc 1 4329 0
 7991 03f0 4FF40072 		mov	r2, #512
 7992 03f4 0021     		movs	r1, #0
 7993 03f6 2846     		mov	r0, r5
 7994 03f8 FFF7FEFF 		bl	mem_set
 7995              	.LVL1106:
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
 7996              		.loc 1 4335 0
 7997 03fc 6BF0FF03 		orn	r3, fp, #255
 7998 0400 0793     		str	r3, [sp, #28]
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
 7999              		.loc 1 4336 0
 8000 0402 2B70     		strb	r3, [r5]
 8001 0404 BDF81C30 		ldrh	r3, [sp, #28]
 8002 0408 1B0A     		lsrs	r3, r3, #8
 8003 040a 6B70     		strb	r3, [r5, #1]
 8004 040c BDF81E30 		ldrh	r3, [sp, #30]
 8005 0410 AB70     		strb	r3, [r5, #2]
 8006 0412 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 8007 0416 EB70     		strb	r3, [r5, #3]
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
 8008              		.loc 1 4337 0
 8009 0418 FF23     		movs	r3, #255
 8010 041a 2B71     		strb	r3, [r5, #4]
 8011 041c 6B71     		strb	r3, [r5, #5]
 8012 041e AB71     		strb	r3, [r5, #6]
 8013 0420 EB71     		strb	r3, [r5, #7]
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8014              		.loc 1 4338 0
 8015 0422 2B72     		strb	r3, [r5, #8]
 8016 0424 6B72     		strb	r3, [r5, #9]
 8017 0426 AB72     		strb	r3, [r5, #10]
 8018 0428 0F23     		movs	r3, #15
 8019 042a EB72     		strb	r3, [r5, #11]
 8020              	.L799:
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8021              		.loc 1 4340 0
 8022 042c 029A     		ldr	r2, [sp, #8]
 8023 042e 541C     		adds	r4, r2, #1
 8024              	.LVL1107:
 8025 0430 0123     		movs	r3, #1
 8026 0432 2946     		mov	r1, r5
 8027 0434 3046     		mov	r0, r6
 8028 0436 FFF7FEFF 		bl	disk_write
 8029              	.LVL1108:
 8030 043a 0028     		cmp	r0, #0
 8031 043c 40F08980 		bne	.L828
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 8032              		.loc 1 4342 0
 8033 0440 4FF40072 		mov	r2, #512
 8034 0444 0021     		movs	r1, #0
 8035 0446 2846     		mov	r0, r5
 8036 0448 FFF7FEFF 		bl	mem_set
 8037              	.LVL1109:
ARM GAS  /tmp/ccktbAOa.s 			page 242


4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8038              		.loc 1 4343 0
 8039 044c 0123     		movs	r3, #1
 8040 044e 0793     		str	r3, [sp, #28]
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8041              		.loc 1 4344 0
 8042 0450 9B46     		mov	fp, r3
 8043              	.LVL1110:
 8044 0452 2246     		mov	r2, r4
 8045              	.LVL1111:
 8046              	.L800:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8047              		.loc 1 4343 0 discriminator 1
 8048 0454 079B     		ldr	r3, [sp, #28]
 8049 0456 BB42     		cmp	r3, r7
 8050 0458 0DD2     		bcs	.L846
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8051              		.loc 1 4344 0
 8052 045a 02F1010A 		add	r10, r2, #1
 8053              	.LVL1112:
 8054 045e 5B46     		mov	r3, fp
 8055 0460 0499     		ldr	r1, [sp, #16]
 8056 0462 3046     		mov	r0, r6
 8057 0464 FFF7FEFF 		bl	disk_write
 8058              	.LVL1113:
 8059 0468 0028     		cmp	r0, #0
 8060 046a 74D1     		bne	.L829
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8061              		.loc 1 4343 0 discriminator 2
 8062 046c 079B     		ldr	r3, [sp, #28]
 8063 046e 0133     		adds	r3, r3, #1
 8064 0470 0793     		str	r3, [sp, #28]
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8065              		.loc 1 4344 0 discriminator 2
 8066 0472 5246     		mov	r2, r10
 8067 0474 EEE7     		b	.L800
 8068              	.LVL1114:
 8069              	.L846:
 8070 0476 1446     		mov	r4, r2
 8071              	.LVL1115:
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 8072              		.loc 1 4350 0 discriminator 2
 8073 0478 019B     		ldr	r3, [sp, #4]
 8074 047a 009A     		ldr	r2, [sp]
 8075 047c B8F1030F 		cmp	r8, #3
 8076 0480 18BF     		it	ne
 8077 0482 1346     		movne	r3, r2
 8078 0484 2246     		mov	r2, r4
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8079              		.loc 1 4352 0 discriminator 2
 8080 0486 0127     		movs	r7, #1
 8081              	.LVL1116:
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8082              		.loc 1 4354 0 discriminator 2
 8083 0488 1C44     		add	r4, r4, r3
 8084              	.LVL1117:
 8085              	.L803:
ARM GAS  /tmp/ccktbAOa.s 			page 243


4352:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8086              		.loc 1 4352 0
 8087 048a 02F1010A 		add	r10, r2, #1
 8088              	.LVL1118:
 8089 048e 3B46     		mov	r3, r7
 8090 0490 0499     		ldr	r1, [sp, #16]
 8091 0492 3046     		mov	r0, r6
 8092 0494 FFF7FEFF 		bl	disk_write
 8093              	.LVL1119:
 8094 0498 0028     		cmp	r0, #0
 8095 049a 5ED1     		bne	.L830
 8096 049c 5246     		mov	r2, r10
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8097              		.loc 1 4354 0
 8098 049e A245     		cmp	r10, r4
 8099 04a0 F3D1     		bne	.L803
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
 8100              		.loc 1 4364 0
 8101 04a2 B8F1030F 		cmp	r8, #3
 8102 04a6 3DD1     		bne	.L804
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
 8103              		.loc 1 4365 0
 8104 04a8 5223     		movs	r3, #82
 8105 04aa 2B70     		strb	r3, [r5]
 8106 04ac 6B70     		strb	r3, [r5, #1]
 8107 04ae 6123     		movs	r3, #97
 8108 04b0 AB70     		strb	r3, [r5, #2]
 8109 04b2 4122     		movs	r2, #65
 8110 04b4 EA70     		strb	r2, [r5, #3]
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8111              		.loc 1 4366 0
 8112 04b6 7221     		movs	r1, #114
 8113 04b8 85F8E411 		strb	r1, [r5, #484]
 8114 04bc 85F8E511 		strb	r1, [r5, #485]
 8115 04c0 85F8E621 		strb	r2, [r5, #486]
 8116 04c4 85F8E731 		strb	r3, [r5, #487]
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8117              		.loc 1 4367 0
 8118 04c8 039A     		ldr	r2, [sp, #12]
 8119 04ca 531E     		subs	r3, r2, #1
 8120 04cc 85F8E831 		strb	r3, [r5, #488]
 8121 04d0 531E     		subs	r3, r2, #1
 8122 04d2 C3F30723 		ubfx	r3, r3, #8, #8
 8123 04d6 85F8E931 		strb	r3, [r5, #489]
 8124 04da 531E     		subs	r3, r2, #1
 8125 04dc 1A0C     		lsrs	r2, r3, #16
 8126 04de 85F8EA21 		strb	r2, [r5, #490]
 8127 04e2 1B0E     		lsrs	r3, r3, #24
 8128 04e4 85F8EB31 		strb	r3, [r5, #491]
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
 8129              		.loc 1 4368 0
 8130 04e8 0223     		movs	r3, #2
 8131 04ea 85F8EC31 		strb	r3, [r5, #492]
 8132 04ee 0023     		movs	r3, #0
 8133 04f0 85F8ED31 		strb	r3, [r5, #493]
 8134 04f4 85F8EE31 		strb	r3, [r5, #494]
 8135 04f8 85F8EF31 		strb	r3, [r5, #495]
ARM GAS  /tmp/ccktbAOa.s 			page 244


4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
 8136              		.loc 1 4369 0
 8137 04fc 5523     		movs	r3, #85
 8138 04fe 85F8FE31 		strb	r3, [r5, #510]
 8139 0502 AA23     		movs	r3, #170
 8140 0504 85F8FF31 		strb	r3, [r5, #511]
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
 8141              		.loc 1 4370 0
 8142 0508 0123     		movs	r3, #1
 8143 050a 09EB0302 		add	r2, r9, r3
 8144 050e 2946     		mov	r1, r5
 8145 0510 3046     		mov	r0, r6
 8146 0512 FFF7FEFF 		bl	disk_write
 8147              	.LVL1120:
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8148              		.loc 1 4371 0
 8149 0516 0123     		movs	r3, #1
 8150 0518 09F10702 		add	r2, r9, #7
 8151 051c 2946     		mov	r1, r5
 8152 051e 3046     		mov	r0, r6
 8153 0520 FFF7FEFF 		bl	disk_write
 8154              	.LVL1121:
 8155              	.L804:
4374:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8156              		.loc 1 4374 0
 8157 0524 0022     		movs	r2, #0
 8158 0526 1146     		mov	r1, r2
 8159 0528 3046     		mov	r0, r6
 8160 052a FFF7FEFF 		bl	disk_ioctl
 8161              	.LVL1122:
 8162 052e 0030     		adds	r0, r0, #0
 8163 0530 18BF     		it	ne
 8164 0532 0120     		movne	r0, #1
 8165 0534 6CE5     		b	.L837
 8166              	.LVL1123:
 8167              	.L810:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 8168              		.loc 1 4162 0
 8169 0536 0B20     		movs	r0, #11
 8170              	.LVL1124:
 8171 0538 6AE5     		b	.L837
 8172              	.LVL1125:
 8173              	.L811:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 8174              		.loc 1 4164 0
 8175 053a 0C20     		movs	r0, #12
 8176              	.LVL1126:
 8177 053c 68E5     		b	.L837
 8178              	.LVL1127:
 8179              	.L814:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
 8180              		.loc 1 4188 0
 8181 053e 0120     		movs	r0, #1
 8182 0540 66E5     		b	.L837
 8183              	.L815:
 8184 0542 0120     		movs	r0, #1
 8185 0544 64E5     		b	.L837
ARM GAS  /tmp/ccktbAOa.s 			page 245


 8186              	.LVL1128:
 8187              	.L819:
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8188              		.loc 1 4240 0
 8189 0546 0E20     		movs	r0, #14
 8190 0548 62E5     		b	.L837
 8191              	.LVL1129:
 8192              	.L820:
 8193 054a 0E20     		movs	r0, #14
 8194 054c 60E5     		b	.L837
 8195              	.LVL1130:
 8196              	.L824:
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
 8197              		.loc 1 4278 0
 8198 054e 0120     		movs	r0, #1
 8199 0550 5EE5     		b	.L837
 8200              	.LVL1131:
 8201              	.L828:
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
 8202              		.loc 1 4341 0
 8203 0552 0120     		movs	r0, #1
 8204 0554 5CE5     		b	.L837
 8205              	.LVL1132:
 8206              	.L829:
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8207              		.loc 1 4345 0
 8208 0556 0120     		movs	r0, #1
 8209 0558 5AE5     		b	.L837
 8210              	.LVL1133:
 8211              	.L830:
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
 8212              		.loc 1 4353 0
 8213 055a 0120     		movs	r0, #1
 8214 055c 58E5     		b	.L837
 8215              	.LVL1134:
 8216              	.L782:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8217              		.loc 1 4207 0
 8218 055e 4FF6F571 		movw	r1, #65525
 8219 0562 8B42     		cmp	r3, r1
 8220 0564 3FF6C5AD 		bhi	.L805
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 8221              		.loc 1 4215 0 discriminator 2
 8222 0568 0233     		adds	r3, r3, #2
 8223              	.LVL1135:
 8224 056a 5B00     		lsls	r3, r3, #1
 8225              	.LVL1136:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 8226              		.loc 1 4206 0 discriminator 2
 8227 056c 4FF00208 		mov	r8, #2
 8228              	.LVL1137:
 8229              	.L785:
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
 8230              		.loc 1 4216 0 discriminator 4
 8231 0570 03F2FF13 		addw	r3, r3, #511
 8232              	.LVL1138:
 8233 0574 5F0A     		lsrs	r7, r3, #9
ARM GAS  /tmp/ccktbAOa.s 			page 246


 8234              	.LVL1139:
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8235              		.loc 1 4218 0 discriminator 4
 8236 0576 2023     		movs	r3, #32
 8237 0578 0093     		str	r3, [sp]
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
 8238              		.loc 1 4217 0 discriminator 4
 8239 057a 4FF0010A 		mov	r10, #1
 8240              	.LVL1140:
 8241              	.L784:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
 8242              		.loc 1 4220 0
 8243 057e 0AEB0903 		add	r3, r10, r9
 8244 0582 0293     		str	r3, [sp, #8]
 8245              	.LVL1141:
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 8246              		.loc 1 4222 0
 8247 0584 0099     		ldr	r1, [sp]
 8248 0586 07EB010B 		add	fp, r7, r1
 8249 058a 9B44     		add	fp, fp, r3
 8250              	.LVL1142:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8251              		.loc 1 4223 0
 8252 058c 019B     		ldr	r3, [sp, #4]
 8253              	.LVL1143:
 8254 058e A3EB0903 		sub	r3, r3, r9
 8255 0592 5B44     		add	r3, r3, fp
 8256 0594 9A42     		cmp	r2, r3
 8257 0596 BFF4B7AD 		bcs	.L847
 8258 059a 0E20     		movs	r0, #14
 8259 059c 38E5     		b	.L837
 8260              	.LVL1144:
 8261              	.L836:
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
 8262              		.loc 1 4329 0
 8263 059e 4FF40072 		mov	r2, #512
 8264 05a2 0021     		movs	r1, #0
 8265 05a4 2846     		mov	r0, r5
 8266 05a6 FFF7FEFF 		bl	mem_set
 8267              	.LVL1145:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 8268              		.loc 1 4332 0
 8269 05aa B8F1010F 		cmp	r8, #1
 8270 05ae 0A4B     		ldr	r3, .L850+4
 8271 05b0 18BF     		it	ne
 8272 05b2 6FF0FF03 		mvnne	r3, #255
 8273 05b6 43EA0B03 		orr	r3, r3, fp
 8274 05ba 0793     		str	r3, [sp, #28]
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8275              		.loc 1 4333 0
 8276 05bc 2B70     		strb	r3, [r5]
 8277 05be BDF81C30 		ldrh	r3, [sp, #28]
 8278 05c2 1B0A     		lsrs	r3, r3, #8
 8279 05c4 6B70     		strb	r3, [r5, #1]
 8280 05c6 BDF81E30 		ldrh	r3, [sp, #30]
 8281 05ca AB70     		strb	r3, [r5, #2]
 8282 05cc 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
ARM GAS  /tmp/ccktbAOa.s 			page 247


 8283 05d0 EB70     		strb	r3, [r5, #3]
 8284 05d2 2BE7     		b	.L799
 8285              	.L851:
 8286              		.align	2
 8287              	.L850:
 8288 05d4 20000000 		.word	.LC3
 8289 05d8 00FFFF00 		.word	16776960
 8290              		.cfi_endproc
 8291              	.LFE178:
 8293              		.section	.text.f_gets,"ax",%progbits
 8294              		.align	1
 8295              		.global	f_gets
 8296              		.syntax unified
 8297              		.thumb
 8298              		.thumb_func
 8299              		.fpu fpv4-sp-d16
 8301              	f_gets:
 8302              	.LFB179:
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8303              		.loc 1 4462 0
 8304              		.cfi_startproc
 8305              		@ args = 0, pretend = 0, frame = 8
 8306              		@ frame_needed = 0, uses_anonymous_args = 0
 8307              	.LVL1146:
 8308 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8309              	.LCFI98:
 8310              		.cfi_def_cfa_offset 24
 8311              		.cfi_offset 4, -24
 8312              		.cfi_offset 5, -20
 8313              		.cfi_offset 6, -16
 8314              		.cfi_offset 7, -12
 8315              		.cfi_offset 8, -8
 8316              		.cfi_offset 14, -4
 8317 0004 82B0     		sub	sp, sp, #8
 8318              	.LCFI99:
 8319              		.cfi_def_cfa_offset 32
 8320 0006 8046     		mov	r8, r0
 8321 0008 1746     		mov	r7, r2
 8322              	.LVL1147:
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8323              		.loc 1 4464 0
 8324 000a 0546     		mov	r5, r0
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8325              		.loc 1 4463 0
 8326 000c 0024     		movs	r4, #0
4469:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
 8327              		.loc 1 4469 0
 8328 000e 4E1E     		subs	r6, r1, #1
 8329              	.LVL1148:
 8330              	.L853:
 8331 0010 B442     		cmp	r4, r6
 8332 0012 14DA     		bge	.L854
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8333              		.loc 1 4514 0
 8334 0014 6B46     		mov	r3, sp
 8335 0016 0122     		movs	r2, #1
 8336 0018 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccktbAOa.s 			page 248


 8337 001a 3846     		mov	r0, r7
 8338 001c FFF7FEFF 		bl	f_read
 8339              	.LVL1149:
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8340              		.loc 1 4515 0
 8341 0020 009B     		ldr	r3, [sp]
 8342 0022 012B     		cmp	r3, #1
 8343 0024 0BD1     		bne	.L854
4516:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8344              		.loc 1 4516 0
 8345 0026 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8346              	.LVL1150:
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8347              		.loc 1 4518 0
 8348 002a 0D2B     		cmp	r3, #13
 8349 002c F0D0     		beq	.L853
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8350              		.loc 1 4519 0
 8351 002e 6A1C     		adds	r2, r5, #1
 8352              	.LVL1151:
 8353 0030 2B70     		strb	r3, [r5]
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8354              		.loc 1 4520 0
 8355 0032 0134     		adds	r4, r4, #1
 8356              	.LVL1152:
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8357              		.loc 1 4521 0
 8358 0034 0A2B     		cmp	r3, #10
 8359 0036 01D0     		beq	.L858
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8360              		.loc 1 4519 0
 8361 0038 1546     		mov	r5, r2
 8362 003a E9E7     		b	.L853
 8363              	.L858:
 8364 003c 1546     		mov	r5, r2
 8365              	.LVL1153:
 8366              	.L854:
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8367              		.loc 1 4523 0
 8368 003e 0023     		movs	r3, #0
 8369 0040 2B70     		strb	r3, [r5]
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8370              		.loc 1 4524 0
 8371 0042 9C42     		cmp	r4, r3
4525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8372              		.loc 1 4525 0
 8373 0044 14BF     		ite	ne
 8374 0046 4046     		movne	r0, r8
 8375 0048 1846     		moveq	r0, r3
 8376 004a 02B0     		add	sp, sp, #8
 8377              	.LCFI100:
 8378              		.cfi_def_cfa_offset 24
 8379              		@ sp needed
 8380 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8381              		.cfi_endproc
 8382              	.LFE179:
 8384              		.section	.text.f_putc,"ax",%progbits
ARM GAS  /tmp/ccktbAOa.s 			page 249


 8385              		.align	1
 8386              		.global	f_putc
 8387              		.syntax unified
 8388              		.thumb
 8389              		.thumb_func
 8390              		.fpu fpv4-sp-d16
 8392              	f_putc:
 8393              	.LFB181:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4602:Middlewares/Third_Party/FatFs/src/ff.c **** )
4603:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8394              		.loc 1 4603 0
 8395              		.cfi_startproc
 8396              		@ args = 0, pretend = 0, frame = 80
 8397              		@ frame_needed = 0, uses_anonymous_args = 0
 8398              	.LVL1154:
 8399 0000 00B5     		push	{lr}
 8400              	.LCFI101:
 8401              		.cfi_def_cfa_offset 4
 8402              		.cfi_offset 14, -4
 8403 0002 95B0     		sub	sp, sp, #84
 8404              	.LCFI102:
 8405              		.cfi_def_cfa_offset 88
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;			/* Initialize output buffer */
 8406              		.loc 1 4608 0
 8407 0004 0191     		str	r1, [sp, #4]
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8408              		.loc 1 4609 0
 8409 0006 0023     		movs	r3, #0
 8410 0008 0293     		str	r3, [sp, #8]
 8411 000a 0393     		str	r3, [sp, #12]
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put a character */
 8412              		.loc 1 4611 0
 8413 000c 0146     		mov	r1, r0
 8414              	.LVL1155:
 8415 000e 01A8     		add	r0, sp, #4
 8416              	.LVL1156:
 8417 0010 FFF7FEFF 		bl	putc_bfd
 8418              	.LVL1157:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0	/* Flush buffered characters to the file */
 8419              		.loc 1 4613 0
 8420 0014 029A     		ldr	r2, [sp, #8]
 8421 0016 002A     		cmp	r2, #0
 8422 0018 0DDB     		blt	.L862
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8423              		.loc 1 4614 0
ARM GAS  /tmp/ccktbAOa.s 			page 250


 8424 001a 6B46     		mov	r3, sp
 8425 001c 04A9     		add	r1, sp, #16
 8426 001e 0198     		ldr	r0, [sp, #4]
 8427 0020 FFF7FEFF 		bl	f_write
 8428              	.LVL1158:
 8429 0024 50B9     		cbnz	r0, .L863
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8430              		.loc 1 4615 0
 8431 0026 009B     		ldr	r3, [sp]
 8432 0028 029A     		ldr	r2, [sp, #8]
 8433 002a 9A42     		cmp	r2, r3
 8434 002c 09D1     		bne	.L864
 8435              		.loc 1 4615 0 is_stmt 0 discriminator 1
 8436 002e 0398     		ldr	r0, [sp, #12]
 8437              	.L860:
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8438              		.loc 1 4617 0 is_stmt 1
 8439 0030 15B0     		add	sp, sp, #84
 8440              	.LCFI103:
 8441              		.cfi_remember_state
 8442              		.cfi_def_cfa_offset 4
 8443              		@ sp needed
 8444 0032 5DF804FB 		ldr	pc, [sp], #4
 8445              	.L862:
 8446              	.LCFI104:
 8447              		.cfi_restore_state
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8448              		.loc 1 4616 0
 8449 0036 4FF0FF30 		mov	r0, #-1
 8450 003a F9E7     		b	.L860
 8451              	.L863:
 8452 003c 4FF0FF30 		mov	r0, #-1
 8453 0040 F6E7     		b	.L860
 8454              	.L864:
 8455 0042 4FF0FF30 		mov	r0, #-1
 8456 0046 F3E7     		b	.L860
 8457              		.cfi_endproc
 8458              	.LFE181:
 8460              		.section	.text.f_puts,"ax",%progbits
 8461              		.align	1
 8462              		.global	f_puts
 8463              		.syntax unified
 8464              		.thumb
 8465              		.thumb_func
 8466              		.fpu fpv4-sp-d16
 8468              	f_puts:
 8469              	.LFB182:
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4623:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
4624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 
4626:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
ARM GAS  /tmp/ccktbAOa.s 			page 251


4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** )
4630:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8470              		.loc 1 4630 0
 8471              		.cfi_startproc
 8472              		@ args = 0, pretend = 0, frame = 80
 8473              		@ frame_needed = 0, uses_anonymous_args = 0
 8474              	.LVL1159:
 8475 0000 10B5     		push	{r4, lr}
 8476              	.LCFI105:
 8477              		.cfi_def_cfa_offset 8
 8478              		.cfi_offset 4, -8
 8479              		.cfi_offset 14, -4
 8480 0002 94B0     		sub	sp, sp, #80
 8481              	.LCFI106:
 8482              		.cfi_def_cfa_offset 88
 8483 0004 0446     		mov	r4, r0
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 8484              		.loc 1 4635 0
 8485 0006 0191     		str	r1, [sp, #4]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8486              		.loc 1 4636 0
 8487 0008 0023     		movs	r3, #0
 8488 000a 0293     		str	r3, [sp, #8]
 8489 000c 0393     		str	r3, [sp, #12]
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str)			/* Put the string */
 8490              		.loc 1 4638 0
 8491 000e 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 8492              	.LVL1160:
 8493 0010 B1B1     		cbz	r1, .L870
 8494              	.LVL1161:
 8495              	.L874:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8496              		.loc 1 4639 0
 8497 0012 01A8     		add	r0, sp, #4
 8498 0014 FFF7FEFF 		bl	putc_bfd
 8499              	.LVL1162:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8500              		.loc 1 4638 0
 8501 0018 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 8502              	.LVL1163:
 8503 001c 0029     		cmp	r1, #0
 8504 001e F8D1     		bne	.L874
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 8505              		.loc 1 4641 0
 8506 0020 029A     		ldr	r2, [sp, #8]
 8507 0022 002A     		cmp	r2, #0
 8508 0024 0EDB     		blt	.L877
 8509              	.LVL1164:
 8510              	.L867:
ARM GAS  /tmp/ccktbAOa.s 			page 252


4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8511              		.loc 1 4642 0
 8512 0026 6B46     		mov	r3, sp
 8513 0028 04A9     		add	r1, sp, #16
 8514 002a 0198     		ldr	r0, [sp, #4]
 8515 002c FFF7FEFF 		bl	f_write
 8516              	.LVL1165:
 8517 0030 58B9     		cbnz	r0, .L872
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8518              		.loc 1 4643 0
 8519 0032 009B     		ldr	r3, [sp]
 8520 0034 029A     		ldr	r2, [sp, #8]
 8521 0036 9A42     		cmp	r2, r3
 8522 0038 0AD1     		bne	.L873
 8523              		.loc 1 4643 0 is_stmt 0 discriminator 1
 8524 003a 0398     		ldr	r0, [sp, #12]
 8525              	.L866:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8526              		.loc 1 4645 0 is_stmt 1
 8527 003c 14B0     		add	sp, sp, #80
 8528              	.LCFI107:
 8529              		.cfi_remember_state
 8530              		.cfi_def_cfa_offset 8
 8531              		@ sp needed
 8532 003e 10BD     		pop	{r4, pc}
 8533              	.LVL1166:
 8534              	.L870:
 8535              	.LCFI108:
 8536              		.cfi_restore_state
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8537              		.loc 1 4641 0
 8538 0040 0022     		movs	r2, #0
 8539 0042 F0E7     		b	.L867
 8540              	.LVL1167:
 8541              	.L877:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8542              		.loc 1 4644 0
 8543 0044 4FF0FF30 		mov	r0, #-1
 8544 0048 F8E7     		b	.L866
 8545              	.LVL1168:
 8546              	.L872:
 8547 004a 4FF0FF30 		mov	r0, #-1
 8548 004e F5E7     		b	.L866
 8549              	.L873:
 8550 0050 4FF0FF30 		mov	r0, #-1
 8551 0054 F2E7     		b	.L866
 8552              		.cfi_endproc
 8553              	.LFE182:
 8555              		.section	.text.f_printf,"ax",%progbits
 8556              		.align	1
 8557              		.global	f_printf
 8558              		.syntax unified
 8559              		.thumb
 8560              		.thumb_func
 8561              		.fpu fpv4-sp-d16
 8563              	f_printf:
ARM GAS  /tmp/ccktbAOa.s 			page 253


 8564              	.LFB183:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 
4650:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4651:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 
4654:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** )
4659:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8565              		.loc 1 4659 0
 8566              		.cfi_startproc
 8567              		@ args = 4, pretend = 12, frame = 104
 8568              		@ frame_needed = 0, uses_anonymous_args = 1
 8569              	.LVL1169:
 8570 0000 0EB4     		push	{r1, r2, r3}
 8571              	.LCFI109:
 8572              		.cfi_def_cfa_offset 12
 8573              		.cfi_offset 1, -12
 8574              		.cfi_offset 2, -8
 8575              		.cfi_offset 3, -4
 8576 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8577              	.LCFI110:
 8578              		.cfi_def_cfa_offset 48
 8579              		.cfi_offset 4, -48
 8580              		.cfi_offset 5, -44
 8581              		.cfi_offset 6, -40
 8582              		.cfi_offset 7, -36
 8583              		.cfi_offset 8, -32
 8584              		.cfi_offset 9, -28
 8585              		.cfi_offset 10, -24
 8586              		.cfi_offset 11, -20
 8587              		.cfi_offset 14, -16
 8588 0006 9AB0     		sub	sp, sp, #104
 8589              	.LCFI111:
 8590              		.cfi_def_cfa_offset 152
 8591 0008 23AB     		add	r3, sp, #140
 8592 000a 53F8045B 		ldr	r5, [r3], #4
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw, i, j, w;
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, s[16], *p;
4665:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 8593              		.loc 1 4668 0
 8594 000e 0190     		str	r0, [sp, #4]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8595              		.loc 1 4669 0
 8596 0010 0022     		movs	r2, #0
ARM GAS  /tmp/ccktbAOa.s 			page 254


 8597 0012 0292     		str	r2, [sp, #8]
 8598 0014 0392     		str	r2, [sp, #12]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 8599              		.loc 1 4671 0
 8600 0016 1993     		str	r3, [sp, #100]
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
 8601              		.loc 1 4712 0
 8602 0018 4FF0020A 		mov	r10, #2
 8603 001c 06E1     		b	.L879
 8604              	.LVL1170:
 8605              	.L881:
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 8606              		.loc 1 4681 0
 8607 001e 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 8608              	.LVL1171:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
ARM GAS  /tmp/ccktbAOa.s 			page 255


 8609              		.loc 1 4682 0
 8610 0020 3029     		cmp	r1, #48
 8611 0022 43D0     		beq	.L949
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 8612              		.loc 1 4685 0
 8613 0024 2D29     		cmp	r1, #45
 8614 0026 46D0     		beq	.L885
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 8615              		.loc 1 4681 0
 8616 0028 0235     		adds	r5, r5, #2
 8617              	.LVL1172:
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 8618              		.loc 1 4680 0
 8619 002a 4FF0000E 		mov	lr, #0
 8620              	.LVL1173:
 8621              	.L884:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8622              		.loc 1 4689 0
 8623 002e A1F13003 		sub	r3, r1, #48
 8624 0032 DBB2     		uxtb	r3, r3
 8625 0034 092B     		cmp	r3, #9
 8626 0036 42D8     		bhi	.L927
 8627 0038 0024     		movs	r4, #0
 8628              	.LVL1174:
 8629              	.L887:
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 8630              		.loc 1 4690 0
 8631 003a 04EB8404 		add	r4, r4, r4, lsl #2
 8632              	.LVL1175:
 8633 003e 01EB4404 		add	r4, r1, r4, lsl #1
 8634 0042 303C     		subs	r4, r4, #48
 8635              	.LVL1176:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8636              		.loc 1 4691 0
 8637 0044 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 8638              	.LVL1177:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8639              		.loc 1 4689 0
 8640 0048 A1F13003 		sub	r3, r1, #48
 8641 004c DBB2     		uxtb	r3, r3
 8642 004e 092B     		cmp	r3, #9
 8643 0050 F3D9     		bls	.L887
 8644              	.LVL1178:
 8645              	.L886:
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 8646              		.loc 1 4693 0
 8647 0052 01F0DF03 		and	r3, r1, #223
 8648 0056 4C2B     		cmp	r3, #76
 8649 0058 33D0     		beq	.L950
 8650              	.L888:
 8651              	.LVL1179:
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 8652              		.loc 1 4696 0
 8653 005a 0029     		cmp	r1, #0
 8654 005c 00F0F280 		beq	.L880
 8655              	.LVL1180:
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
ARM GAS  /tmp/ccktbAOa.s 			page 256


 8656              		.loc 1 4698 0
 8657 0060 A1F16103 		sub	r3, r1, #97
 8658 0064 DBB2     		uxtb	r3, r3
 8659 0066 192B     		cmp	r3, #25
 8660 0068 9ABF     		itte	ls
 8661 006a A1F12003 		subls	r3, r1, #32
 8662 006e DBB2     		uxtbls	r3, r3
 8663              	.LVL1181:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 8664              		.loc 1 4697 0
 8665 0070 0B46     		movhi	r3, r1
 8666              	.LVL1182:
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
 8667              		.loc 1 4699 0
 8668 0072 A3F14202 		sub	r2, r3, #66
 8669 0076 162A     		cmp	r2, #22
 8670 0078 6FD8     		bhi	.L890
 8671 007a DFE812F0 		tbh	[pc, r2, lsl #1]
 8672              	.L892:
 8673 007e 2901     		.2byte	(.L891-.L892)/2
 8674 0080 6600     		.2byte	(.L893-.L892)/2
 8675 0082 7200     		.2byte	(.L894-.L892)/2
 8676 0084 6E00     		.2byte	(.L890-.L892)/2
 8677 0086 6E00     		.2byte	(.L890-.L892)/2
 8678 0088 6E00     		.2byte	(.L890-.L892)/2
 8679 008a 6E00     		.2byte	(.L890-.L892)/2
 8680 008c 6E00     		.2byte	(.L890-.L892)/2
 8681 008e 6E00     		.2byte	(.L890-.L892)/2
 8682 0090 6E00     		.2byte	(.L890-.L892)/2
 8683 0092 6E00     		.2byte	(.L890-.L892)/2
 8684 0094 6E00     		.2byte	(.L890-.L892)/2
 8685 0096 6E00     		.2byte	(.L890-.L892)/2
 8686 0098 3401     		.2byte	(.L895-.L892)/2
 8687 009a 6E00     		.2byte	(.L890-.L892)/2
 8688 009c 6E00     		.2byte	(.L890-.L892)/2
 8689 009e 6E00     		.2byte	(.L890-.L892)/2
 8690 00a0 2700     		.2byte	(.L896-.L892)/2
 8691 00a2 6E00     		.2byte	(.L890-.L892)/2
 8692 00a4 7200     		.2byte	(.L894-.L892)/2
 8693 00a6 6E00     		.2byte	(.L890-.L892)/2
 8694 00a8 6E00     		.2byte	(.L890-.L892)/2
 8695 00aa 0401     		.2byte	(.L897-.L892)/2
 8696              	.LVL1183:
 8697              		.p2align 1
 8698              	.L949:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8699              		.loc 1 4683 0
 8700 00ac A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 8701              	.LVL1184:
 8702 00ae 0335     		adds	r5, r5, #3
 8703              	.LVL1185:
 8704 00b0 4FF0010E 		mov	lr, #1
 8705 00b4 BBE7     		b	.L884
 8706              	.LVL1186:
 8707              	.L885:
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8708              		.loc 1 4686 0
ARM GAS  /tmp/ccktbAOa.s 			page 257


 8709 00b6 A978     		ldrb	r1, [r5, #2]	@ zero_extendqisi2
 8710              	.LVL1187:
 8711 00b8 0335     		adds	r5, r5, #3
 8712              	.LVL1188:
 8713 00ba D646     		mov	lr, r10
 8714 00bc B7E7     		b	.L884
 8715              	.LVL1189:
 8716              	.L927:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 8717              		.loc 1 4689 0
 8718 00be 0024     		movs	r4, #0
 8719 00c0 C7E7     		b	.L886
 8720              	.LVL1190:
 8721              	.L950:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8722              		.loc 1 4694 0
 8723 00c2 4EF0040E 		orr	lr, lr, #4
 8724              	.LVL1191:
 8725 00c6 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 8726              	.LVL1192:
 8727 00c8 0135     		adds	r5, r5, #1
 8728              	.LVL1193:
 8729 00ca C6E7     		b	.L888
 8730              	.LVL1194:
 8731              	.L896:
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 8732              		.loc 1 4701 0
 8733 00cc 199B     		ldr	r3, [sp, #100]
 8734              	.LVL1195:
 8735 00ce 1A1D     		adds	r2, r3, #4
 8736              	.LVL1196:
 8737 00d0 1992     		str	r2, [sp, #100]
 8738 00d2 1F68     		ldr	r7, [r3]
 8739              	.LVL1197:
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 8740              		.loc 1 4702 0
 8741 00d4 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 8742              	.LVL1198:
 8743 00d6 0029     		cmp	r1, #0
 8744 00d8 00F0D080 		beq	.L898
 8745 00dc 3B46     		mov	r3, r7
 8746 00de 4FF00008 		mov	r8, #0
 8747 00e2 00E0     		b	.L899
 8748              	.LVL1199:
 8749              	.L929:
 8750 00e4 B046     		mov	r8, r6
 8751              	.LVL1200:
 8752              	.L899:
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 8753              		.loc 1 4702 0 is_stmt 0 discriminator 3
 8754 00e6 08F10106 		add	r6, r8, #1
 8755              	.LVL1201:
 8756 00ea 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 8757 00ee 002A     		cmp	r2, #0
 8758 00f0 F8D1     		bne	.L929
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 8759              		.loc 1 4703 0 is_stmt 1
ARM GAS  /tmp/ccktbAOa.s 			page 258


 8760 00f2 1EF0020F 		tst	lr, #2
 8761 00f6 14D1     		bne	.L903
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8762              		.loc 1 4704 0
 8763 00f8 08F10208 		add	r8, r8, #2
 8764              	.LVL1202:
 8765 00fc A642     		cmp	r6, r4
 8766 00fe 80F0D680 		bcs	.L951
 8767              	.LVL1203:
 8768              	.L923:
 8769 0102 04F1010B 		add	fp, r4, #1
 8770 0106 C146     		mov	r9, r8
 8771              	.LVL1204:
 8772              	.L901:
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 8773              		.loc 1 4704 0 is_stmt 0 discriminator 2
 8774 0108 2021     		movs	r1, #32
 8775 010a 01A8     		add	r0, sp, #4
 8776 010c FFF7FEFF 		bl	putc_bfd
 8777              	.LVL1205:
 8778 0110 09F10109 		add	r9, r9, #1
 8779              	.LVL1206:
 8780 0114 D945     		cmp	r9, fp
 8781 0116 F7D1     		bne	.L901
 8782 0118 A8EB0606 		sub	r6, r8, r6
 8783 011c 2644     		add	r6, r6, r4
 8784              	.LVL1207:
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 8785              		.loc 1 4706 0 is_stmt 1
 8786 011e 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 8787 0120 31B1     		cbz	r1, .L902
 8788              	.LVL1208:
 8789              	.L903:
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 8790              		.loc 1 4706 0 is_stmt 0 discriminator 2
 8791 0122 01A8     		add	r0, sp, #4
 8792 0124 FFF7FEFF 		bl	putc_bfd
 8793              	.LVL1209:
 8794 0128 17F8011F 		ldrb	r1, [r7, #1]!	@ zero_extendqisi2
 8795              	.LVL1210:
 8796 012c 0029     		cmp	r1, #0
 8797 012e F8D1     		bne	.L903
 8798              	.LVL1211:
 8799              	.L902:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 8800              		.loc 1 4707 0 is_stmt 1 discriminator 1
 8801 0130 771C     		adds	r7, r6, #1
 8802              	.LVL1212:
 8803 0132 B442     		cmp	r4, r6
 8804 0134 7AD9     		bls	.L879
 8805 0136 0134     		adds	r4, r4, #1
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 8806              		.loc 1 4707 0 is_stmt 0
 8807 0138 2026     		movs	r6, #32
 8808              	.L904:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 8809              		.loc 1 4707 0 discriminator 2
ARM GAS  /tmp/ccktbAOa.s 			page 259


 8810 013a 3146     		mov	r1, r6
 8811 013c 01A8     		add	r0, sp, #4
 8812 013e FFF7FEFF 		bl	putc_bfd
 8813              	.LVL1213:
 8814 0142 0137     		adds	r7, r7, #1
 8815              	.LVL1214:
 8816 0144 BC42     		cmp	r4, r7
 8817 0146 F8D1     		bne	.L904
 8818 0148 70E0     		b	.L879
 8819              	.LVL1215:
 8820              	.L893:
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
 8821              		.loc 1 4710 0 is_stmt 1
 8822 014a 199B     		ldr	r3, [sp, #100]
 8823              	.LVL1216:
 8824 014c 1A1D     		adds	r2, r3, #4
 8825              	.LVL1217:
 8826 014e 1992     		str	r2, [sp, #100]
 8827 0150 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8828              	.LVL1218:
 8829 0152 01A8     		add	r0, sp, #4
 8830 0154 FFF7FEFF 		bl	putc_bfd
 8831              	.LVL1219:
 8832 0158 68E0     		b	.L879
 8833              	.LVL1220:
 8834              	.L890:
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 8835              		.loc 1 4721 0
 8836 015a 01A8     		add	r0, sp, #4
 8837 015c FFF7FEFF 		bl	putc_bfd
 8838              	.LVL1221:
 8839 0160 64E0     		b	.L879
 8840              	.LVL1222:
 8841              	.L894:
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 8842              		.loc 1 4725 0
 8843 0162 1EF0040F 		tst	lr, #4
 8844 0166 0DD1     		bne	.L952
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
 8845              		.loc 1 4717 0
 8846 0168 0A27     		movs	r7, #10
 8847              	.LVL1223:
 8848              	.L905:
 8849              		.loc 1 4725 0 discriminator 2
 8850 016a 442B     		cmp	r3, #68
 8851 016c 40F09080 		bne	.L908
ARM GAS  /tmp/ccktbAOa.s 			page 260


 8852              		.loc 1 4725 0 is_stmt 0
 8853 0170 199B     		ldr	r3, [sp, #100]
 8854              	.LVL1224:
 8855 0172 1A1D     		adds	r2, r3, #4
 8856              	.LVL1225:
 8857 0174 1992     		str	r2, [sp, #100]
 8858 0176 1A68     		ldr	r2, [r3]
 8859              	.LVL1226:
 8860              	.L906:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 8861              		.loc 1 4726 0 is_stmt 1 discriminator 1
 8862 0178 002A     		cmp	r2, #0
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 8863              		.loc 1 4727 0 discriminator 1
 8864 017a BCBF     		itt	lt
 8865 017c 5242     		rsblt	r2, r2, #0
 8866              	.LVL1227:
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
 8867              		.loc 1 4728 0 discriminator 1
 8868 017e 4EF0080E 		orrlt	lr, lr, #8
 8869              	.LVL1228:
 8870 0182 89E0     		b	.L907
 8871              	.LVL1229:
 8872              	.L952:
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
 8873              		.loc 1 4717 0
 8874 0184 0A27     		movs	r7, #10
 8875 0186 00E0     		b	.L922
 8876              	.LVL1230:
 8877              	.L937:
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
 8878              		.loc 1 4719 0
 8879 0188 1027     		movs	r7, #16
 8880              	.LVL1231:
 8881              	.L922:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 8882              		.loc 1 4725 0
 8883 018a 199A     		ldr	r2, [sp, #100]
 8884 018c 101D     		adds	r0, r2, #4
 8885 018e 1990     		str	r0, [sp, #100]
 8886 0190 1268     		ldr	r2, [r2]
 8887              	.LVL1232:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 8888              		.loc 1 4726 0
 8889 0192 442B     		cmp	r3, #68
 8890 0194 F0D0     		beq	.L906
 8891 0196 7FE0     		b	.L907
 8892              	.LVL1233:
 8893              	.L931:
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8894              		.loc 1 4734 0
 8895 0198 B446     		mov	ip, r6
ARM GAS  /tmp/ccktbAOa.s 			page 261


 8896              	.LVL1234:
 8897              	.L911:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 8898              		.loc 1 4732 0
 8899 019a B2FBF7F1 		udiv	r1, r2, r7
 8900 019e 07FB1123 		mls	r3, r7, r1, r2
 8901 01a2 DBB2     		uxtb	r3, r3
 8902              	.LVL1235:
 8903 01a4 0A46     		mov	r2, r1
 8904              	.LVL1236:
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 8905              		.loc 1 4733 0
 8906 01a6 092B     		cmp	r3, #9
 8907 01a8 84BF     		itt	hi
 8908 01aa 4344     		addhi	r3, r3, r8
 8909              	.LVL1237:
 8910 01ac DBB2     		uxtbhi	r3, r3
 8911              	.LVL1238:
 8912              		.loc 1 4734 0
 8913 01ae 0CF10106 		add	r6, ip, #1
 8914              	.LVL1239:
 8915 01b2 3033     		adds	r3, r3, #48
 8916              	.LVL1240:
 8917 01b4 00F8013F 		strb	r3, [r0, #1]!
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof s / sizeof s[0]);
 8918              		.loc 1 4735 0
 8919 01b8 09B1     		cbz	r1, .L910
 8920              		.loc 1 4735 0 is_stmt 0 discriminator 1
 8921 01ba 102E     		cmp	r6, #16
 8922 01bc ECD1     		bne	.L931
 8923              	.L910:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) s[i++] = '-';
 8924              		.loc 1 4736 0 is_stmt 1
 8925 01be 1EF0080F 		tst	lr, #8
 8926 01c2 06D0     		beq	.L912
 8927              	.LVL1241:
 8928              		.loc 1 4736 0 is_stmt 0 discriminator 1
 8929 01c4 1AAB     		add	r3, sp, #104
 8930              	.LVL1242:
 8931 01c6 1E44     		add	r6, r6, r3
 8932 01c8 2D23     		movs	r3, #45
 8933 01ca 06F8183C 		strb	r3, [r6, #-24]
 8934 01ce 0CF10206 		add	r6, ip, #2
 8935              	.LVL1243:
 8936              	.L912:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 8937              		.loc 1 4737 0 is_stmt 1
 8938 01d2 0EF00103 		and	r3, lr, #1
 8939 01d6 002B     		cmp	r3, #0
 8940 01d8 14BF     		ite	ne
 8941 01da 4FF03008 		movne	r8, #48
 8942 01de 4FF02008 		moveq	r8, #32
 8943              	.LVL1244:
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 8944              		.loc 1 4738 0
 8945 01e2 1EF0020F 		tst	lr, #2
 8946 01e6 2BD1     		bne	.L933
ARM GAS  /tmp/ccktbAOa.s 			page 262


 8947 01e8 771C     		adds	r7, r6, #1
 8948              	.LVL1245:
 8949 01ea A642     		cmp	r6, r4
 8950 01ec 09D2     		bcs	.L914
 8951 01ee 04F10109 		add	r9, r4, #1
 8952              	.LVL1246:
 8953              	.L915:
 8954              		.loc 1 4738 0 is_stmt 0 discriminator 3
 8955 01f2 4146     		mov	r1, r8
 8956 01f4 01A8     		add	r0, sp, #4
 8957 01f6 FFF7FEFF 		bl	putc_bfd
 8958              	.LVL1247:
 8959 01fa 0137     		adds	r7, r7, #1
 8960              	.LVL1248:
 8961 01fc B945     		cmp	r9, r7
 8962 01fe F8D1     		bne	.L915
 8963 0200 671C     		adds	r7, r4, #1
 8964              	.LVL1249:
 8965              	.L914:
 8966 0202 14AB     		add	r3, sp, #80
 8967 0204 1E44     		add	r6, r6, r3
 8968              	.LVL1250:
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		do putc_bfd(&pb, s[--i]); while (i);
 8969              		.loc 1 4739 0 is_stmt 1 discriminator 1
 8970 0206 9946     		mov	r9, r3
 8971              	.L916:
 8972              	.LVL1251:
 8973 0208 16F8011D 		ldrb	r1, [r6, #-1]!	@ zero_extendqisi2
 8974              	.LVL1252:
 8975 020c 01A8     		add	r0, sp, #4
 8976 020e FFF7FEFF 		bl	putc_bfd
 8977              	.LVL1253:
 8978 0212 B145     		cmp	r9, r6
 8979 0214 F8D1     		bne	.L916
 8980              	.LVL1254:
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 8981              		.loc 1 4740 0 discriminator 1
 8982 0216 7E1C     		adds	r6, r7, #1
 8983              	.LVL1255:
 8984 0218 A742     		cmp	r7, r4
 8985 021a 07D2     		bcs	.L879
 8986 021c 0134     		adds	r4, r4, #1
 8987              	.L917:
 8988              		.loc 1 4740 0 is_stmt 0 discriminator 2
 8989 021e 4146     		mov	r1, r8
 8990 0220 01A8     		add	r0, sp, #4
 8991 0222 FFF7FEFF 		bl	putc_bfd
 8992              	.LVL1256:
 8993 0226 0136     		adds	r6, r6, #1
 8994              	.LVL1257:
 8995 0228 A642     		cmp	r6, r4
 8996 022a F8D1     		bne	.L917
 8997              	.LVL1258:
 8998              	.L879:
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 8999              		.loc 1 4674 0 is_stmt 1
 9000 022c 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
ARM GAS  /tmp/ccktbAOa.s 			page 263


 9001              	.LVL1259:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9002              		.loc 1 4675 0
 9003 022e 49B1     		cbz	r1, .L880
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9004              		.loc 1 4676 0
 9005 0230 2529     		cmp	r1, #37
 9006 0232 3FF4F4AE 		beq	.L881
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9007              		.loc 1 4674 0
 9008 0236 0135     		adds	r5, r5, #1
 9009              	.LVL1260:
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 9010              		.loc 1 4677 0
 9011 0238 01A8     		add	r0, sp, #4
 9012 023a FFF7FEFF 		bl	putc_bfd
 9013              	.LVL1261:
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9014              		.loc 1 4678 0
 9015 023e F5E7     		b	.L879
 9016              	.LVL1262:
 9017              	.L933:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9018              		.loc 1 4737 0
 9019 0240 3746     		mov	r7, r6
 9020 0242 DEE7     		b	.L914
 9021              	.LVL1263:
 9022              	.L880:
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 9023              		.loc 1 4745 0
 9024 0244 029A     		ldr	r2, [sp, #8]
 9025 0246 002A     		cmp	r2, #0
 9026 0248 0FDB     		blt	.L934
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 9027              		.loc 1 4746 0
 9028 024a 18AB     		add	r3, sp, #96
 9029 024c 04A9     		add	r1, sp, #16
 9030              	.LVL1264:
 9031 024e 0198     		ldr	r0, [sp, #4]
 9032 0250 FFF7FEFF 		bl	f_write
 9033              	.LVL1265:
 9034 0254 60B9     		cbnz	r0, .L935
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 9035              		.loc 1 4747 0
 9036 0256 189B     		ldr	r3, [sp, #96]
 9037 0258 029A     		ldr	r2, [sp, #8]
 9038 025a 9A42     		cmp	r2, r3
 9039 025c 0BD1     		bne	.L936
 9040              		.loc 1 4747 0 is_stmt 0 discriminator 1
 9041 025e 0398     		ldr	r0, [sp, #12]
 9042              	.L878:
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4749:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/ccktbAOa.s 			page 264


 9043              		.loc 1 4749 0 is_stmt 1
 9044 0260 1AB0     		add	sp, sp, #104
 9045              	.LCFI112:
 9046              		.cfi_remember_state
 9047              		.cfi_def_cfa_offset 48
 9048              		@ sp needed
 9049 0262 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9050              	.LCFI113:
 9051              		.cfi_restore 14
 9052              		.cfi_restore 11
 9053              		.cfi_restore 10
 9054              		.cfi_restore 9
 9055              		.cfi_restore 8
 9056              		.cfi_restore 7
 9057              		.cfi_restore 6
 9058              		.cfi_restore 5
 9059              		.cfi_restore 4
 9060              		.cfi_def_cfa_offset 12
 9061 0266 03B0     		add	sp, sp, #12
 9062              	.LCFI114:
 9063              		.cfi_restore 3
 9064              		.cfi_restore 2
 9065              		.cfi_restore 1
 9066              		.cfi_def_cfa_offset 0
 9067 0268 7047     		bx	lr
 9068              	.LVL1266:
 9069              	.L934:
 9070              	.LCFI115:
 9071              		.cfi_restore_state
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 9072              		.loc 1 4748 0
 9073 026a 4FF0FF30 		mov	r0, #-1
 9074 026e F7E7     		b	.L878
 9075              	.LVL1267:
 9076              	.L935:
 9077 0270 4FF0FF30 		mov	r0, #-1
 9078 0274 F4E7     		b	.L878
 9079              	.L936:
 9080 0276 4FF0FF30 		mov	r0, #-1
 9081 027a F1E7     		b	.L878
 9082              	.LVL1268:
 9083              	.L898:
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9084              		.loc 1 4703 0
 9085 027c 1EF0020F 		tst	lr, #2
 9086 0280 18D0     		beq	.L921
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9087              		.loc 1 4702 0
 9088 0282 0026     		movs	r6, #0
 9089 0284 54E7     		b	.L902
 9090              	.LVL1269:
 9091              	.L897:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9092              		.loc 1 4725 0
 9093 0286 1EF0040F 		tst	lr, #4
 9094 028a 7FF47DAF 		bne	.L937
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
ARM GAS  /tmp/ccktbAOa.s 			page 265


 9095              		.loc 1 4719 0
 9096 028e 1027     		movs	r7, #16
 9097              	.LVL1270:
 9098              	.L908:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9099              		.loc 1 4725 0
 9100 0290 199B     		ldr	r3, [sp, #100]
 9101              	.LVL1271:
 9102 0292 1A1D     		adds	r2, r3, #4
 9103              	.LVL1272:
 9104 0294 1992     		str	r2, [sp, #100]
 9105 0296 1A68     		ldr	r2, [r3]
 9106              	.LVL1273:
 9107              	.L907:
 9108 0298 7829     		cmp	r1, #120
 9109 029a 0CBF     		ite	eq
 9110 029c 4FF02708 		moveq	r8, #39
 9111 02a0 4FF00708 		movne	r8, #7
 9112 02a4 0DF14F00 		add	r0, sp, #79
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
 9113              		.loc 1 4730 0
 9114 02a8 4FF0000C 		mov	ip, #0
 9115 02ac 75E7     		b	.L911
 9116              	.LVL1274:
 9117              	.L951:
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9118              		.loc 1 4706 0
 9119 02ae 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9120              		.loc 1 4704 0
 9121 02b0 4646     		mov	r6, r8
 9122 02b2 36E7     		b	.L903
 9123              	.LVL1275:
 9124              	.L921:
 9125 02b4 0126     		movs	r6, #1
 9126 02b6 002C     		cmp	r4, #0
 9127 02b8 3FF43AAF 		beq	.L902
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9128              		.loc 1 4702 0
 9129 02bc 0026     		movs	r6, #0
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 9130              		.loc 1 4704 0
 9131 02be 4FF00108 		mov	r8, #1
 9132 02c2 1EE7     		b	.L923
 9133              	.LVL1276:
 9134              	.L925:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9135              		.loc 1 4725 0
 9136 02c4 199B     		ldr	r3, [sp, #100]
 9137              	.LVL1277:
 9138 02c6 1A1D     		adds	r2, r3, #4
 9139              	.LVL1278:
 9140 02c8 1992     		str	r2, [sp, #100]
 9141 02ca 1A68     		ldr	r2, [r3]
 9142              	.LVL1279:
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
 9143              		.loc 1 4712 0
ARM GAS  /tmp/ccktbAOa.s 			page 266


 9144 02cc 5746     		mov	r7, r10
 9145 02ce E3E7     		b	.L907
 9146              	.LVL1280:
 9147              	.L891:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9148              		.loc 1 4725 0
 9149 02d0 1EF0040F 		tst	lr, #4
 9150 02d4 F6D1     		bne	.L925
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
 9151              		.loc 1 4712 0
 9152 02d6 5746     		mov	r7, r10
 9153 02d8 47E7     		b	.L905
 9154              	.LVL1281:
 9155              	.L926:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9156              		.loc 1 4725 0
 9157 02da 199B     		ldr	r3, [sp, #100]
 9158              	.LVL1282:
 9159 02dc 1A1D     		adds	r2, r3, #4
 9160              	.LVL1283:
 9161 02de 1992     		str	r2, [sp, #100]
 9162 02e0 1A68     		ldr	r2, [r3]
 9163              	.LVL1284:
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
 9164              		.loc 1 4714 0
 9165 02e2 0827     		movs	r7, #8
 9166 02e4 D8E7     		b	.L907
 9167              	.LVL1285:
 9168              	.L895:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9169              		.loc 1 4725 0
 9170 02e6 1EF0040F 		tst	lr, #4
 9171 02ea F6D1     		bne	.L926
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
 9172              		.loc 1 4714 0
 9173 02ec 0827     		movs	r7, #8
 9174 02ee CFE7     		b	.L908
 9175              		.cfi_endproc
 9176              	.LFE183:
 9178              		.section	.bss.FatFs,"aw",%nobits
 9179              		.align	2
 9180              		.set	.LANCHOR1,. + 0
 9183              	FatFs:
 9184 0000 00000000 		.space	4
 9185              		.section	.bss.Files,"aw",%nobits
 9186              		.align	2
 9187              		.set	.LANCHOR0,. + 0
 9190              	Files:
 9191 0000 00000000 		.space	24
 9191      00000000 
 9191      00000000 
 9191      00000000 
 9191      00000000 
 9192              		.section	.bss.Fsid,"aw",%nobits
 9193              		.align	1
 9194              		.set	.LANCHOR2,. + 0
 9197              	Fsid:
ARM GAS  /tmp/ccktbAOa.s 			page 267


 9198 0000 0000     		.space	2
 9199              		.section	.rodata.ExCvt,"a",%progbits
 9200              		.align	2
 9201              		.set	.LANCHOR3,. + 0
 9204              	ExCvt:
 9205 0000 80       		.byte	-128
 9206 0001 81       		.byte	-127
 9207 0002 82       		.byte	-126
 9208 0003 83       		.byte	-125
 9209 0004 84       		.byte	-124
 9210 0005 85       		.byte	-123
 9211 0006 86       		.byte	-122
 9212 0007 87       		.byte	-121
 9213 0008 88       		.byte	-120
 9214 0009 89       		.byte	-119
 9215 000a 8A       		.byte	-118
 9216 000b 8B       		.byte	-117
 9217 000c 8C       		.byte	-116
 9218 000d 8D       		.byte	-115
 9219 000e 8E       		.byte	-114
 9220 000f 8F       		.byte	-113
 9221 0010 90       		.byte	-112
 9222 0011 91       		.byte	-111
 9223 0012 92       		.byte	-110
 9224 0013 93       		.byte	-109
 9225 0014 94       		.byte	-108
 9226 0015 95       		.byte	-107
 9227 0016 96       		.byte	-106
 9228 0017 97       		.byte	-105
 9229 0018 98       		.byte	-104
 9230 0019 99       		.byte	-103
 9231 001a AD       		.byte	-83
 9232 001b 9B       		.byte	-101
 9233 001c 8C       		.byte	-116
 9234 001d 9D       		.byte	-99
 9235 001e AE       		.byte	-82
 9236 001f 9F       		.byte	-97
 9237 0020 A0       		.byte	-96
 9238 0021 21       		.byte	33
 9239 0022 A2       		.byte	-94
 9240 0023 A3       		.byte	-93
 9241 0024 A4       		.byte	-92
 9242 0025 A5       		.byte	-91
 9243 0026 A6       		.byte	-90
 9244 0027 A7       		.byte	-89
 9245 0028 A8       		.byte	-88
 9246 0029 A9       		.byte	-87
 9247 002a AA       		.byte	-86
 9248 002b AB       		.byte	-85
 9249 002c AC       		.byte	-84
 9250 002d AD       		.byte	-83
 9251 002e AE       		.byte	-82
 9252 002f AF       		.byte	-81
 9253 0030 B0       		.byte	-80
 9254 0031 B1       		.byte	-79
 9255 0032 B2       		.byte	-78
 9256 0033 B3       		.byte	-77
ARM GAS  /tmp/ccktbAOa.s 			page 268


 9257 0034 B4       		.byte	-76
 9258 0035 B5       		.byte	-75
 9259 0036 B6       		.byte	-74
 9260 0037 B7       		.byte	-73
 9261 0038 B8       		.byte	-72
 9262 0039 B9       		.byte	-71
 9263 003a BA       		.byte	-70
 9264 003b BB       		.byte	-69
 9265 003c BC       		.byte	-68
 9266 003d BD       		.byte	-67
 9267 003e BE       		.byte	-66
 9268 003f BF       		.byte	-65
 9269 0040 C0       		.byte	-64
 9270 0041 C1       		.byte	-63
 9271 0042 C2       		.byte	-62
 9272 0043 C3       		.byte	-61
 9273 0044 C4       		.byte	-60
 9274 0045 C5       		.byte	-59
 9275 0046 C6       		.byte	-58
 9276 0047 C7       		.byte	-57
 9277 0048 C8       		.byte	-56
 9278 0049 C9       		.byte	-55
 9279 004a CA       		.byte	-54
 9280 004b CB       		.byte	-53
 9281 004c CC       		.byte	-52
 9282 004d CD       		.byte	-51
 9283 004e CE       		.byte	-50
 9284 004f CF       		.byte	-49
 9285 0050 D0       		.byte	-48
 9286 0051 D1       		.byte	-47
 9287 0052 D2       		.byte	-46
 9288 0053 D3       		.byte	-45
 9289 0054 D4       		.byte	-44
 9290 0055 D5       		.byte	-43
 9291 0056 D6       		.byte	-42
 9292 0057 D7       		.byte	-41
 9293 0058 D8       		.byte	-40
 9294 0059 D9       		.byte	-39
 9295 005a DA       		.byte	-38
 9296 005b DB       		.byte	-37
 9297 005c DC       		.byte	-36
 9298 005d DD       		.byte	-35
 9299 005e DE       		.byte	-34
 9300 005f DF       		.byte	-33
 9301 0060 C0       		.byte	-64
 9302 0061 C1       		.byte	-63
 9303 0062 C2       		.byte	-62
 9304 0063 C3       		.byte	-61
 9305 0064 C4       		.byte	-60
 9306 0065 C5       		.byte	-59
 9307 0066 C6       		.byte	-58
 9308 0067 C7       		.byte	-57
 9309 0068 C8       		.byte	-56
 9310 0069 C9       		.byte	-55
 9311 006a CA       		.byte	-54
 9312 006b CB       		.byte	-53
 9313 006c CC       		.byte	-52
ARM GAS  /tmp/ccktbAOa.s 			page 269


 9314 006d CD       		.byte	-51
 9315 006e CE       		.byte	-50
 9316 006f CF       		.byte	-49
 9317 0070 D0       		.byte	-48
 9318 0071 D1       		.byte	-47
 9319 0072 D2       		.byte	-46
 9320 0073 D3       		.byte	-45
 9321 0074 D4       		.byte	-44
 9322 0075 D5       		.byte	-43
 9323 0076 D6       		.byte	-42
 9324 0077 F7       		.byte	-9
 9325 0078 D8       		.byte	-40
 9326 0079 D9       		.byte	-39
 9327 007a DA       		.byte	-38
 9328 007b DB       		.byte	-37
 9329 007c DC       		.byte	-36
 9330 007d DD       		.byte	-35
 9331 007e DE       		.byte	-34
 9332 007f 9F       		.byte	-97
 9333              		.section	.rodata.cst.9515,"a",%progbits
 9334              		.align	2
 9335              		.set	.LANCHOR5,. + 0
 9338              	cst.9515:
 9339 0000 0080     		.short	-32768
 9340 0002 0040     		.short	16384
 9341 0004 0020     		.short	8192
 9342 0006 0010     		.short	4096
 9343 0008 0008     		.short	2048
 9344 000a 0040     		.short	16384
 9345 000c 0020     		.short	8192
 9346 000e 0010     		.short	4096
 9347 0010 0008     		.short	2048
 9348 0012 0004     		.short	1024
 9349 0014 0002     		.short	512
 9350              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 9351              		.align	2
 9352              	.LC1:
 9353 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9353      53444F53 
 9353      352E3000 
 9354              	.LC2:
 9355 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9355      414D4520 
 9355      20202046 
 9355      41543332 
 9355      20202000 
 9356              	.LC3:
 9357 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 9357      414D4520 
 9357      20202046 
 9357      41542020 
 9357      20202000 
 9358              		.section	.rodata.follow_path.str1.4,"aMS",%progbits,1
 9359              		.align	2
 9360              	.LC0:
 9361 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9361      3A3B3C3D 
ARM GAS  /tmp/ccktbAOa.s 			page 270


 9361      3E3F5B5D 
 9361      7C7F00
 9362              		.section	.rodata.vst.9514,"a",%progbits
 9363              		.align	2
 9364              		.set	.LANCHOR4,. + 0
 9367              	vst.9514:
 9368 0000 0004     		.short	1024
 9369 0002 0002     		.short	512
 9370 0004 0001     		.short	256
 9371 0006 8000     		.short	128
 9372 0008 4000     		.short	64
 9373 000a 2000     		.short	32
 9374 000c 1000     		.short	16
 9375 000e 0800     		.short	8
 9376 0010 0400     		.short	4
 9377 0012 0200     		.short	2
 9378 0014 0000     		.short	0
 9379              		.text
 9380              	.Letext0:
 9381              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9382              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 9383              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 9384              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 9385              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 9386              		.file 7 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stdarg.h"
 9387              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 9388              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 9389              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 9390              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 9391              		.file 12 "<built-in>"
 9392              		.file 13 "Middlewares/Third_Party/FatFs/src/ff.h"
 9393              		.file 14 "Middlewares/Third_Party/FatFs/src/diskio.h"
ARM GAS  /tmp/ccktbAOa.s 			page 271


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/ccktbAOa.s:18     .text.mem_cpy:0000000000000000 $t
     /tmp/ccktbAOa.s:24     .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/ccktbAOa.s:55     .text.mem_set:0000000000000000 $t
     /tmp/ccktbAOa.s:61     .text.mem_set:0000000000000000 mem_set
     /tmp/ccktbAOa.s:87     .text.chk_lock:0000000000000000 $t
     /tmp/ccktbAOa.s:93     .text.chk_lock:0000000000000000 chk_lock
     /tmp/ccktbAOa.s:189    .text.chk_lock:000000000000006c $d
     /tmp/ccktbAOa.s:194    .text.inc_lock:0000000000000000 $t
     /tmp/ccktbAOa.s:200    .text.inc_lock:0000000000000000 inc_lock
     /tmp/ccktbAOa.s:351    .text.inc_lock:00000000000000a8 $d
     /tmp/ccktbAOa.s:356    .text.dec_lock:0000000000000000 $t
     /tmp/ccktbAOa.s:362    .text.dec_lock:0000000000000000 dec_lock
     /tmp/ccktbAOa.s:430    .text.dec_lock:0000000000000050 $d
     /tmp/ccktbAOa.s:435    .text.clmt_clust:0000000000000000 $t
     /tmp/ccktbAOa.s:441    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/ccktbAOa.s:498    .text.ld_clust:0000000000000000 $t
     /tmp/ccktbAOa.s:504    .text.ld_clust:0000000000000000 ld_clust
     /tmp/ccktbAOa.s:541    .text.get_fileinfo:0000000000000000 $t
     /tmp/ccktbAOa.s:547    .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/ccktbAOa.s:653    .text.get_ldnumber:0000000000000000 $t
     /tmp/ccktbAOa.s:659    .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/ccktbAOa.s:761    .text.sync_window:0000000000000000 $t
     /tmp/ccktbAOa.s:767    .text.sync_window:0000000000000000 sync_window
     /tmp/ccktbAOa.s:863    .text.move_window:0000000000000000 $t
     /tmp/ccktbAOa.s:869    .text.move_window:0000000000000000 move_window
     /tmp/ccktbAOa.s:929    .text.check_fs:0000000000000000 $t
     /tmp/ccktbAOa.s:935    .text.check_fs:0000000000000000 check_fs
     /tmp/ccktbAOa.s:1013   .text.check_fs:0000000000000088 $d
     /tmp/ccktbAOa.s:1019   .text.validate:0000000000000000 $t
     /tmp/ccktbAOa.s:1025   .text.validate:0000000000000000 validate
     /tmp/ccktbAOa.s:1099   .text.find_volume:0000000000000000 $t
     /tmp/ccktbAOa.s:1105   .text.find_volume:0000000000000000 find_volume
     /tmp/ccktbAOa.s:1513   .text.find_volume:0000000000000290 $d
     /tmp/ccktbAOa.s:1517   .text.find_volume:0000000000000294 $t
     /tmp/ccktbAOa.s:1720   .text.find_volume:00000000000003c8 $d
     /tmp/ccktbAOa.s:1729   .text.sync_fs:0000000000000000 $t
     /tmp/ccktbAOa.s:1735   .text.sync_fs:0000000000000000 sync_fs
     /tmp/ccktbAOa.s:1843   .text.clust2sect:0000000000000000 $t
     /tmp/ccktbAOa.s:1850   .text.clust2sect:0000000000000000 clust2sect
     /tmp/ccktbAOa.s:1879   .text.get_fat:0000000000000000 $t
     /tmp/ccktbAOa.s:1886   .text.get_fat:0000000000000000 get_fat
     /tmp/ccktbAOa.s:2065   .text.dir_sdi:0000000000000000 $t
     /tmp/ccktbAOa.s:2071   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/ccktbAOa.s:2237   .text.dir_remove:0000000000000000 $t
     /tmp/ccktbAOa.s:2243   .text.dir_remove:0000000000000000 dir_remove
     /tmp/ccktbAOa.s:2302   .text.put_fat:0000000000000000 $t
     /tmp/ccktbAOa.s:2309   .text.put_fat:0000000000000000 put_fat
     /tmp/ccktbAOa.s:2519   .text.create_chain:0000000000000000 $t
     /tmp/ccktbAOa.s:2525   .text.create_chain:0000000000000000 create_chain
     /tmp/ccktbAOa.s:2701   .text.dir_next:0000000000000000 $t
     /tmp/ccktbAOa.s:2707   .text.dir_next:0000000000000000 dir_next
     /tmp/ccktbAOa.s:2933   .text.follow_path:0000000000000000 $t
     /tmp/ccktbAOa.s:2939   .text.follow_path:0000000000000000 follow_path
     /tmp/ccktbAOa.s:3360   .text.follow_path:0000000000000218 $d
     /tmp/ccktbAOa.s:3368   .text.dir_register:0000000000000000 $t
ARM GAS  /tmp/ccktbAOa.s 			page 272


     /tmp/ccktbAOa.s:3374   .text.dir_register:0000000000000000 dir_register
     /tmp/ccktbAOa.s:3489   .text.dir_read:0000000000000000 $t
     /tmp/ccktbAOa.s:3495   .text.dir_read:0000000000000000 dir_read
     /tmp/ccktbAOa.s:3597   .text.remove_chain:0000000000000000 $t
     /tmp/ccktbAOa.s:3603   .text.remove_chain:0000000000000000 remove_chain
     /tmp/ccktbAOa.s:3728   .text.f_mount:0000000000000000 $t
     /tmp/ccktbAOa.s:3735   .text.f_mount:0000000000000000 f_mount
     /tmp/ccktbAOa.s:3867   .text.f_mount:000000000000007c $d
     /tmp/ccktbAOa.s:3873   .text.f_open:0000000000000000 $t
     /tmp/ccktbAOa.s:3880   .text.f_open:0000000000000000 f_open
     /tmp/ccktbAOa.s:4244   .text.f_open:00000000000001e0 $d
     /tmp/ccktbAOa.s:4249   .text.f_read:0000000000000000 $t
     /tmp/ccktbAOa.s:4256   .text.f_read:0000000000000000 f_read
     /tmp/ccktbAOa.s:4556   .text.f_write:0000000000000000 $t
     /tmp/ccktbAOa.s:4563   .text.f_write:0000000000000000 f_write
     /tmp/ccktbAOa.s:4900   .text.putc_bfd:0000000000000000 $t
     /tmp/ccktbAOa.s:4906   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/ccktbAOa.s:4991   .text.f_sync:0000000000000000 $t
     /tmp/ccktbAOa.s:4998   .text.f_sync:0000000000000000 f_sync
     /tmp/ccktbAOa.s:5132   .text.f_close:0000000000000000 $t
     /tmp/ccktbAOa.s:5139   .text.f_close:0000000000000000 f_close
     /tmp/ccktbAOa.s:5191   .text.f_lseek:0000000000000000 $t
     /tmp/ccktbAOa.s:5198   .text.f_lseek:0000000000000000 f_lseek
     /tmp/ccktbAOa.s:5687   .text.f_opendir:0000000000000000 $t
     /tmp/ccktbAOa.s:5694   .text.f_opendir:0000000000000000 f_opendir
     /tmp/ccktbAOa.s:5836   .text.f_closedir:0000000000000000 $t
     /tmp/ccktbAOa.s:5843   .text.f_closedir:0000000000000000 f_closedir
     /tmp/ccktbAOa.s:5892   .text.f_readdir:0000000000000000 $t
     /tmp/ccktbAOa.s:5899   .text.f_readdir:0000000000000000 f_readdir
     /tmp/ccktbAOa.s:5998   .text.f_stat:0000000000000000 $t
     /tmp/ccktbAOa.s:6005   .text.f_stat:0000000000000000 f_stat
     /tmp/ccktbAOa.s:6083   .text.f_getfree:0000000000000000 $t
     /tmp/ccktbAOa.s:6090   .text.f_getfree:0000000000000000 f_getfree
     /tmp/ccktbAOa.s:6295   .text.f_truncate:0000000000000000 $t
     /tmp/ccktbAOa.s:6302   .text.f_truncate:0000000000000000 f_truncate
     /tmp/ccktbAOa.s:6456   .text.f_unlink:0000000000000000 $t
     /tmp/ccktbAOa.s:6463   .text.f_unlink:0000000000000000 f_unlink
     /tmp/ccktbAOa.s:6634   .text.f_mkdir:0000000000000000 $t
     /tmp/ccktbAOa.s:6641   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/ccktbAOa.s:6960   .text.f_chmod:0000000000000000 $t
     /tmp/ccktbAOa.s:6967   .text.f_chmod:0000000000000000 f_chmod
     /tmp/ccktbAOa.s:7061   .text.f_rename:0000000000000000 $t
     /tmp/ccktbAOa.s:7068   .text.f_rename:0000000000000000 f_rename
     /tmp/ccktbAOa.s:7300   .text.f_utime:0000000000000000 $t
     /tmp/ccktbAOa.s:7307   .text.f_utime:0000000000000000 f_utime
     /tmp/ccktbAOa.s:7401   .text.f_mkfs:0000000000000000 $t
     /tmp/ccktbAOa.s:7408   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/ccktbAOa.s:7935   .text.f_mkfs:0000000000000374 $d
     /tmp/ccktbAOa.s:7942   .text.f_mkfs:0000000000000388 $t
     /tmp/ccktbAOa.s:8288   .text.f_mkfs:00000000000005d4 $d
     /tmp/ccktbAOa.s:8294   .text.f_gets:0000000000000000 $t
     /tmp/ccktbAOa.s:8301   .text.f_gets:0000000000000000 f_gets
     /tmp/ccktbAOa.s:8385   .text.f_putc:0000000000000000 $t
     /tmp/ccktbAOa.s:8392   .text.f_putc:0000000000000000 f_putc
     /tmp/ccktbAOa.s:8461   .text.f_puts:0000000000000000 $t
     /tmp/ccktbAOa.s:8468   .text.f_puts:0000000000000000 f_puts
     /tmp/ccktbAOa.s:8556   .text.f_printf:0000000000000000 $t
ARM GAS  /tmp/ccktbAOa.s 			page 273


     /tmp/ccktbAOa.s:8563   .text.f_printf:0000000000000000 f_printf
     /tmp/ccktbAOa.s:8673   .text.f_printf:000000000000007e $d
     /tmp/ccktbAOa.s:8697   .text.f_printf:00000000000000ac $t
     /tmp/ccktbAOa.s:9179   .bss.FatFs:0000000000000000 $d
     /tmp/ccktbAOa.s:9183   .bss.FatFs:0000000000000000 FatFs
     /tmp/ccktbAOa.s:9186   .bss.Files:0000000000000000 $d
     /tmp/ccktbAOa.s:9190   .bss.Files:0000000000000000 Files
     /tmp/ccktbAOa.s:9193   .bss.Fsid:0000000000000000 $d
     /tmp/ccktbAOa.s:9197   .bss.Fsid:0000000000000000 Fsid
     /tmp/ccktbAOa.s:9200   .rodata.ExCvt:0000000000000000 $d
     /tmp/ccktbAOa.s:9204   .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/ccktbAOa.s:9334   .rodata.cst.9515:0000000000000000 $d
     /tmp/ccktbAOa.s:9338   .rodata.cst.9515:0000000000000000 cst.9515
     /tmp/ccktbAOa.s:9351   .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/ccktbAOa.s:9359   .rodata.follow_path.str1.4:0000000000000000 $d
     /tmp/ccktbAOa.s:9360   .rodata.follow_path.str1.4:0000000000000000 .LC0
     /tmp/ccktbAOa.s:9363   .rodata.vst.9514:0000000000000000 $d
     /tmp/ccktbAOa.s:9367   .rodata.vst.9514:0000000000000000 vst.9514
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
disk_write
disk_read
disk_status
disk_initialize
disk_ioctl
get_fattime
