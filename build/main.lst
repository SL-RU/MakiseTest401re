ARM GAS  /tmp/ccTkIj2n.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_f2d
  16              		.global	__aeabi_dmul
  17              		.global	__aeabi_dadd
  18              		.global	__aeabi_d2iz
  19              		.section	.text._mt_d,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	_mt_d
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu fpv4-sp-d16
  28              	_mt_d:
  29              	.LFB129:
  30              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
   8:Src/main.c    ****   * All rights reserved.
   9:Src/main.c    ****   *
  10:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  11:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  14:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  15:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  17:Src/main.c    ****   *    and/or other materials provided with the distribution.
  18:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  19:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  20:Src/main.c    ****   *    derived from this software without specific written permission.
  21:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  22:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  23:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  24:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  25:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  26:Src/main.c    ****   *    this license. 
  27:Src/main.c    ****   *
  28:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
ARM GAS  /tmp/ccTkIj2n.s 			page 2


  29:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  30:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  31:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  32:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  33:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  34:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  35:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  36:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  37:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  38:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  39:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  40:Src/main.c    ****   *
  41:Src/main.c    ****   ******************************************************************************
  42:Src/main.c    ****   */
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f4xx_hal.h"
  46:Src/main.c    **** #include "dma.h"
  47:Src/main.c    **** #include "fatfs.h"
  48:Src/main.c    **** #include "i2c.h"
  49:Src/main.c    **** #include "sdio.h"
  50:Src/main.c    **** #include "spi.h"
  51:Src/main.c    **** #include "tim.h"
  52:Src/main.c    **** #include "usart.h"
  53:Src/main.c    **** #include "gpio.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** #include <stdio.h>
  57:Src/main.c    **** #include "ili9340.h"
  58:Src/main.c    **** #include "makise_test.h"
  59:Src/main.c    **** #include "makise_primitives.h"
  60:Src/main.c    **** #include <math.h>
  61:Src/main.c    **** #include <controls_595.h>
  62:Src/main.c    **** /* USER CODE END Includes */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE BEGIN PV */
  67:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END PV */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  72:Src/main.c    **** void SystemClock_Config(void);
  73:Src/main.c    **** void Error_Handler(void);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PFP */
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    **** /* USER CODE END PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN 0 */
  81:Src/main.c    **** #define      LSM303_CTRL0              0x1F  
  82:Src/main.c    **** #define      LSM303_CTRL1              0x20  
  83:Src/main.c    **** #define      LSM303_CTRL2              0x21  
  84:Src/main.c    **** #define      LSM303_CTRL3              0x22  
  85:Src/main.c    **** #define      LSM303_CTRL4              0x23  
ARM GAS  /tmp/ccTkIj2n.s 			page 3


  86:Src/main.c    **** #define      LSM303_CTRL5              0x24  
  87:Src/main.c    **** #define      LSM303_CTRL6              0x25  
  88:Src/main.c    **** #define      LSM303_CTRL7              0x26 
  89:Src/main.c    **** #define      LSM303_WHO_AM_I           0x0F  
  90:Src/main.c    **** #define      LSM303_D_OUT_X_L_M        0x08
  91:Src/main.c    **** #define 	M_PI   3.14159265358979323846 /* pi */
  92:Src/main.c    **** uint8_t ReadRegister(uint8_t Register)
  93:Src/main.c    **** {
  94:Src/main.c    ****     uint8_t result = 0;
  95:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &Register, 1, 100);
  96:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
  97:Src/main.c    **** 
  98:Src/main.c    ****     return result;
  99:Src/main.c    **** }
 100:Src/main.c    **** void WriteRegister(uint8_t Register, uint8_t val)
 101:Src/main.c    **** {
 102:Src/main.c    ****     uint8_t d[] = {Register, val};
 103:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 104:Src/main.c    **** }
 105:Src/main.c    **** 
 106:Src/main.c    **** float ang = 0;
 107:Src/main.c    **** void lsm303_read()
 108:Src/main.c    **** {
 109:Src/main.c    ****     uint8_t reg = LSM303_D_OUT_X_L_M | (1 << 7);
 110:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &reg, 1, 100);
 111:Src/main.c    **** 
 112:Src/main.c    ****     HAL_Delay(10);
 113:Src/main.c    ****     
 114:Src/main.c    ****     uint8_t r[6];
 115:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, r, 6, 100);
 116:Src/main.c    **** 
 117:Src/main.c    ****     int16_t x = (int16_t)(r[1] << 8 | r[0]);
 118:Src/main.c    ****     int16_t y = (int16_t)(r[3] << 8 | r[2]);
 119:Src/main.c    ****     int16_t z = (int16_t)(r[5] << 8 | r[4]);
 120:Src/main.c    ****     ang = atan2(y,x);
 121:Src/main.c    ****     //printf("c %04d %04d %04d %f\n", x, y, z, ang*180.0/M_PI);
 122:Src/main.c    **** }
 123:Src/main.c    **** 
 124:Src/main.c    **** 
 125:Src/main.c    **** 
 126:Src/main.c    **** 
 127:Src/main.c    **** MakiseGUI* mgui;
 128:Src/main.c    **** void _mt_d(MakiseGUI* gui)
 129:Src/main.c    **** {
  31              		.loc 1 129 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 16
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 20
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTkIj2n.s 			page 4


  44 0002 2DED028B 		vpush.64	{d8}
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 28
  47              		.cfi_offset 80, -28
  48              		.cfi_offset 81, -24
 130:Src/main.c    **** //    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_1);
 131:Src/main.c    **** //    makise_d_clear(mgui->buffer, 0);
 132:Src/main.c    ****     //makise_d_circle_filled(mgui->buffer, 50, (HAL_GetTick() % 500)/2 + 50, 40, 1, 3);
 133:Src/main.c    ****     makise_d_line(mgui->buffer, 120, 160, cos(ang) * 100 + 120, sin(ang) * 100 + 160, 1);
  49              		.loc 1 133 0
  50 0006 2D4B     		ldr	r3, .L6
  51 0008 2D4E     		ldr	r6, .L6+4
  52 000a 1868     		ldr	r0, [r3]	@ float
  53              	.LVL1:
 129:Src/main.c    **** //    HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_1);
  54              		.loc 1 129 0
  55 000c 89B0     		sub	sp, sp, #36
  56              	.LCFI2:
  57              		.cfi_def_cfa_offset 64
  58              		.loc 1 133 0
  59 000e FFF7FEFF 		bl	__aeabi_f2d
  60              	.LVL2:
  61 0012 41EC100B 		vmov	d0, r0, r1
  62 0016 41EC180B 		vmov	d8, r0, r1
  63 001a FFF7FEFF 		bl	cos
  64              	.LVL3:
  65 001e 51EC100B 		vmov	r0, r1, d0
  66 0022 B0EE480A 		vmov.f32	s0, s16
  67 0026 F0EE680A 		vmov.f32	s1, s17
  68 002a CDE90601 		strd	r0, [sp, #24]
  69 002e FFF7FEFF 		bl	sin
  70              	.LVL4:
  71 0032 DDE90601 		ldrd	r0, [sp, #24]
  72 0036 0022     		movs	r2, #0
  73 0038 224B     		ldr	r3, .L6+8
  74 003a 8DED040B 		vstr.64	d0, [sp, #16]
  75 003e FFF7FEFF 		bl	__aeabi_dmul
  76              	.LVL5:
  77 0042 0022     		movs	r2, #0
  78 0044 204B     		ldr	r3, .L6+12
  79 0046 FFF7FEFF 		bl	__aeabi_dadd
  80              	.LVL6:
  81 004a FFF7FEFF 		bl	__aeabi_d2iz
  82              	.LVL7:
  83 004e 9DED040B 		vldr.64	d0, [sp, #16]
  84 0052 3468     		ldr	r4, [r6]
  85 0054 1B4B     		ldr	r3, .L6+8
  86 0056 2468     		ldr	r4, [r4]
  87 0058 05B2     		sxth	r5, r0
  88 005a 0127     		movs	r7, #1
  89 005c 51EC100B 		vmov	r0, r1, d0
  90 0060 0022     		movs	r2, #0
  91 0062 0197     		str	r7, [sp, #4]
  92 0064 FFF7FEFF 		bl	__aeabi_dmul
  93              	.LVL8:
  94 0068 0022     		movs	r2, #0
  95 006a 184B     		ldr	r3, .L6+16
ARM GAS  /tmp/ccTkIj2n.s 			page 5


  96 006c FFF7FEFF 		bl	__aeabi_dadd
  97              	.LVL9:
  98 0070 FFF7FEFF 		bl	__aeabi_d2iz
  99              	.LVL10:
 100 0074 00B2     		sxth	r0, r0
 101 0076 2B46     		mov	r3, r5
 102 0078 0090     		str	r0, [sp]
 103 007a A022     		movs	r2, #160
 104 007c 2046     		mov	r0, r4
 105 007e 7821     		movs	r1, #120
 106 0080 FFF7FEFF 		bl	makise_d_line
 107              	.LVL11:
 108 0084 0024     		movs	r4, #0
 109              	.LBB14:
 134:Src/main.c    ****     for (uint32_t i = 0; i < 16; i++) {
 110              		.loc 1 134 0
 111 0086 2546     		mov	r5, r4
 135:Src/main.c    **** 	
 136:Src/main.c    **** 	makise_d_rect_filled(mgui->buffer, i * 10, 0, 10, 10, i, i);
 112              		.loc 1 136 0
 113 0088 0A27     		movs	r7, #10
 114              	.LVL12:
 115              	.L2:
 116              		.loc 1 136 0 is_stmt 0 discriminator 3
 117 008a 3368     		ldr	r3, [r6]
 118 008c 21B2     		sxth	r1, r4
 119 008e 1868     		ldr	r0, [r3]
 120 0090 0295     		str	r5, [sp, #8]
 121 0092 0195     		str	r5, [sp, #4]
 122 0094 0097     		str	r7, [sp]
 123 0096 0A23     		movs	r3, #10
 124 0098 0022     		movs	r2, #0
 134:Src/main.c    ****     for (uint32_t i = 0; i < 16; i++) {
 125              		.loc 1 134 0 is_stmt 1 discriminator 3
 126 009a 0135     		adds	r5, r5, #1
 127              	.LVL13:
 128              		.loc 1 136 0 discriminator 3
 129 009c FFF7FEFF 		bl	makise_d_rect_filled
 130              	.LVL14:
 131 00a0 0A34     		adds	r4, r4, #10
 134:Src/main.c    ****     for (uint32_t i = 0; i < 16; i++) {
 132              		.loc 1 134 0 discriminator 3
 133 00a2 102D     		cmp	r5, #16
 134 00a4 A4B2     		uxth	r4, r4
 135 00a6 F0D1     		bne	.L2
 136              	.LBE14:
 137:Src/main.c    ****     }
 138:Src/main.c    **** 
 139:Src/main.c    **** //    makise_d_string_frame(mgui->buffer, sample_string, MDTextAll, 20, 20, 200, 100, &F_Arial15, 3
 140:Src/main.c    **** //    makise_d_rect(mgui->buffer, 20, 20, 200, 100, MC_Green);
 141:Src/main.c    ****     
 142:Src/main.c    ****     //makise_d_string(mgui->buffer, "KEEEK", 100, 30, &F_Arial12, 2);    
 143:Src/main.c    ****     makise_g_host_call(host, M_G_CALL_DRAW);
 137              		.loc 1 143 0
 138 00a8 094B     		ldr	r3, .L6+20
 139 00aa 1868     		ldr	r0, [r3]
 140 00ac 0121     		movs	r1, #1
ARM GAS  /tmp/ccTkIj2n.s 			page 6


 144:Src/main.c    **** }
 141              		.loc 1 144 0
 142 00ae 09B0     		add	sp, sp, #36
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 28
 145              		@ sp needed
 146 00b0 BDEC028B 		vldm	sp!, {d8}
 147              	.LCFI4:
 148              		.cfi_restore 80
 149              		.cfi_restore 81
 150              		.cfi_def_cfa_offset 20
 151 00b4 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 152              	.LCFI5:
 153              		.cfi_restore 14
 154              		.cfi_restore 7
 155              		.cfi_restore 6
 156              		.cfi_restore 5
 157              		.cfi_restore 4
 158              		.cfi_def_cfa_offset 0
 159              	.LVL15:
 143:Src/main.c    **** }
 160              		.loc 1 143 0
 161 00b8 FFF7FEBF 		b	makise_g_host_call
 162              	.LVL16:
 163              	.L7:
 164              		.align	2
 165              	.L6:
 166 00bc 00000000 		.word	.LANCHOR0
 167 00c0 00000000 		.word	mgui
 168 00c4 00005940 		.word	1079574528
 169 00c8 00005E40 		.word	1079902208
 170 00cc 00006440 		.word	1080295424
 171 00d0 00000000 		.word	host
 172              		.cfi_endproc
 173              	.LFE129:
 175              		.section	.text.ReadRegister,"ax",%progbits
 176              		.align	1
 177              		.p2align 2,,3
 178              		.global	ReadRegister
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	ReadRegister:
 185              	.LFB126:
  93:Src/main.c    ****     uint8_t result = 0;
 186              		.loc 1 93 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 16
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              	.LVL17:
 191 0000 70B5     		push	{r4, r5, r6, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 16
 194              		.cfi_offset 4, -16
 195              		.cfi_offset 5, -12
 196              		.cfi_offset 6, -8
ARM GAS  /tmp/ccTkIj2n.s 			page 7


 197              		.cfi_offset 14, -4
  95:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
 198              		.loc 1 95 0
 199 0002 0E4C     		ldr	r4, .L10
  93:Src/main.c    ****     uint8_t result = 0;
 200              		.loc 1 93 0
 201 0004 86B0     		sub	sp, sp, #24
 202              	.LCFI7:
 203              		.cfi_def_cfa_offset 40
  95:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
 204              		.loc 1 95 0
 205 0006 6425     		movs	r5, #100
  93:Src/main.c    ****     uint8_t result = 0;
 206              		.loc 1 93 0
 207 0008 8DF80F00 		strb	r0, [sp, #15]
  95:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
 208              		.loc 1 95 0
 209 000c 0DF10F02 		add	r2, sp, #15
 210 0010 2046     		mov	r0, r4
 211              	.LVL18:
 212 0012 0095     		str	r5, [sp]
  94:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &Register, 1, 100);
 213              		.loc 1 94 0
 214 0014 0026     		movs	r6, #0
  95:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
 215              		.loc 1 95 0
 216 0016 0123     		movs	r3, #1
 217 0018 3A21     		movs	r1, #58
  94:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &Register, 1, 100);
 218              		.loc 1 94 0
 219 001a 8DF81760 		strb	r6, [sp, #23]
  95:Src/main.c    ****     HAL_I2C_Master_Receive(&hi2c1, 0x3a, &result, 1, 100);
 220              		.loc 1 95 0
 221 001e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 222              	.LVL19:
  96:Src/main.c    **** 
 223              		.loc 1 96 0
 224 0022 0095     		str	r5, [sp]
 225 0024 2046     		mov	r0, r4
 226 0026 0123     		movs	r3, #1
 227 0028 0DF11702 		add	r2, sp, #23
 228 002c 3A21     		movs	r1, #58
 229 002e FFF7FEFF 		bl	HAL_I2C_Master_Receive
 230              	.LVL20:
  99:Src/main.c    **** void WriteRegister(uint8_t Register, uint8_t val)
 231              		.loc 1 99 0
 232 0032 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 233 0036 06B0     		add	sp, sp, #24
 234              	.LCFI8:
 235              		.cfi_def_cfa_offset 16
 236              		@ sp needed
 237 0038 70BD     		pop	{r4, r5, r6, pc}
 238              	.L11:
 239 003a 00BF     		.align	2
 240              	.L10:
 241 003c 00000000 		.word	hi2c1
 242              		.cfi_endproc
ARM GAS  /tmp/ccTkIj2n.s 			page 8


 243              	.LFE126:
 245              		.section	.text.WriteRegister,"ax",%progbits
 246              		.align	1
 247              		.p2align 2,,3
 248              		.global	WriteRegister
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	WriteRegister:
 255              	.LFB127:
 101:Src/main.c    ****     uint8_t d[] = {Register, val};
 256              		.loc 1 101 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              	.LVL21:
 261 0000 00B5     		push	{lr}
 262              	.LCFI9:
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 14, -4
 265 0002 85B0     		sub	sp, sp, #20
 266              	.LCFI10:
 267              		.cfi_def_cfa_offset 24
 103:Src/main.c    **** }
 268              		.loc 1 103 0
 269 0004 6423     		movs	r3, #100
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 270              		.loc 1 102 0
 271 0006 8DF80C00 		strb	r0, [sp, #12]
 272 000a 8DF80D10 		strb	r1, [sp, #13]
 103:Src/main.c    **** }
 273              		.loc 1 103 0
 274 000e 0093     		str	r3, [sp]
 275 0010 03AA     		add	r2, sp, #12
 276 0012 0223     		movs	r3, #2
 277 0014 3A21     		movs	r1, #58
 278              	.LVL22:
 279 0016 0348     		ldr	r0, .L14
 280              	.LVL23:
 281 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 282              	.LVL24:
 104:Src/main.c    **** 
 283              		.loc 1 104 0
 284 001c 05B0     		add	sp, sp, #20
 285              	.LCFI11:
 286              		.cfi_def_cfa_offset 4
 287              		@ sp needed
 288 001e 5DF804FB 		ldr	pc, [sp], #4
 289              	.L15:
 290 0022 00BF     		.align	2
 291              	.L14:
 292 0024 00000000 		.word	hi2c1
 293              		.cfi_endproc
 294              	.LFE127:
 296              		.global	__aeabi_i2d
 297              		.global	__aeabi_d2f
ARM GAS  /tmp/ccTkIj2n.s 			page 9


 298              		.section	.text.lsm303_read,"ax",%progbits
 299              		.align	1
 300              		.p2align 2,,3
 301              		.global	lsm303_read
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
 307              	lsm303_read:
 308              	.LFB128:
 108:Src/main.c    ****     uint8_t reg = LSM303_D_OUT_X_L_M | (1 << 7);
 309              		.loc 1 108 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 24
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 70B5     		push	{r4, r5, r6, lr}
 314              	.LCFI12:
 315              		.cfi_def_cfa_offset 16
 316              		.cfi_offset 4, -16
 317              		.cfi_offset 5, -12
 318              		.cfi_offset 6, -8
 319              		.cfi_offset 14, -4
 320 0002 88B0     		sub	sp, sp, #32
 321              	.LCFI13:
 322              		.cfi_def_cfa_offset 48
 109:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &reg, 1, 100);
 323              		.loc 1 109 0
 324 0004 08AA     		add	r2, sp, #32
 110:Src/main.c    **** 
 325              		.loc 1 110 0
 326 0006 1B4C     		ldr	r4, .L18
 120:Src/main.c    ****     //printf("c %04d %04d %04d %f\n", x, y, z, ang*180.0/M_PI);
 327              		.loc 1 120 0
 328 0008 1B4E     		ldr	r6, .L18+4
 110:Src/main.c    **** 
 329              		.loc 1 110 0
 330 000a 6425     		movs	r5, #100
 109:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, &reg, 1, 100);
 331              		.loc 1 109 0
 332 000c 8823     		movs	r3, #136
 333 000e 02F8093D 		strb	r3, [r2, #-9]!
 110:Src/main.c    **** 
 334              		.loc 1 110 0
 335 0012 3A21     		movs	r1, #58
 336 0014 0123     		movs	r3, #1
 337 0016 2046     		mov	r0, r4
 338 0018 0095     		str	r5, [sp]
 339 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 340              	.LVL25:
 112:Src/main.c    ****     
 341              		.loc 1 112 0
 342 001e 0A20     		movs	r0, #10
 343 0020 FFF7FEFF 		bl	HAL_Delay
 344              	.LVL26:
 115:Src/main.c    **** 
 345              		.loc 1 115 0
 346 0024 06AA     		add	r2, sp, #24
ARM GAS  /tmp/ccTkIj2n.s 			page 10


 347 0026 0095     		str	r5, [sp]
 348 0028 2046     		mov	r0, r4
 349 002a 0623     		movs	r3, #6
 350 002c 3A21     		movs	r1, #58
 351 002e FFF7FEFF 		bl	HAL_I2C_Master_Receive
 352              	.LVL27:
 117:Src/main.c    ****     int16_t y = (int16_t)(r[3] << 8 | r[2]);
 353              		.loc 1 117 0
 354 0032 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 355 0036 9DF81800 		ldrb	r0, [sp, #24]	@ zero_extendqisi2
 356 003a 40EA0320 		orr	r0, r0, r3, lsl #8
 120:Src/main.c    ****     //printf("c %04d %04d %04d %f\n", x, y, z, ang*180.0/M_PI);
 357              		.loc 1 120 0
 358 003e 00B2     		sxth	r0, r0
 359 0040 FFF7FEFF 		bl	__aeabi_i2d
 360              	.LVL28:
 118:Src/main.c    ****     int16_t z = (int16_t)(r[5] << 8 | r[4]);
 361              		.loc 1 118 0
 362 0044 9DF81B30 		ldrb	r3, [sp, #27]	@ zero_extendqisi2
 120:Src/main.c    ****     //printf("c %04d %04d %04d %f\n", x, y, z, ang*180.0/M_PI);
 363              		.loc 1 120 0
 364 0048 CDE90201 		strd	r0, [sp, #8]
 118:Src/main.c    ****     int16_t z = (int16_t)(r[5] << 8 | r[4]);
 365              		.loc 1 118 0
 366 004c 9DF81A00 		ldrb	r0, [sp, #26]	@ zero_extendqisi2
 367              	.LVL29:
 368 0050 40EA0320 		orr	r0, r0, r3, lsl #8
 369              	.LVL30:
 120:Src/main.c    ****     //printf("c %04d %04d %04d %f\n", x, y, z, ang*180.0/M_PI);
 370              		.loc 1 120 0
 371 0054 00B2     		sxth	r0, r0
 372 0056 FFF7FEFF 		bl	__aeabi_i2d
 373              	.LVL31:
 374 005a 9DED021B 		vldr.64	d1, [sp, #8]
 375 005e 41EC100B 		vmov	d0, r0, r1
 376 0062 FFF7FEFF 		bl	atan2
 377              	.LVL32:
 378 0066 51EC100B 		vmov	r0, r1, d0
 379 006a FFF7FEFF 		bl	__aeabi_d2f
 380              	.LVL33:
 381 006e 3060     		str	r0, [r6]	@ float
 122:Src/main.c    **** 
 382              		.loc 1 122 0
 383 0070 08B0     		add	sp, sp, #32
 384              	.LCFI14:
 385              		.cfi_def_cfa_offset 16
 386              		@ sp needed
 387 0072 70BD     		pop	{r4, r5, r6, pc}
 388              	.L19:
 389              		.align	2
 390              	.L18:
 391 0074 00000000 		.word	hi2c1
 392 0078 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE128:
 396              		.section	.text.SystemClock_Config,"ax",%progbits
 397              		.align	1
ARM GAS  /tmp/ccTkIj2n.s 			page 11


 398              		.p2align 2,,3
 399              		.global	SystemClock_Config
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	SystemClock_Config:
 406              	.LFB131:
 145:Src/main.c    **** 
 146:Src/main.c    **** 
 147:Src/main.c    **** 
 148:Src/main.c    **** /* USER CODE END 0 */
 149:Src/main.c    **** 
 150:Src/main.c    **** int main(void)
 151:Src/main.c    **** {
 152:Src/main.c    **** 
 153:Src/main.c    ****   /* USER CODE BEGIN 1 */
 154:Src/main.c    **** 
 155:Src/main.c    ****   /* USER CODE END 1 */
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 160:Src/main.c    ****   HAL_Init();
 161:Src/main.c    **** 
 162:Src/main.c    ****   /* Configure the system clock */
 163:Src/main.c    ****   SystemClock_Config();
 164:Src/main.c    **** 
 165:Src/main.c    ****   /* Initialize all configured peripherals */
 166:Src/main.c    ****   MX_GPIO_Init();
 167:Src/main.c    ****   MX_DMA_Init();
 168:Src/main.c    ****   MX_SDIO_SD_Init();
 169:Src/main.c    ****   MX_SPI1_Init();
 170:Src/main.c    ****   MX_TIM3_Init();
 171:Src/main.c    ****   MX_FATFS_Init();
 172:Src/main.c    ****   MX_USART6_UART_Init();
 173:Src/main.c    ****   MX_I2C1_Init();
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE BEGIN 2 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   
 178:Src/main.c    ****   //WriteRegister(LSM303_CTRL2, 0x00);
 179:Src/main.c    ****   //WriteRegister(LSM303_CTRL1, 0x57);
 180:Src/main.c    ****   WriteRegister(LSM303_CTRL5, 0b01110000);
 181:Src/main.c    ****   WriteRegister(LSM303_CTRL6, 0x20);
 182:Src/main.c    ****   WriteRegister(LSM303_CTRL7, 0x00);
 183:Src/main.c    **** 
 184:Src/main.c    ****   printf("acc %d\n", ReadRegister(LSM303_WHO_AM_I));
 185:Src/main.c    **** 
 186:Src/main.c    **** //  controls_595_init(buttons, 4, outs, 4, &but_h);
 187:Src/main.c    ****   controls_595_update();
 188:Src/main.c    **** 
 189:Src/main.c    **** //  printf("%d\n", Arial_12_SymbolTable[4]);
 190:Src/main.c    ****   mgui = mt_start();
 191:Src/main.c    ****   mgui->draw = &_mt_d;
 192:Src/main.c    **** //  printf("%d\n", Arial_12_SymbolTable[2]);
 193:Src/main.c    ****   
ARM GAS  /tmp/ccTkIj2n.s 			page 12


 194:Src/main.c    ****   /* USER CODE END 2 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* Infinite loop */
 197:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 198:Src/main.c    ****   uint32_t c = 0;
 199:Src/main.c    ****   while (1)
 200:Src/main.c    ****   {
 201:Src/main.c    ****       c++;
 202:Src/main.c    **** //      if(c%5 == 0)
 203:Src/main.c    **** //	  lsm303_read();
 204:Src/main.c    **** //      HAL_Delay(10);
 205:Src/main.c    ****       controls_595_update();      
 206:Src/main.c    ****       
 207:Src/main.c    ****   /* USER CODE END WHILE */
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* USER CODE BEGIN 3 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   }
 212:Src/main.c    ****   /* USER CODE END 3 */
 213:Src/main.c    **** 
 214:Src/main.c    **** }
 215:Src/main.c    **** 
 216:Src/main.c    **** /** System Clock Configuration
 217:Src/main.c    **** */
 218:Src/main.c    **** void SystemClock_Config(void)
 219:Src/main.c    **** {
 407              		.loc 1 219 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 80
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 412              	.LCFI15:
 413              		.cfi_def_cfa_offset 20
 414              		.cfi_offset 4, -20
 415              		.cfi_offset 5, -16
 416              		.cfi_offset 6, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 95B0     		sub	sp, sp, #84
 420              	.LCFI16:
 421              		.cfi_def_cfa_offset 104
 422              	.LBB15:
 220:Src/main.c    **** 
 221:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 222:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 223:Src/main.c    **** 
 224:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 225:Src/main.c    ****     */
 226:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 423              		.loc 1 226 0
 424 0004 0020     		movs	r0, #0
 425 0006 284B     		ldr	r3, .L28
 426 0008 0190     		str	r0, [sp, #4]
 427 000a 196C     		ldr	r1, [r3, #64]
 428              	.LBE15:
 429              	.LBB16:
 227:Src/main.c    **** 
ARM GAS  /tmp/ccTkIj2n.s 			page 13


 228:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 430              		.loc 1 228 0
 431 000c 274A     		ldr	r2, .L28+4
 432              	.LBE16:
 433              	.LBB17:
 226:Src/main.c    **** 
 434              		.loc 1 226 0
 435 000e 41F08051 		orr	r1, r1, #268435456
 436 0012 1964     		str	r1, [r3, #64]
 437 0014 1B6C     		ldr	r3, [r3, #64]
 438 0016 03F08053 		and	r3, r3, #268435456
 439 001a 0193     		str	r3, [sp, #4]
 440 001c 019B     		ldr	r3, [sp, #4]
 441              	.LBE17:
 442              	.LBB18:
 443              		.loc 1 228 0
 444 001e 0290     		str	r0, [sp, #8]
 445 0020 1368     		ldr	r3, [r2]
 446 0022 23F44043 		bic	r3, r3, #49152
 447 0026 43F40043 		orr	r3, r3, #32768
 448 002a 1360     		str	r3, [r2]
 449 002c 1368     		ldr	r3, [r2]
 450 002e 03F44043 		and	r3, r3, #49152
 451 0032 0293     		str	r3, [sp, #8]
 452              	.LBE18:
 229:Src/main.c    **** 
 230:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 231:Src/main.c    ****     */
 232:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 233:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 453              		.loc 1 234 0
 454 0034 0224     		movs	r4, #2
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 455              		.loc 1 236 0
 456 0036 0425     		movs	r5, #4
 232:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 457              		.loc 1 232 0
 458 0038 0126     		movs	r6, #1
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 459              		.loc 1 233 0
 460 003a 4FF48031 		mov	r1, #65536
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 461              		.loc 1 235 0
 462 003e 4FF48002 		mov	r2, #4194304
 237:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 463              		.loc 1 237 0
 464 0042 5423     		movs	r3, #84
 238:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 239:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 240:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 465              		.loc 1 240 0
 466 0044 08A8     		add	r0, sp, #32
 467              	.LBB19:
 228:Src/main.c    **** 
 468              		.loc 1 228 0
ARM GAS  /tmp/ccTkIj2n.s 			page 14


 469 0046 029F     		ldr	r7, [sp, #8]
 470              	.LBE19:
 232:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 471              		.loc 1 232 0
 472 0048 0896     		str	r6, [sp, #32]
 233:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 473              		.loc 1 233 0
 474 004a 0991     		str	r1, [sp, #36]
 234:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 475              		.loc 1 234 0
 476 004c 0E94     		str	r4, [sp, #56]
 238:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 477              		.loc 1 238 0
 478 004e 1294     		str	r4, [sp, #72]
 235:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 479              		.loc 1 235 0
 480 0050 0F92     		str	r2, [sp, #60]
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 84;
 481              		.loc 1 236 0
 482 0052 1095     		str	r5, [sp, #64]
 239:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 483              		.loc 1 239 0
 484 0054 1395     		str	r5, [sp, #76]
 237:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 485              		.loc 1 237 0
 486 0056 1193     		str	r3, [sp, #68]
 487              		.loc 1 240 0
 488 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 489              	.LVL34:
 490 005c 00B1     		cbz	r0, .L21
 491              	.L25:
 492 005e FEE7     		b	.L25
 493              	.L21:
 494 0060 0346     		mov	r3, r0
 241:Src/main.c    ****   {
 242:Src/main.c    ****     Error_Handler();
 243:Src/main.c    ****   }
 244:Src/main.c    **** 
 245:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 246:Src/main.c    ****     */
 247:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 248:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 249:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 250:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 251:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 252:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 253:Src/main.c    **** 
 254:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 495              		.loc 1 254 0
 496 0062 2146     		mov	r1, r4
 251:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 497              		.loc 1 251 0
 498 0064 4FF48052 		mov	r2, #4096
 247:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 499              		.loc 1 247 0
 500 0068 0F26     		movs	r6, #15
 501              		.loc 1 254 0
ARM GAS  /tmp/ccTkIj2n.s 			page 15


 502 006a 03A8     		add	r0, sp, #12
 249:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 503              		.loc 1 249 0
 504 006c 0494     		str	r4, [sp, #16]
 250:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 505              		.loc 1 250 0
 506 006e 0593     		str	r3, [sp, #20]
 252:Src/main.c    **** 
 507              		.loc 1 252 0
 508 0070 0793     		str	r3, [sp, #28]
 247:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 509              		.loc 1 247 0
 510 0072 0396     		str	r6, [sp, #12]
 251:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 511              		.loc 1 251 0
 512 0074 0692     		str	r2, [sp, #24]
 513              		.loc 1 254 0
 514 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 515              	.LVL35:
 516 007a 0446     		mov	r4, r0
 517 007c 00B1     		cbz	r0, .L23
 518              	.L26:
 519 007e FEE7     		b	.L26
 520              	.L23:
 255:Src/main.c    ****   {
 256:Src/main.c    ****     Error_Handler();
 257:Src/main.c    ****   }
 258:Src/main.c    **** 
 259:Src/main.c    ****     /**Configure the Systick interrupt time 
 260:Src/main.c    ****     */
 261:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 521              		.loc 1 261 0
 522 0080 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 523              	.LVL36:
 524 0084 0A4B     		ldr	r3, .L28+8
 525 0086 A3FB0030 		umull	r3, r0, r3, r0
 526 008a 8009     		lsrs	r0, r0, #6
 527 008c FFF7FEFF 		bl	HAL_SYSTICK_Config
 528              	.LVL37:
 262:Src/main.c    **** 
 263:Src/main.c    ****     /**Configure the Systick 
 264:Src/main.c    ****     */
 265:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 529              		.loc 1 265 0
 530 0090 2846     		mov	r0, r5
 531 0092 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 532              	.LVL38:
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 268:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 533              		.loc 1 268 0
 534 0096 2246     		mov	r2, r4
 535 0098 2146     		mov	r1, r4
 536 009a 4FF0FF30 		mov	r0, #-1
 537 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 538              	.LVL39:
 269:Src/main.c    **** }
ARM GAS  /tmp/ccTkIj2n.s 			page 16


 539              		.loc 1 269 0
 540 00a2 15B0     		add	sp, sp, #84
 541              	.LCFI17:
 542              		.cfi_def_cfa_offset 20
 543              		@ sp needed
 544 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 545              	.L29:
 546 00a6 00BF     		.align	2
 547              	.L28:
 548 00a8 00380240 		.word	1073887232
 549 00ac 00700040 		.word	1073770496
 550 00b0 D34D6210 		.word	274877907
 551              		.cfi_endproc
 552              	.LFE131:
 554              		.section	.text.startup.main,"ax",%progbits
 555              		.align	1
 556              		.p2align 2,,3
 557              		.global	main
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu fpv4-sp-d16
 563              	main:
 564              	.LFB130:
 151:Src/main.c    **** 
 565              		.loc 1 151 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 70B5     		push	{r4, r5, r6, lr}
 570              	.LCFI18:
 571              		.cfi_def_cfa_offset 16
 572              		.cfi_offset 4, -16
 573              		.cfi_offset 5, -12
 574              		.cfi_offset 6, -8
 575              		.cfi_offset 14, -4
 576 0002 84B0     		sub	sp, sp, #16
 577              	.LCFI19:
 578              		.cfi_def_cfa_offset 32
 579              	.LBB20:
 580              	.LBB21:
 103:Src/main.c    **** }
 581              		.loc 1 103 0
 582 0004 6424     		movs	r4, #100
 583              	.LBE21:
 584              	.LBE20:
 160:Src/main.c    **** 
 585              		.loc 1 160 0
 586 0006 FFF7FEFF 		bl	HAL_Init
 587              	.LVL40:
 588              	.LBB26:
 589              	.LBB22:
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 590              		.loc 1 102 0
 591 000a 2426     		movs	r6, #36
 592              	.LBE22:
 593              	.LBE26:
ARM GAS  /tmp/ccTkIj2n.s 			page 17


 163:Src/main.c    **** 
 594              		.loc 1 163 0
 595 000c FFF7FEFF 		bl	SystemClock_Config
 596              	.LVL41:
 597              	.LBB27:
 598              	.LBB23:
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 599              		.loc 1 102 0
 600 0010 7025     		movs	r5, #112
 601              	.LBE23:
 602              	.LBE27:
 166:Src/main.c    ****   MX_DMA_Init();
 603              		.loc 1 166 0
 604 0012 FFF7FEFF 		bl	MX_GPIO_Init
 605              	.LVL42:
 167:Src/main.c    ****   MX_SDIO_SD_Init();
 606              		.loc 1 167 0
 607 0016 FFF7FEFF 		bl	MX_DMA_Init
 608              	.LVL43:
 168:Src/main.c    ****   MX_SPI1_Init();
 609              		.loc 1 168 0
 610 001a FFF7FEFF 		bl	MX_SDIO_SD_Init
 611              	.LVL44:
 169:Src/main.c    ****   MX_TIM3_Init();
 612              		.loc 1 169 0
 613 001e FFF7FEFF 		bl	MX_SPI1_Init
 614              	.LVL45:
 170:Src/main.c    ****   MX_FATFS_Init();
 615              		.loc 1 170 0
 616 0022 FFF7FEFF 		bl	MX_TIM3_Init
 617              	.LVL46:
 171:Src/main.c    ****   MX_USART6_UART_Init();
 618              		.loc 1 171 0
 619 0026 FFF7FEFF 		bl	MX_FATFS_Init
 620              	.LVL47:
 172:Src/main.c    ****   MX_I2C1_Init();
 621              		.loc 1 172 0
 622 002a FFF7FEFF 		bl	MX_USART6_UART_Init
 623              	.LVL48:
 173:Src/main.c    **** 
 624              		.loc 1 173 0
 625 002e FFF7FEFF 		bl	MX_I2C1_Init
 626              	.LVL49:
 627              	.LBB28:
 628              	.LBB24:
 103:Src/main.c    **** }
 629              		.loc 1 103 0
 630 0032 03AA     		add	r2, sp, #12
 631 0034 0094     		str	r4, [sp]
 632 0036 0223     		movs	r3, #2
 633 0038 3A21     		movs	r1, #58
 634 003a 1948     		ldr	r0, .L33
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 635              		.loc 1 102 0
 636 003c 8DF80C60 		strb	r6, [sp, #12]
 637 0040 8DF80D50 		strb	r5, [sp, #13]
 638              	.LBE24:
ARM GAS  /tmp/ccTkIj2n.s 			page 18


 639              	.LBE28:
 640              	.LBB29:
 641              	.LBB30:
 642 0044 2526     		movs	r6, #37
 643              	.LBE30:
 644              	.LBE29:
 645              	.LBB33:
 646              	.LBB25:
 103:Src/main.c    **** }
 647              		.loc 1 103 0
 648 0046 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 649              	.LVL50:
 650              	.LBE25:
 651              	.LBE33:
 652              	.LBB34:
 653              	.LBB31:
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 654              		.loc 1 102 0
 655 004a 2025     		movs	r5, #32
 103:Src/main.c    **** }
 656              		.loc 1 103 0
 657 004c 0094     		str	r4, [sp]
 658 004e 03AA     		add	r2, sp, #12
 659 0050 0223     		movs	r3, #2
 660 0052 3A21     		movs	r1, #58
 661 0054 1248     		ldr	r0, .L33
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 662              		.loc 1 102 0
 663 0056 8DF80D50 		strb	r5, [sp, #13]
 664 005a 8DF80C60 		strb	r6, [sp, #12]
 665              	.LBE31:
 666              	.LBE34:
 667              	.LBB35:
 668              	.LBB36:
 669 005e 2625     		movs	r5, #38
 670              	.LBE36:
 671              	.LBE35:
 672              	.LBB38:
 673              	.LBB32:
 103:Src/main.c    **** }
 674              		.loc 1 103 0
 675 0060 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 676              	.LVL51:
 677              	.LBE32:
 678              	.LBE38:
 679              	.LBB39:
 680              	.LBB37:
 681 0064 03AA     		add	r2, sp, #12
 682 0066 0223     		movs	r3, #2
 683 0068 3A21     		movs	r1, #58
 684 006a 0094     		str	r4, [sp]
 685 006c 0C48     		ldr	r0, .L33
 102:Src/main.c    ****     HAL_I2C_Master_Transmit(&hi2c1, 0x3a, d, 2, 100);
 686              		.loc 1 102 0
 687 006e 8DF80C50 		strb	r5, [sp, #12]
 688 0072 0024     		movs	r4, #0
 689 0074 8DF80D40 		strb	r4, [sp, #13]
ARM GAS  /tmp/ccTkIj2n.s 			page 19


 103:Src/main.c    **** }
 690              		.loc 1 103 0
 691 0078 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 692              	.LVL52:
 693              	.LBE37:
 694              	.LBE39:
 184:Src/main.c    **** 
 695              		.loc 1 184 0
 696 007c 0F20     		movs	r0, #15
 697 007e FFF7FEFF 		bl	ReadRegister
 698              	.LVL53:
 699 0082 0146     		mov	r1, r0
 700 0084 0748     		ldr	r0, .L33+4
 701 0086 FFF7FEFF 		bl	printf
 702              	.LVL54:
 187:Src/main.c    **** 
 703              		.loc 1 187 0
 704 008a FFF7FEFF 		bl	controls_595_update
 705              	.LVL55:
 190:Src/main.c    ****   mgui->draw = &_mt_d;
 706              		.loc 1 190 0
 707 008e FFF7FEFF 		bl	mt_start
 708              	.LVL56:
 709 0092 054A     		ldr	r2, .L33+8
 191:Src/main.c    **** //  printf("%d\n", Arial_12_SymbolTable[2]);
 710              		.loc 1 191 0
 711 0094 054B     		ldr	r3, .L33+12
 190:Src/main.c    ****   mgui->draw = &_mt_d;
 712              		.loc 1 190 0
 713 0096 1060     		str	r0, [r2]
 191:Src/main.c    **** //  printf("%d\n", Arial_12_SymbolTable[2]);
 714              		.loc 1 191 0
 715 0098 8360     		str	r3, [r0, #8]
 716              	.LVL57:
 717              	.L31:
 205:Src/main.c    ****       
 718              		.loc 1 205 0 discriminator 1
 719 009a FFF7FEFF 		bl	controls_595_update
 720              	.LVL58:
 721 009e FCE7     		b	.L31
 722              	.L34:
 723              		.align	2
 724              	.L33:
 725 00a0 00000000 		.word	hi2c1
 726 00a4 00000000 		.word	.LC0
 727 00a8 00000000 		.word	mgui
 728 00ac 00000000 		.word	_mt_d
 729              		.cfi_endproc
 730              	.LFE130:
 732              		.section	.text.Error_Handler,"ax",%progbits
 733              		.align	1
 734              		.p2align 2,,3
 735              		.global	Error_Handler
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccTkIj2n.s 			page 20


 741              	Error_Handler:
 742              	.LFB132:
 270:Src/main.c    **** 
 271:Src/main.c    **** /* USER CODE BEGIN 4 */
 272:Src/main.c    **** 
 273:Src/main.c    **** /* USER CODE END 4 */
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 277:Src/main.c    ****   * @param  None
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** void Error_Handler(void)
 281:Src/main.c    **** {
 743              		.loc 1 281 0
 744              		.cfi_startproc
 745              		@ Volatile: function does not return.
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749              	.L36:
 750 0000 FEE7     		b	.L36
 751              		.cfi_endproc
 752              	.LFE132:
 754              		.comm	mgui,4,4
 755              		.global	ang
 756              		.comm	makise_color_palette,4,4
 757 0002 00BF     		.section	.bss.ang,"aw",%nobits
 758              		.align	2
 759              		.set	.LANCHOR0,. + 0
 762              	ang:
 763 0000 00000000 		.space	4
 764              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 765              		.align	2
 766              	.LC0:
 767 0000 61636320 		.ascii	"acc %d\012\000"
 767      25640A00 
 768              		.text
 769              	.Letext0:
 770              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 771              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 772              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 773              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 774              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 775              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 776              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 777              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 778              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 779              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 780              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 781              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 782              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 783              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 784              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 785              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 786              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 787              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  /tmp/ccTkIj2n.s 			page 21


 788              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 789              		.file 21 "Inc/dma.h"
 790              		.file 22 "Middlewares/Third_Party/FatFs/src/integer.h"
 791              		.file 23 "Middlewares/Third_Party/FatFs/src/diskio.h"
 792              		.file 24 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 793              		.file 25 "Middlewares/Third_Party/FatFs/src/drivers/sd_diskio.h"
 794              		.file 26 "Inc/fatfs.h"
 795              		.file 27 "Inc/i2c.h"
 796              		.file 28 "Inc/sdio.h"
 797              		.file 29 "Inc/spi.h"
 798              		.file 30 "Inc/tim.h"
 799              		.file 31 "Inc/usart.h"
 800              		.file 32 "MakiseGUI/MakiseGUI/makise.h"
 801              		.file 33 "MakiseGUI/MakiseGUI/makise_colors.h"
 802              		.file 34 "MakiseGUI/MakiseGUI/makise_text.h"
 803              		.file 35 "MakiseGUI/MakiseGUI/fonts/fonts.h"
 804              		.file 36 "MakiseGUI/MakiseGUI/ILI9340C/ili9340.h"
 805              		.file 37 "MakiseGUI/MakiseGUI/gui/makise_gui.h"
 806              		.file 38 "MakiseGUI/MakiseGUI/gui/makise_gui_input.h"
 807              		.file 39 "MakiseGUI/MakiseGUI/gui/makise_gui_container.h"
 808              		.file 40 "MakiseGUI/MakiseGUI/gui/makise_gui_elements.h"
 809              		.file 41 "Inc/makise_test.h"
 810              		.file 42 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 811              		.file 43 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 812              		.file 44 "Inc/gpio.h"
 813              		.file 45 "/usr/arm-none-eabi/include/stdio.h"
 814              		.file 46 "Controls/controls_595.h"
 815              		.file 47 "MakiseGUI/MakiseGUI/makise_primitives.h"
 816              		.file 48 "/usr/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccTkIj2n.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccTkIj2n.s:20     .text._mt_d:0000000000000000 $t
     /tmp/ccTkIj2n.s:28     .text._mt_d:0000000000000000 _mt_d
     /tmp/ccTkIj2n.s:166    .text._mt_d:00000000000000bc $d
                            *COM*:0000000000000004 mgui
     /tmp/ccTkIj2n.s:176    .text.ReadRegister:0000000000000000 $t
     /tmp/ccTkIj2n.s:184    .text.ReadRegister:0000000000000000 ReadRegister
     /tmp/ccTkIj2n.s:241    .text.ReadRegister:000000000000003c $d
     /tmp/ccTkIj2n.s:246    .text.WriteRegister:0000000000000000 $t
     /tmp/ccTkIj2n.s:254    .text.WriteRegister:0000000000000000 WriteRegister
     /tmp/ccTkIj2n.s:292    .text.WriteRegister:0000000000000024 $d
     /tmp/ccTkIj2n.s:299    .text.lsm303_read:0000000000000000 $t
     /tmp/ccTkIj2n.s:307    .text.lsm303_read:0000000000000000 lsm303_read
     /tmp/ccTkIj2n.s:391    .text.lsm303_read:0000000000000074 $d
     /tmp/ccTkIj2n.s:397    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccTkIj2n.s:405    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccTkIj2n.s:548    .text.SystemClock_Config:00000000000000a8 $d
     /tmp/ccTkIj2n.s:555    .text.startup.main:0000000000000000 $t
     /tmp/ccTkIj2n.s:563    .text.startup.main:0000000000000000 main
     /tmp/ccTkIj2n.s:725    .text.startup.main:00000000000000a0 $d
     /tmp/ccTkIj2n.s:733    .text.Error_Handler:0000000000000000 $t
     /tmp/ccTkIj2n.s:741    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccTkIj2n.s:762    .bss.ang:0000000000000000 ang
                            *COM*:0000000000000004 makise_color_palette
     /tmp/ccTkIj2n.s:758    .bss.ang:0000000000000000 $d
     /tmp/ccTkIj2n.s:765    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
cos
sin
makise_d_line
makise_d_rect_filled
makise_g_host_call
host
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
hi2c1
__aeabi_i2d
__aeabi_d2f
HAL_Delay
atan2
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SDIO_SD_Init
ARM GAS  /tmp/ccTkIj2n.s 			page 23


MX_SPI1_Init
MX_TIM3_Init
MX_FATFS_Init
MX_USART6_UART_Init
MX_I2C1_Init
printf
controls_595_update
mt_start
