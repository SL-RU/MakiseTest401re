ARM GAS  /tmp/ccO6khRt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndRxTransfer:
  25              	.LFB171:
  26              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @version V1.6.0
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @date    04-November-2016
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  /tmp/ccO6khRt.s 			page 2


  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 3


  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccO6khRt.s 			page 4


 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 5


 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccO6khRt.s 			page 6


 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
ARM GAS  /tmp/ccO6khRt.s 			page 7


 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccO6khRt.s 			page 8


 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address: USART address
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  /tmp/ccO6khRt.s 			page 9


 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccO6khRt.s 			page 10


 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccO6khRt.s 			page 11


 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
ARM GAS  /tmp/ccO6khRt.s 			page 12


 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FFU);
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
ARM GAS  /tmp/ccO6khRt.s 			page 13


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFFU);
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccO6khRt.s 			page 14


 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccO6khRt.s 			page 15


 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/ccO6khRt.s 			page 16


 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U))
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
ARM GAS  /tmp/ccO6khRt.s 			page 17


 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  /tmp/ccO6khRt.s 			page 18


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0U)) 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size); 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/ccO6khRt.s 			page 19


1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
ARM GAS  /tmp/ccO6khRt.s 			page 20


1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
ARM GAS  /tmp/ccO6khRt.s 			page 21


1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccO6khRt.s 			page 22


1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  /tmp/ccO6khRt.s 			page 23


1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccO6khRt.s 			page 24


1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccO6khRt.s 			page 25


1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccO6khRt.s 			page 26


1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
ARM GAS  /tmp/ccO6khRt.s 			page 27


1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccO6khRt.s 			page 28


1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccO6khRt.s 			page 29


1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
ARM GAS  /tmp/ccO6khRt.s 			page 30


1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
ARM GAS  /tmp/ccO6khRt.s 			page 31


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/ccO6khRt.s 			page 32


1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/ccO6khRt.s 			page 33


1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccO6khRt.s 			page 34


1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 35


1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 36


1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccO6khRt.s 			page 37


2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma: DMA handle
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 38


2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  /tmp/ccO6khRt.s 			page 39


2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: UART handle.
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  27              		.loc 1 2155 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  33              		.loc 1 2157 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F49073 		bic	r3, r3, #288
  37 0008 D360     		str	r3, [r2, #12]
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  38              		.loc 1 2158 0
  39 000a 0268     		ldr	r2, [r0]
  40 000c 5369     		ldr	r3, [r2, #20]
  41 000e 23F00103 		bic	r3, r3, #1
  42 0012 5361     		str	r3, [r2, #20]
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  43              		.loc 1 2161 0
  44 0014 2023     		movs	r3, #32
  45 0016 80F83A30 		strb	r3, [r0, #58]
  46 001a 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE171:
  50              		.section	.text.UART_SetConfig,"ax",%progbits
  51              		.align	1
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv4-sp-d16
  57              	UART_SetConfig:
  58              	.LFB180:
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccO6khRt.s 			page 40


2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccO6khRt.s 			page 41


2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccO6khRt.s 			page 42


2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FFU);
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FFU);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccO6khRt.s 			page 43


2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FFU);
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FFU);
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FFU);
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
ARM GAS  /tmp/ccO6khRt.s 			page 44


2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007FU);
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  59              		.loc 1 2432 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              	.LVL1:
  64 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 32
  67              		.cfi_offset 4, -32
  68              		.cfi_offset 5, -28
  69              		.cfi_offset 6, -24
  70              		.cfi_offset 7, -20
  71              		.cfi_offset 8, -16
  72              		.cfi_offset 9, -12
  73              		.cfi_offset 10, -8
  74              		.cfi_offset 14, -4
  75 0004 0446     		mov	r4, r0
  76              	.LVL2:
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/ccO6khRt.s 			page 45


2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
  77              		.loc 1 2442 0
  78 0006 0268     		ldr	r2, [r0]
  79 0008 1369     		ldr	r3, [r2, #16]
  80              	.LVL3:
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
  81              		.loc 1 2445 0
  82 000a 23F44053 		bic	r3, r3, #12288
  83              	.LVL4:
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
  84              		.loc 1 2448 0
  85 000e C168     		ldr	r1, [r0, #12]
  86 0010 0B43     		orrs	r3, r3, r1
  87              	.LVL5:
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
  88              		.loc 1 2451 0
  89 0012 1361     		str	r3, [r2, #16]
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
  90              		.loc 1 2454 0
  91 0014 0168     		ldr	r1, [r0]
  92 0016 CA68     		ldr	r2, [r1, #12]
  93              	.LVL6:
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
  94              		.loc 1 2457 0
  95 0018 22F41642 		bic	r2, r2, #38400
  96              	.LVL7:
  97 001c 22F00C02 		bic	r2, r2, #12
  98              	.LVL8:
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
  99              		.loc 1 2465 0
 100 0020 8368     		ldr	r3, [r0, #8]
 101 0022 0069     		ldr	r0, [r0, #16]
 102              	.LVL9:
 103 0024 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/ccO6khRt.s 			page 46


 104 0026 6069     		ldr	r0, [r4, #20]
 105 0028 0343     		orrs	r3, r3, r0
 106 002a E069     		ldr	r0, [r4, #28]
 107 002c 0343     		orrs	r3, r3, r0
 108 002e 1343     		orrs	r3, r3, r2
 109              	.LVL10:
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 110              		.loc 1 2468 0
 111 0030 CB60     		str	r3, [r1, #12]
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 112              		.loc 1 2471 0
 113 0032 2268     		ldr	r2, [r4]
 114 0034 5369     		ldr	r3, [r2, #20]
 115              	.LVL11:
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 116              		.loc 1 2474 0
 117 0036 23F44073 		bic	r3, r3, #768
 118              	.LVL12:
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 119              		.loc 1 2477 0
 120 003a A169     		ldr	r1, [r4, #24]
 121 003c 0B43     		orrs	r3, r3, r1
 122              	.LVL13:
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 123              		.loc 1 2480 0
 124 003e 5361     		str	r3, [r2, #20]
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 125              		.loc 1 2483 0
 126 0040 E369     		ldr	r3, [r4, #28]
 127              	.LVL14:
 128 0042 B3F5004F 		cmp	r3, #32768
 129 0046 5FD0     		beq	.L10
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccO6khRt.s 			page 47


2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 130              		.loc 1 2498 0
 131 0048 2568     		ldr	r5, [r4]
 132 004a B64B     		ldr	r3, .L11
 133 004c 9D42     		cmp	r5, r3
 134 004e 00F01281 		beq	.L7
 135              		.loc 1 2498 0 is_stmt 0 discriminator 1
 136 0052 03F58063 		add	r3, r3, #1024
 137 0056 9D42     		cmp	r5, r3
 138 0058 00F00D81 		beq	.L7
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 139              		.loc 1 2504 0 is_stmt 1
 140 005c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 141              	.LVL15:
 142 0060 00EB8000 		add	r0, r0, r0, lsl #2
 143 0064 00EB8000 		add	r0, r0, r0, lsl #2
 144 0068 6368     		ldr	r3, [r4, #4]
 145 006a 9B00     		lsls	r3, r3, #2
 146 006c B0FBF3F3 		udiv	r3, r0, r3
 147 0070 DFF8B482 		ldr	r8, .L11+4
 148 0074 A8FB0323 		umull	r2, r3, r8, r3
 149 0078 5B09     		lsrs	r3, r3, #5
 150 007a 1E01     		lsls	r6, r3, #4
 151 007c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 152              	.LVL16:
 153 0080 00EB8000 		add	r0, r0, r0, lsl #2
 154 0084 00EB8000 		add	r0, r0, r0, lsl #2
 155 0088 6368     		ldr	r3, [r4, #4]
 156 008a 9B00     		lsls	r3, r3, #2
 157 008c B0FBF3F7 		udiv	r7, r0, r3
 158 0090 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 159              	.LVL17:
 160 0094 00EB8000 		add	r0, r0, r0, lsl #2
 161 0098 00EB8000 		add	r0, r0, r0, lsl #2
 162 009c 6368     		ldr	r3, [r4, #4]
 163 009e 9B00     		lsls	r3, r3, #2
 164 00a0 B0FBF3F3 		udiv	r3, r0, r3
 165 00a4 A8FB0323 		umull	r2, r3, r8, r3
 166 00a8 5B09     		lsrs	r3, r3, #5
 167 00aa 4FF0640A 		mov	r10, #100
 168 00ae 0AFB1373 		mls	r3, r10, r3, r7
 169 00b2 1B01     		lsls	r3, r3, #4
 170 00b4 3233     		adds	r3, r3, #50
 171 00b6 A8FB0323 		umull	r2, r3, r8, r3
 172 00ba 5B09     		lsrs	r3, r3, #5
 173 00bc 03F0F007 		and	r7, r3, #240
 174 00c0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 175              	.LVL18:
 176 00c4 00EB8000 		add	r0, r0, r0, lsl #2
 177 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 178 00cc 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/ccO6khRt.s 			page 48


 179 00ce 9B00     		lsls	r3, r3, #2
 180 00d0 B0FBF3F9 		udiv	r9, r0, r3
 181 00d4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 182              	.LVL19:
 183 00d8 00EB8000 		add	r0, r0, r0, lsl #2
 184 00dc 00EB8000 		add	r0, r0, r0, lsl #2
 185 00e0 6368     		ldr	r3, [r4, #4]
 186 00e2 9B00     		lsls	r3, r3, #2
 187 00e4 B0FBF3F3 		udiv	r3, r0, r3
 188 00e8 A8FB0323 		umull	r2, r3, r8, r3
 189 00ec 5B09     		lsrs	r3, r3, #5
 190 00ee 0AFB1393 		mls	r3, r10, r3, r9
 191 00f2 1B01     		lsls	r3, r3, #4
 192 00f4 3233     		adds	r3, r3, #50
 193 00f6 A8FB0323 		umull	r2, r3, r8, r3
 194 00fa C3F34313 		ubfx	r3, r3, #5, #4
 195 00fe 3B43     		orrs	r3, r3, r7
 196 0100 3344     		add	r3, r3, r6
 197 0102 AB60     		str	r3, [r5, #8]
 198 0104 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 199              	.LVL20:
 200              	.L10:
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 201              		.loc 1 2486 0
 202 0108 2568     		ldr	r5, [r4]
 203 010a 03F18043 		add	r3, r3, #1073741824
 204 010e 03F51043 		add	r3, r3, #36864
 205 0112 9D42     		cmp	r5, r3
 206 0114 59D0     		beq	.L4
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 207              		.loc 1 2486 0 is_stmt 0 discriminator 1
 208 0116 03F58063 		add	r3, r3, #1024
 209 011a 9D42     		cmp	r5, r3
 210 011c 55D0     		beq	.L4
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 211              		.loc 1 2492 0 is_stmt 1
 212 011e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 213              	.LVL21:
 214 0122 00EB8000 		add	r0, r0, r0, lsl #2
 215 0126 00EB8000 		add	r0, r0, r0, lsl #2
 216 012a 6368     		ldr	r3, [r4, #4]
 217 012c 5B00     		lsls	r3, r3, #1
 218 012e B0FBF3F3 		udiv	r3, r0, r3
 219 0132 DFF8F481 		ldr	r8, .L11+4
 220 0136 A8FB0323 		umull	r2, r3, r8, r3
 221 013a 5B09     		lsrs	r3, r3, #5
 222 013c 1F01     		lsls	r7, r3, #4
 223 013e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 224              	.LVL22:
 225 0142 00EB8000 		add	r0, r0, r0, lsl #2
 226 0146 00EB8000 		add	r0, r0, r0, lsl #2
 227 014a 6368     		ldr	r3, [r4, #4]
 228 014c 5B00     		lsls	r3, r3, #1
 229 014e B0FBF3F6 		udiv	r6, r0, r3
 230 0152 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 231              	.LVL23:
 232 0156 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccO6khRt.s 			page 49


 233 015a 00EB8000 		add	r0, r0, r0, lsl #2
 234 015e 6368     		ldr	r3, [r4, #4]
 235 0160 5B00     		lsls	r3, r3, #1
 236 0162 B0FBF3F3 		udiv	r3, r0, r3
 237 0166 A8FB0323 		umull	r2, r3, r8, r3
 238 016a 5B09     		lsrs	r3, r3, #5
 239 016c 4FF0640A 		mov	r10, #100
 240 0170 0AFB1363 		mls	r3, r10, r3, r6
 241 0174 DB00     		lsls	r3, r3, #3
 242 0176 3233     		adds	r3, r3, #50
 243 0178 A8FB0323 		umull	r2, r3, r8, r3
 244 017c 1B09     		lsrs	r3, r3, #4
 245 017e 03F4F876 		and	r6, r3, #496
 246 0182 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 247              	.LVL24:
 248 0186 00EB8000 		add	r0, r0, r0, lsl #2
 249 018a 00EB8000 		add	r0, r0, r0, lsl #2
 250 018e 6368     		ldr	r3, [r4, #4]
 251 0190 5B00     		lsls	r3, r3, #1
 252 0192 B0FBF3F9 		udiv	r9, r0, r3
 253 0196 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 254              	.LVL25:
 255 019a 00EB8000 		add	r0, r0, r0, lsl #2
 256 019e 00EB8000 		add	r0, r0, r0, lsl #2
 257 01a2 6368     		ldr	r3, [r4, #4]
 258 01a4 5B00     		lsls	r3, r3, #1
 259 01a6 B0FBF3F3 		udiv	r3, r0, r3
 260 01aa A8FB0323 		umull	r2, r3, r8, r3
 261 01ae 5B09     		lsrs	r3, r3, #5
 262 01b0 0AFB1393 		mls	r3, r10, r3, r9
 263 01b4 DB00     		lsls	r3, r3, #3
 264 01b6 3233     		adds	r3, r3, #50
 265 01b8 A8FB0323 		umull	r2, r3, r8, r3
 266 01bc C3F34213 		ubfx	r3, r3, #5, #3
 267 01c0 3B44     		add	r3, r3, r7
 268 01c2 3344     		add	r3, r3, r6
 269 01c4 AB60     		str	r3, [r5, #8]
 270 01c6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 271              	.LVL26:
 272              	.L4:
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 273              		.loc 1 2488 0
 274 01ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 275              	.LVL27:
 276 01ce 00EB8000 		add	r0, r0, r0, lsl #2
 277 01d2 00EB8000 		add	r0, r0, r0, lsl #2
 278 01d6 6368     		ldr	r3, [r4, #4]
 279 01d8 5B00     		lsls	r3, r3, #1
 280 01da B0FBF3F3 		udiv	r3, r0, r3
 281 01de DFF84881 		ldr	r8, .L11+4
 282 01e2 A8FB0323 		umull	r2, r3, r8, r3
 283 01e6 5B09     		lsrs	r3, r3, #5
 284 01e8 1F01     		lsls	r7, r3, #4
 285 01ea FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 286              	.LVL28:
 287 01ee 00EB8000 		add	r0, r0, r0, lsl #2
 288 01f2 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  /tmp/ccO6khRt.s 			page 50


 289 01f6 6368     		ldr	r3, [r4, #4]
 290 01f8 5B00     		lsls	r3, r3, #1
 291 01fa B0FBF3F6 		udiv	r6, r0, r3
 292 01fe FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 293              	.LVL29:
 294 0202 00EB8000 		add	r0, r0, r0, lsl #2
 295 0206 00EB8000 		add	r0, r0, r0, lsl #2
 296 020a 6368     		ldr	r3, [r4, #4]
 297 020c 5B00     		lsls	r3, r3, #1
 298 020e B0FBF3F3 		udiv	r3, r0, r3
 299 0212 A8FB0323 		umull	r2, r3, r8, r3
 300 0216 5B09     		lsrs	r3, r3, #5
 301 0218 4FF0640A 		mov	r10, #100
 302 021c 0AFB1363 		mls	r3, r10, r3, r6
 303 0220 DB00     		lsls	r3, r3, #3
 304 0222 3233     		adds	r3, r3, #50
 305 0224 A8FB0323 		umull	r2, r3, r8, r3
 306 0228 1B09     		lsrs	r3, r3, #4
 307 022a 03F4F876 		and	r6, r3, #496
 308 022e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 309              	.LVL30:
 310 0232 00EB8000 		add	r0, r0, r0, lsl #2
 311 0236 00EB8000 		add	r0, r0, r0, lsl #2
 312 023a 6368     		ldr	r3, [r4, #4]
 313 023c 5B00     		lsls	r3, r3, #1
 314 023e B0FBF3F9 		udiv	r9, r0, r3
 315 0242 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 316              	.LVL31:
 317 0246 00EB8000 		add	r0, r0, r0, lsl #2
 318 024a 00EB8000 		add	r0, r0, r0, lsl #2
 319 024e 6368     		ldr	r3, [r4, #4]
 320 0250 5B00     		lsls	r3, r3, #1
 321 0252 B0FBF3F3 		udiv	r3, r0, r3
 322 0256 A8FB0323 		umull	r2, r3, r8, r3
 323 025a 5B09     		lsrs	r3, r3, #5
 324 025c 0AFB1393 		mls	r3, r10, r3, r9
 325 0260 DB00     		lsls	r3, r3, #3
 326 0262 3233     		adds	r3, r3, #50
 327 0264 A8FB0323 		umull	r2, r3, r8, r3
 328 0268 C3F34213 		ubfx	r3, r3, #5, #3
 329 026c 3B44     		add	r3, r3, r7
 330 026e 3344     		add	r3, r3, r6
 331 0270 AB60     		str	r3, [r5, #8]
 332 0272 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 333              	.LVL32:
 334              	.L7:
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 335              		.loc 1 2500 0
 336 0276 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 337              	.LVL33:
 338 027a 00EB8000 		add	r0, r0, r0, lsl #2
 339 027e 00EB8000 		add	r0, r0, r0, lsl #2
 340 0282 6368     		ldr	r3, [r4, #4]
 341 0284 9B00     		lsls	r3, r3, #2
 342 0286 B0FBF3F3 		udiv	r3, r0, r3
 343 028a DFF89C80 		ldr	r8, .L11+4
 344 028e A8FB0323 		umull	r2, r3, r8, r3
ARM GAS  /tmp/ccO6khRt.s 			page 51


 345 0292 5B09     		lsrs	r3, r3, #5
 346 0294 1E01     		lsls	r6, r3, #4
 347 0296 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 348              	.LVL34:
 349 029a 00EB8000 		add	r0, r0, r0, lsl #2
 350 029e 00EB8000 		add	r0, r0, r0, lsl #2
 351 02a2 6368     		ldr	r3, [r4, #4]
 352 02a4 9B00     		lsls	r3, r3, #2
 353 02a6 B0FBF3F7 		udiv	r7, r0, r3
 354 02aa FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 355              	.LVL35:
 356 02ae 00EB8000 		add	r0, r0, r0, lsl #2
 357 02b2 00EB8000 		add	r0, r0, r0, lsl #2
 358 02b6 6368     		ldr	r3, [r4, #4]
 359 02b8 9B00     		lsls	r3, r3, #2
 360 02ba B0FBF3F3 		udiv	r3, r0, r3
 361 02be A8FB0323 		umull	r2, r3, r8, r3
 362 02c2 5B09     		lsrs	r3, r3, #5
 363 02c4 4FF0640A 		mov	r10, #100
 364 02c8 0AFB1373 		mls	r3, r10, r3, r7
 365 02cc 1B01     		lsls	r3, r3, #4
 366 02ce 3233     		adds	r3, r3, #50
 367 02d0 A8FB0323 		umull	r2, r3, r8, r3
 368 02d4 5B09     		lsrs	r3, r3, #5
 369 02d6 03F0F007 		and	r7, r3, #240
 370 02da FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 371              	.LVL36:
 372 02de 00EB8000 		add	r0, r0, r0, lsl #2
 373 02e2 00EB8000 		add	r0, r0, r0, lsl #2
 374 02e6 6368     		ldr	r3, [r4, #4]
 375 02e8 9B00     		lsls	r3, r3, #2
 376 02ea B0FBF3F9 		udiv	r9, r0, r3
 377 02ee FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 378              	.LVL37:
 379 02f2 00EB8000 		add	r0, r0, r0, lsl #2
 380 02f6 00EB8000 		add	r0, r0, r0, lsl #2
 381 02fa 6368     		ldr	r3, [r4, #4]
 382 02fc 9B00     		lsls	r3, r3, #2
 383 02fe B0FBF3F3 		udiv	r3, r0, r3
 384 0302 A8FB0323 		umull	r2, r3, r8, r3
 385 0306 5B09     		lsrs	r3, r3, #5
 386 0308 0AFB1393 		mls	r3, r10, r3, r9
 387 030c 1B01     		lsls	r3, r3, #4
 388 030e 3233     		adds	r3, r3, #50
 389 0310 A8FB0323 		umull	r2, r3, r8, r3
 390 0314 C3F34313 		ubfx	r3, r3, #5, #4
 391 0318 3B43     		orrs	r3, r3, r7
 392 031a 3344     		add	r3, r3, r6
 393 031c AB60     		str	r3, [r5, #8]
 394 031e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 395              	.LVL38:
 396              	.L12:
 397 0322 00BF     		.align	2
 398              	.L11:
 399 0324 00100140 		.word	1073811456
 400 0328 1F85EB51 		.word	1374389535
 401              		.cfi_endproc
ARM GAS  /tmp/ccO6khRt.s 			page 52


 402              	.LFE180:
 404              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 405              		.align	1
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	UART_WaitOnFlagUntilTimeout:
 412              	.LFB169:
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 413              		.loc 1 2108 0
 414              		.cfi_startproc
 415              		@ args = 4, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL39:
 418 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 419              	.LCFI1:
 420              		.cfi_def_cfa_offset 24
 421              		.cfi_offset 4, -24
 422              		.cfi_offset 5, -20
 423              		.cfi_offset 6, -16
 424              		.cfi_offset 7, -12
 425              		.cfi_offset 8, -8
 426              		.cfi_offset 14, -4
 427 0004 0746     		mov	r7, r0
 428 0006 0E46     		mov	r6, r1
 429 0008 1546     		mov	r5, r2
 430 000a 9846     		mov	r8, r3
 431 000c 069C     		ldr	r4, [sp, #24]
 432              	.LVL40:
 433              	.L14:
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 434              		.loc 1 2110 0
 435 000e 3A68     		ldr	r2, [r7]
 436              	.L15:
 437 0010 1368     		ldr	r3, [r2]
 438 0012 36EA0303 		bics	r3, r6, r3
 439 0016 0CBF     		ite	eq
 440 0018 0123     		moveq	r3, #1
 441 001a 0023     		movne	r3, #0
 442 001c AB42     		cmp	r3, r5
 443 001e 1ED1     		bne	.L22
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 444              		.loc 1 2113 0
 445 0020 B4F1FF3F 		cmp	r4, #-1
 446 0024 F4D0     		beq	.L15
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 447              		.loc 1 2115 0
 448 0026 2CB1     		cbz	r4, .L16
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 449              		.loc 1 2115 0 is_stmt 0 discriminator 1
 450 0028 FFF7FEFF 		bl	HAL_GetTick
 451              	.LVL41:
 452 002c A0EB0800 		sub	r0, r0, r8
 453 0030 8442     		cmp	r4, r0
 454 0032 ECD2     		bcs	.L14
 455              	.L16:
ARM GAS  /tmp/ccO6khRt.s 			page 53


2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 456              		.loc 1 2118 0 is_stmt 1
 457 0034 3A68     		ldr	r2, [r7]
 458 0036 D368     		ldr	r3, [r2, #12]
 459 0038 23F4D073 		bic	r3, r3, #416
 460 003c D360     		str	r3, [r2, #12]
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 461              		.loc 1 2119 0
 462 003e 3A68     		ldr	r2, [r7]
 463 0040 5369     		ldr	r3, [r2, #20]
 464 0042 23F00103 		bic	r3, r3, #1
 465 0046 5361     		str	r3, [r2, #20]
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 466              		.loc 1 2121 0
 467 0048 2023     		movs	r3, #32
 468 004a 87F83930 		strb	r3, [r7, #57]
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 469              		.loc 1 2122 0
 470 004e 87F83A30 		strb	r3, [r7, #58]
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 471              		.loc 1 2125 0
 472 0052 0023     		movs	r3, #0
 473 0054 87F83830 		strb	r3, [r7, #56]
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 474              		.loc 1 2127 0
 475 0058 0320     		movs	r0, #3
 476 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 477              	.LVL42:
 478              	.L22:
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 479              		.loc 1 2132 0
 480 005e 0020     		movs	r0, #0
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 481              		.loc 1 2133 0
 482 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 483              		.cfi_endproc
 484              	.LFE169:
 486              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 487              		.align	1
 488              		.weak	HAL_UART_MspInit
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	HAL_UART_MspInit:
 495              	.LFB131:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 496              		.loc 1 530 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL43:
 502 0000 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE131:
 506              		.section	.text.HAL_UART_Init,"ax",%progbits
ARM GAS  /tmp/ccO6khRt.s 			page 54


 507              		.align	1
 508              		.global	HAL_UART_Init
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	HAL_UART_Init:
 515              	.LFB126:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 516              		.loc 1 247 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL44:
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 521              		.loc 1 249 0
 522 0000 58B3     		cbz	r0, .L27
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 523              		.loc 1 247 0
 524 0002 10B5     		push	{r4, lr}
 525              	.LCFI2:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 529 0004 0446     		mov	r4, r0
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 530              		.loc 1 268 0
 531 0006 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 532 000a 0BB3     		cbz	r3, .L32
 533              	.LVL45:
 534              	.L26:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 535              		.loc 1 276 0
 536 000c 2423     		movs	r3, #36
 537 000e 84F83930 		strb	r3, [r4, #57]
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 538              		.loc 1 279 0
 539 0012 2268     		ldr	r2, [r4]
 540 0014 D368     		ldr	r3, [r2, #12]
 541 0016 23F40053 		bic	r3, r3, #8192
 542 001a D360     		str	r3, [r2, #12]
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 543              		.loc 1 282 0
 544 001c 2046     		mov	r0, r4
 545 001e FFF7FEFF 		bl	UART_SetConfig
 546              	.LVL46:
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 547              		.loc 1 287 0
 548 0022 2268     		ldr	r2, [r4]
 549 0024 1369     		ldr	r3, [r2, #16]
 550 0026 23F49043 		bic	r3, r3, #18432
 551 002a 1361     		str	r3, [r2, #16]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 552              		.loc 1 288 0
 553 002c 2268     		ldr	r2, [r4]
 554 002e 5369     		ldr	r3, [r2, #20]
 555 0030 23F02A03 		bic	r3, r3, #42
ARM GAS  /tmp/ccO6khRt.s 			page 55


 556 0034 5361     		str	r3, [r2, #20]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 557              		.loc 1 291 0
 558 0036 2268     		ldr	r2, [r4]
 559 0038 D368     		ldr	r3, [r2, #12]
 560 003a 43F40053 		orr	r3, r3, #8192
 561 003e D360     		str	r3, [r2, #12]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 562              		.loc 1 294 0
 563 0040 0020     		movs	r0, #0
 564 0042 E063     		str	r0, [r4, #60]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 565              		.loc 1 295 0
 566 0044 2023     		movs	r3, #32
 567 0046 84F83930 		strb	r3, [r4, #57]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 568              		.loc 1 296 0
 569 004a 84F83A30 		strb	r3, [r4, #58]
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 570              		.loc 1 298 0
 571 004e 10BD     		pop	{r4, pc}
 572              	.LVL47:
 573              	.L32:
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 574              		.loc 1 271 0
 575 0050 80F83830 		strb	r3, [r0, #56]
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 576              		.loc 1 273 0
 577 0054 FFF7FEFF 		bl	HAL_UART_MspInit
 578              	.LVL48:
 579 0058 D8E7     		b	.L26
 580              	.LVL49:
 581              	.L27:
 582              	.LCFI3:
 583              		.cfi_def_cfa_offset 0
 584              		.cfi_restore 4
 585              		.cfi_restore 14
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 586              		.loc 1 251 0
 587 005a 0120     		movs	r0, #1
 588              	.LVL50:
 589 005c 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE126:
 593              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 594              		.align	1
 595              		.global	HAL_HalfDuplex_Init
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	HAL_HalfDuplex_Init:
 602              	.LFB127:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 603              		.loc 1 309 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccO6khRt.s 			page 56


 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL51:
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 608              		.loc 1 311 0
 609 0000 0028     		cmp	r0, #0
 610 0002 30D0     		beq	.L36
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 611              		.loc 1 309 0
 612 0004 10B5     		push	{r4, lr}
 613              	.LCFI4:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617 0006 0446     		mov	r4, r0
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 618              		.loc 1 321 0
 619 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 620 000c 33B3     		cbz	r3, .L41
 621              	.LVL52:
 622              	.L35:
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 623              		.loc 1 329 0
 624 000e 2423     		movs	r3, #36
 625 0010 84F83930 		strb	r3, [r4, #57]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 626              		.loc 1 332 0
 627 0014 2268     		ldr	r2, [r4]
 628 0016 D368     		ldr	r3, [r2, #12]
 629 0018 23F40053 		bic	r3, r3, #8192
 630 001c D360     		str	r3, [r2, #12]
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 631              		.loc 1 335 0
 632 001e 2046     		mov	r0, r4
 633 0020 FFF7FEFF 		bl	UART_SetConfig
 634              	.LVL53:
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 635              		.loc 1 340 0
 636 0024 2268     		ldr	r2, [r4]
 637 0026 1369     		ldr	r3, [r2, #16]
 638 0028 23F49043 		bic	r3, r3, #18432
 639 002c 1361     		str	r3, [r2, #16]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 640              		.loc 1 341 0
 641 002e 2268     		ldr	r2, [r4]
 642 0030 5369     		ldr	r3, [r2, #20]
 643 0032 23F02203 		bic	r3, r3, #34
 644 0036 5361     		str	r3, [r2, #20]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 645              		.loc 1 344 0
 646 0038 2268     		ldr	r2, [r4]
 647 003a 5369     		ldr	r3, [r2, #20]
 648 003c 43F00803 		orr	r3, r3, #8
 649 0040 5361     		str	r3, [r2, #20]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 650              		.loc 1 347 0
 651 0042 2268     		ldr	r2, [r4]
 652 0044 D368     		ldr	r3, [r2, #12]
ARM GAS  /tmp/ccO6khRt.s 			page 57


 653 0046 43F40053 		orr	r3, r3, #8192
 654 004a D360     		str	r3, [r2, #12]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 655              		.loc 1 350 0
 656 004c 0020     		movs	r0, #0
 657 004e E063     		str	r0, [r4, #60]
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 658              		.loc 1 351 0
 659 0050 2023     		movs	r3, #32
 660 0052 84F83930 		strb	r3, [r4, #57]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 661              		.loc 1 352 0
 662 0056 84F83A30 		strb	r3, [r4, #58]
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 663              		.loc 1 354 0
 664 005a 10BD     		pop	{r4, pc}
 665              	.LVL54:
 666              	.L41:
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 667              		.loc 1 324 0
 668 005c 80F83830 		strb	r3, [r0, #56]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 669              		.loc 1 326 0
 670 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 671              	.LVL55:
 672 0064 D3E7     		b	.L35
 673              	.LVL56:
 674              	.L36:
 675              	.LCFI5:
 676              		.cfi_def_cfa_offset 0
 677              		.cfi_restore 4
 678              		.cfi_restore 14
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 679              		.loc 1 313 0
 680 0066 0120     		movs	r0, #1
 681              	.LVL57:
 682 0068 7047     		bx	lr
 683              		.cfi_endproc
 684              	.LFE127:
 686              		.section	.text.HAL_LIN_Init,"ax",%progbits
 687              		.align	1
 688              		.global	HAL_LIN_Init
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_LIN_Init:
 695              	.LFB128:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 696              		.loc 1 369 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              	.LVL58:
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 701              		.loc 1 371 0
 702 0000 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO6khRt.s 			page 58


 703 0002 3BD0     		beq	.L45
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 704              		.loc 1 369 0
 705 0004 38B5     		push	{r3, r4, r5, lr}
 706              	.LCFI6:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 3, -16
 709              		.cfi_offset 4, -12
 710              		.cfi_offset 5, -8
 711              		.cfi_offset 14, -4
 712 0006 0446     		mov	r4, r0
 713 0008 0D46     		mov	r5, r1
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 714              		.loc 1 382 0
 715 000a 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 716 000e 002B     		cmp	r3, #0
 717 0010 2FD0     		beq	.L50
 718              	.LVL59:
 719              	.L44:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 720              		.loc 1 390 0
 721 0012 2423     		movs	r3, #36
 722 0014 84F83930 		strb	r3, [r4, #57]
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 723              		.loc 1 393 0
 724 0018 2268     		ldr	r2, [r4]
 725 001a D368     		ldr	r3, [r2, #12]
 726 001c 23F40053 		bic	r3, r3, #8192
 727 0020 D360     		str	r3, [r2, #12]
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 728              		.loc 1 396 0
 729 0022 2046     		mov	r0, r4
 730 0024 FFF7FEFF 		bl	UART_SetConfig
 731              	.LVL60:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 732              		.loc 1 401 0
 733 0028 2268     		ldr	r2, [r4]
 734 002a 1369     		ldr	r3, [r2, #16]
 735 002c 23F40063 		bic	r3, r3, #2048
 736 0030 1361     		str	r3, [r2, #16]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 737              		.loc 1 402 0
 738 0032 2268     		ldr	r2, [r4]
 739 0034 5369     		ldr	r3, [r2, #20]
 740 0036 23F02A03 		bic	r3, r3, #42
 741 003a 5361     		str	r3, [r2, #20]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 742              		.loc 1 405 0
 743 003c 2268     		ldr	r2, [r4]
 744 003e 1369     		ldr	r3, [r2, #16]
 745 0040 43F48043 		orr	r3, r3, #16384
 746 0044 1361     		str	r3, [r2, #16]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 747              		.loc 1 408 0
 748 0046 2268     		ldr	r2, [r4]
 749 0048 1369     		ldr	r3, [r2, #16]
 750 004a 23F02003 		bic	r3, r3, #32
ARM GAS  /tmp/ccO6khRt.s 			page 59


 751 004e 1361     		str	r3, [r2, #16]
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 752              		.loc 1 409 0
 753 0050 2368     		ldr	r3, [r4]
 754 0052 1969     		ldr	r1, [r3, #16]
 755 0054 0D43     		orrs	r5, r5, r1
 756              	.LVL61:
 757 0056 1D61     		str	r5, [r3, #16]
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 758              		.loc 1 412 0
 759 0058 2268     		ldr	r2, [r4]
 760 005a D368     		ldr	r3, [r2, #12]
 761 005c 43F40053 		orr	r3, r3, #8192
 762 0060 D360     		str	r3, [r2, #12]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 763              		.loc 1 415 0
 764 0062 0020     		movs	r0, #0
 765 0064 E063     		str	r0, [r4, #60]
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 766              		.loc 1 416 0
 767 0066 2023     		movs	r3, #32
 768 0068 84F83930 		strb	r3, [r4, #57]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 769              		.loc 1 417 0
 770 006c 84F83A30 		strb	r3, [r4, #58]
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 771              		.loc 1 419 0
 772 0070 38BD     		pop	{r3, r4, r5, pc}
 773              	.LVL62:
 774              	.L50:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 775              		.loc 1 385 0
 776 0072 80F83830 		strb	r3, [r0, #56]
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 777              		.loc 1 387 0
 778 0076 FFF7FEFF 		bl	HAL_UART_MspInit
 779              	.LVL63:
 780 007a CAE7     		b	.L44
 781              	.LVL64:
 782              	.L45:
 783              	.LCFI7:
 784              		.cfi_def_cfa_offset 0
 785              		.cfi_restore 3
 786              		.cfi_restore 4
 787              		.cfi_restore 5
 788              		.cfi_restore 14
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 789              		.loc 1 373 0
 790 007c 0120     		movs	r0, #1
 791              	.LVL65:
 792 007e 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE128:
 796              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 797              		.align	1
 798              		.global	HAL_MultiProcessor_Init
 799              		.syntax unified
ARM GAS  /tmp/ccO6khRt.s 			page 60


 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	HAL_MultiProcessor_Init:
 805              	.LFB129:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 806              		.loc 1 435 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              	.LVL66:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 811              		.loc 1 437 0
 812 0000 0028     		cmp	r0, #0
 813 0002 40D0     		beq	.L54
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 814              		.loc 1 435 0
 815 0004 70B5     		push	{r4, r5, r6, lr}
 816              	.LCFI8:
 817              		.cfi_def_cfa_offset 16
 818              		.cfi_offset 4, -16
 819              		.cfi_offset 5, -12
 820              		.cfi_offset 6, -8
 821              		.cfi_offset 14, -4
 822 0006 0446     		mov	r4, r0
 823 0008 1646     		mov	r6, r2
 824 000a 0D46     		mov	r5, r1
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 825              		.loc 1 449 0
 826 000c 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 827 0010 002B     		cmp	r3, #0
 828 0012 33D0     		beq	.L59
 829              	.LVL67:
 830              	.L53:
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 831              		.loc 1 457 0
 832 0014 2423     		movs	r3, #36
 833 0016 84F83930 		strb	r3, [r4, #57]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 834              		.loc 1 460 0
 835 001a 2268     		ldr	r2, [r4]
 836 001c D368     		ldr	r3, [r2, #12]
 837 001e 23F40053 		bic	r3, r3, #8192
 838 0022 D360     		str	r3, [r2, #12]
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 839              		.loc 1 463 0
 840 0024 2046     		mov	r0, r4
 841 0026 FFF7FEFF 		bl	UART_SetConfig
 842              	.LVL68:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 843              		.loc 1 468 0
 844 002a 2268     		ldr	r2, [r4]
 845 002c 1369     		ldr	r3, [r2, #16]
 846 002e 23F49043 		bic	r3, r3, #18432
 847 0032 1361     		str	r3, [r2, #16]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 848              		.loc 1 469 0
ARM GAS  /tmp/ccO6khRt.s 			page 61


 849 0034 2268     		ldr	r2, [r4]
 850 0036 5369     		ldr	r3, [r2, #20]
 851 0038 23F02A03 		bic	r3, r3, #42
 852 003c 5361     		str	r3, [r2, #20]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 853              		.loc 1 472 0
 854 003e 2268     		ldr	r2, [r4]
 855 0040 1369     		ldr	r3, [r2, #16]
 856 0042 23F00F03 		bic	r3, r3, #15
 857 0046 1361     		str	r3, [r2, #16]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 858              		.loc 1 474 0
 859 0048 2368     		ldr	r3, [r4]
 860 004a 1969     		ldr	r1, [r3, #16]
 861 004c 0D43     		orrs	r5, r5, r1
 862 004e 1D61     		str	r5, [r3, #16]
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 863              		.loc 1 477 0
 864 0050 2268     		ldr	r2, [r4]
 865 0052 D368     		ldr	r3, [r2, #12]
 866 0054 23F40063 		bic	r3, r3, #2048
 867 0058 D360     		str	r3, [r2, #12]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 868              		.loc 1 478 0
 869 005a 2168     		ldr	r1, [r4]
 870 005c CB68     		ldr	r3, [r1, #12]
 871 005e 3343     		orrs	r3, r3, r6
 872 0060 CB60     		str	r3, [r1, #12]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 873              		.loc 1 481 0
 874 0062 2268     		ldr	r2, [r4]
 875 0064 D368     		ldr	r3, [r2, #12]
 876 0066 43F40053 		orr	r3, r3, #8192
 877 006a D360     		str	r3, [r2, #12]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 878              		.loc 1 484 0
 879 006c 0020     		movs	r0, #0
 880 006e E063     		str	r0, [r4, #60]
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 881              		.loc 1 485 0
 882 0070 2023     		movs	r3, #32
 883 0072 84F83930 		strb	r3, [r4, #57]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 884              		.loc 1 486 0
 885 0076 84F83A30 		strb	r3, [r4, #58]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 886              		.loc 1 488 0
 887 007a 70BD     		pop	{r4, r5, r6, pc}
 888              	.LVL69:
 889              	.L59:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 890              		.loc 1 452 0
 891 007c 80F83830 		strb	r3, [r0, #56]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 892              		.loc 1 454 0
 893 0080 FFF7FEFF 		bl	HAL_UART_MspInit
 894              	.LVL70:
ARM GAS  /tmp/ccO6khRt.s 			page 62


 895 0084 C6E7     		b	.L53
 896              	.LVL71:
 897              	.L54:
 898              	.LCFI9:
 899              		.cfi_def_cfa_offset 0
 900              		.cfi_restore 4
 901              		.cfi_restore 5
 902              		.cfi_restore 6
 903              		.cfi_restore 14
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 904              		.loc 1 439 0
 905 0086 0120     		movs	r0, #1
 906              	.LVL72:
 907 0088 7047     		bx	lr
 908              		.cfi_endproc
 909              	.LFE129:
 911              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 912              		.align	1
 913              		.weak	HAL_UART_MspDeInit
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 917              		.fpu fpv4-sp-d16
 919              	HAL_UART_MspDeInit:
 920              	.LFB132:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 921              		.loc 1 545 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926              	.LVL73:
 927 0000 7047     		bx	lr
 928              		.cfi_endproc
 929              	.LFE132:
 931              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 932              		.align	1
 933              		.global	HAL_UART_DeInit
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 937              		.fpu fpv4-sp-d16
 939              	HAL_UART_DeInit:
 940              	.LFB130:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 941              		.loc 1 498 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL74:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 946              		.loc 1 500 0
 947 0000 78B1     		cbz	r0, .L63
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 948              		.loc 1 498 0
 949 0002 10B5     		push	{r4, lr}
 950              	.LCFI10:
ARM GAS  /tmp/ccO6khRt.s 			page 63


 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 14, -4
 954 0004 0446     		mov	r4, r0
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 955              		.loc 1 508 0
 956 0006 2423     		movs	r3, #36
 957 0008 80F83930 		strb	r3, [r0, #57]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 958              		.loc 1 511 0
 959 000c FFF7FEFF 		bl	HAL_UART_MspDeInit
 960              	.LVL75:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 961              		.loc 1 513 0
 962 0010 0020     		movs	r0, #0
 963 0012 E063     		str	r0, [r4, #60]
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 964              		.loc 1 514 0
 965 0014 84F83900 		strb	r0, [r4, #57]
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 966              		.loc 1 515 0
 967 0018 84F83A00 		strb	r0, [r4, #58]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968              		.loc 1 518 0
 969 001c 84F83800 		strb	r0, [r4, #56]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 970              		.loc 1 520 0
 971 0020 10BD     		pop	{r4, pc}
 972              	.LVL76:
 973              	.L63:
 974              	.LCFI11:
 975              		.cfi_def_cfa_offset 0
 976              		.cfi_restore 4
 977              		.cfi_restore 14
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 978              		.loc 1 502 0
 979 0022 0120     		movs	r0, #1
 980              	.LVL77:
 981 0024 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE130:
 985              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 986              		.align	1
 987              		.global	HAL_UART_Transmit
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu fpv4-sp-d16
 993              	HAL_UART_Transmit:
 994              	.LFB133:
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 995              		.loc 1 619 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              	.LVL78:
 1000 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/ccO6khRt.s 			page 64


 1001              	.LCFI12:
 1002              		.cfi_def_cfa_offset 28
 1003              		.cfi_offset 4, -28
 1004              		.cfi_offset 5, -24
 1005              		.cfi_offset 6, -20
 1006              		.cfi_offset 7, -16
 1007              		.cfi_offset 8, -12
 1008              		.cfi_offset 9, -8
 1009              		.cfi_offset 14, -4
 1010 0004 83B0     		sub	sp, sp, #12
 1011              	.LCFI13:
 1012              		.cfi_def_cfa_offset 40
 1013 0006 1E46     		mov	r6, r3
 1014              	.LVL79:
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1015              		.loc 1 624 0
 1016 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1017              	.LVL80:
 1018 000c DBB2     		uxtb	r3, r3
 1019 000e 202B     		cmp	r3, #32
 1020 0010 04D0     		beq	.L83
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1021              		.loc 1 687 0
 1022 0012 0223     		movs	r3, #2
 1023              	.LVL81:
 1024              	.L69:
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1025              		.loc 1 689 0
 1026 0014 1846     		mov	r0, r3
 1027 0016 03B0     		add	sp, sp, #12
 1028              	.LCFI14:
 1029              		.cfi_remember_state
 1030              		.cfi_def_cfa_offset 28
 1031              		@ sp needed
 1032 0018 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1033              	.LVL82:
 1034              	.L83:
 1035              	.LCFI15:
 1036              		.cfi_restore_state
 1037 001c 0446     		mov	r4, r0
 1038 001e 0D46     		mov	r5, r1
 1039 0020 9046     		mov	r8, r2
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1040              		.loc 1 626 0
 1041 0022 0029     		cmp	r1, #0
 1042 0024 58D0     		beq	.L76
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1043              		.loc 1 626 0 is_stmt 0 discriminator 1
 1044 0026 002A     		cmp	r2, #0
 1045 0028 58D0     		beq	.L77
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1046              		.loc 1 632 0 is_stmt 1
 1047 002a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1048 002e 012B     		cmp	r3, #1
 1049 0030 01D1     		bne	.L84
 1050 0032 0223     		movs	r3, #2
 1051 0034 EEE7     		b	.L69
ARM GAS  /tmp/ccO6khRt.s 			page 65


 1052              	.L84:
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1053              		.loc 1 632 0 is_stmt 0 discriminator 2
 1054 0036 0123     		movs	r3, #1
 1055 0038 80F83830 		strb	r3, [r0, #56]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1056              		.loc 1 634 0 is_stmt 1 discriminator 2
 1057 003c 0023     		movs	r3, #0
 1058 003e C363     		str	r3, [r0, #60]
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1059              		.loc 1 635 0 discriminator 2
 1060 0040 2123     		movs	r3, #33
 1061 0042 80F83930 		strb	r3, [r0, #57]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1062              		.loc 1 638 0 discriminator 2
 1063 0046 FFF7FEFF 		bl	HAL_GetTick
 1064              	.LVL83:
 1065 004a 0746     		mov	r7, r0
 1066              	.LVL84:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1067              		.loc 1 640 0 discriminator 2
 1068 004c A4F82480 		strh	r8, [r4, #36]	@ movhi
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1069              		.loc 1 641 0 discriminator 2
 1070 0050 A4F82680 		strh	r8, [r4, #38]	@ movhi
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1071              		.loc 1 664 0 discriminator 2
 1072 0054 4FF00009 		mov	r9, #0
 1073 0058 4FF08008 		mov	r8, #128
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1074              		.loc 1 642 0 discriminator 2
 1075 005c 10E0     		b	.L70
 1076              	.LVL85:
 1077              	.L86:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1078              		.loc 1 647 0
 1079 005e 0096     		str	r6, [sp]
 1080 0060 3B46     		mov	r3, r7
 1081 0062 4A46     		mov	r2, r9
 1082 0064 4146     		mov	r1, r8
 1083 0066 2046     		mov	r0, r4
 1084 0068 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1085              	.LVL86:
 1086 006c 0028     		cmp	r0, #0
 1087 006e 37D1     		bne	.L79
 1088              	.LVL87:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1089              		.loc 1 652 0
 1090 0070 2268     		ldr	r2, [r4]
 1091 0072 2B88     		ldrh	r3, [r5]
 1092 0074 C3F30803 		ubfx	r3, r3, #0, #9
 1093 0078 5360     		str	r3, [r2, #4]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1094              		.loc 1 653 0
 1095 007a 2369     		ldr	r3, [r4, #16]
 1096 007c C3B9     		cbnz	r3, .L72
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccO6khRt.s 			page 66


 1097              		.loc 1 655 0
 1098 007e 0235     		adds	r5, r5, #2
 1099              	.LVL88:
 1100              	.L70:
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1101              		.loc 1 642 0
 1102 0080 E38C     		ldrh	r3, [r4, #38]
 1103 0082 9BB2     		uxth	r3, r3
 1104 0084 B3B1     		cbz	r3, .L85
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1105              		.loc 1 644 0
 1106 0086 E38C     		ldrh	r3, [r4, #38]
 1107 0088 013B     		subs	r3, r3, #1
 1108 008a 9BB2     		uxth	r3, r3
 1109 008c E384     		strh	r3, [r4, #38]	@ movhi
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1110              		.loc 1 645 0
 1111 008e A368     		ldr	r3, [r4, #8]
 1112 0090 B3F5805F 		cmp	r3, #4096
 1113 0094 E3D0     		beq	.L86
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1114              		.loc 1 664 0
 1115 0096 0096     		str	r6, [sp]
 1116 0098 3B46     		mov	r3, r7
 1117 009a 4A46     		mov	r2, r9
 1118 009c 4146     		mov	r1, r8
 1119 009e 2046     		mov	r0, r4
 1120 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1121              	.LVL89:
 1122 00a4 F0B9     		cbnz	r0, .L80
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 1123              		.loc 1 668 0
 1124 00a6 2368     		ldr	r3, [r4]
 1125              	.LVL90:
 1126 00a8 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1127 00aa 5A60     		str	r2, [r3, #4]
 1128 00ac 0135     		adds	r5, r5, #1
 1129              	.LVL91:
 1130 00ae E7E7     		b	.L70
 1131              	.LVL92:
 1132              	.L72:
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1133              		.loc 1 659 0
 1134 00b0 0135     		adds	r5, r5, #1
 1135              	.LVL93:
 1136 00b2 E5E7     		b	.L70
 1137              	.LVL94:
 1138              	.L85:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 1139              		.loc 1 672 0
 1140 00b4 0096     		str	r6, [sp]
 1141 00b6 3B46     		mov	r3, r7
 1142 00b8 0022     		movs	r2, #0
 1143 00ba 4021     		movs	r1, #64
 1144 00bc 2046     		mov	r0, r4
 1145 00be FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1146              	.LVL95:
ARM GAS  /tmp/ccO6khRt.s 			page 67


 1147 00c2 0346     		mov	r3, r0
 1148 00c4 08B1     		cbz	r0, .L87
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1149              		.loc 1 674 0
 1150 00c6 0323     		movs	r3, #3
 1151 00c8 A4E7     		b	.L69
 1152              	.L87:
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1153              		.loc 1 678 0
 1154 00ca 2022     		movs	r2, #32
 1155 00cc 84F83920 		strb	r2, [r4, #57]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1156              		.loc 1 681 0
 1157 00d0 0022     		movs	r2, #0
 1158 00d2 84F83820 		strb	r2, [r4, #56]
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1159              		.loc 1 683 0
 1160 00d6 9DE7     		b	.L69
 1161              	.LVL96:
 1162              	.L76:
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1163              		.loc 1 628 0
 1164 00d8 0123     		movs	r3, #1
 1165 00da 9BE7     		b	.L69
 1166              	.L77:
 1167 00dc 0123     		movs	r3, #1
 1168 00de 99E7     		b	.L69
 1169              	.LVL97:
 1170              	.L79:
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1171              		.loc 1 649 0
 1172 00e0 0323     		movs	r3, #3
 1173 00e2 97E7     		b	.L69
 1174              	.L80:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1175              		.loc 1 666 0
 1176 00e4 0323     		movs	r3, #3
 1177 00e6 95E7     		b	.L69
 1178              		.cfi_endproc
 1179              	.LFE133:
 1181              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1182              		.align	1
 1183              		.global	HAL_UART_Receive
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1187              		.fpu fpv4-sp-d16
 1189              	HAL_UART_Receive:
 1190              	.LFB134:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1191              		.loc 1 701 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL98:
 1196 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1197              	.LCFI16:
ARM GAS  /tmp/ccO6khRt.s 			page 68


 1198              		.cfi_def_cfa_offset 28
 1199              		.cfi_offset 4, -28
 1200              		.cfi_offset 5, -24
 1201              		.cfi_offset 6, -20
 1202              		.cfi_offset 7, -16
 1203              		.cfi_offset 8, -12
 1204              		.cfi_offset 9, -8
 1205              		.cfi_offset 14, -4
 1206 0004 83B0     		sub	sp, sp, #12
 1207              	.LCFI17:
 1208              		.cfi_def_cfa_offset 40
 1209 0006 1E46     		mov	r6, r3
 1210              	.LVL99:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1211              		.loc 1 706 0
 1212 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1213              	.LVL100:
 1214 000c DBB2     		uxtb	r3, r3
 1215 000e 202B     		cmp	r3, #32
 1216 0010 03D0     		beq	.L103
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1217              		.loc 1 776 0
 1218 0012 0220     		movs	r0, #2
 1219              	.LVL101:
 1220              	.L89:
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1221              		.loc 1 778 0
 1222 0014 03B0     		add	sp, sp, #12
 1223              	.LCFI18:
 1224              		.cfi_remember_state
 1225              		.cfi_def_cfa_offset 28
 1226              		@ sp needed
 1227 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1228              	.LVL102:
 1229              	.L103:
 1230              	.LCFI19:
 1231              		.cfi_restore_state
 1232 001a 0446     		mov	r4, r0
 1233 001c 0D46     		mov	r5, r1
 1234 001e 1746     		mov	r7, r2
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1235              		.loc 1 708 0
 1236 0020 0029     		cmp	r1, #0
 1237 0022 58D0     		beq	.L97
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1238              		.loc 1 708 0 is_stmt 0 discriminator 1
 1239 0024 002A     		cmp	r2, #0
 1240 0026 58D0     		beq	.L98
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1241              		.loc 1 714 0 is_stmt 1
 1242 0028 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1243 002c 012B     		cmp	r3, #1
 1244 002e 01D1     		bne	.L104
 1245 0030 0220     		movs	r0, #2
 1246              	.LVL103:
 1247 0032 EFE7     		b	.L89
 1248              	.LVL104:
ARM GAS  /tmp/ccO6khRt.s 			page 69


 1249              	.L104:
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1250              		.loc 1 714 0 is_stmt 0 discriminator 2
 1251 0034 0123     		movs	r3, #1
 1252 0036 80F83830 		strb	r3, [r0, #56]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1253              		.loc 1 716 0 is_stmt 1 discriminator 2
 1254 003a 0023     		movs	r3, #0
 1255 003c C363     		str	r3, [r0, #60]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1256              		.loc 1 717 0 discriminator 2
 1257 003e 2223     		movs	r3, #34
 1258 0040 80F83A30 		strb	r3, [r0, #58]
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1259              		.loc 1 720 0 discriminator 2
 1260 0044 FFF7FEFF 		bl	HAL_GetTick
 1261              	.LVL105:
 1262 0048 8146     		mov	r9, r0
 1263              	.LVL106:
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1264              		.loc 1 722 0 discriminator 2
 1265 004a A785     		strh	r7, [r4, #44]	@ movhi
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1266              		.loc 1 723 0 discriminator 2
 1267 004c E785     		strh	r7, [r4, #46]	@ movhi
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1268              		.loc 1 750 0 discriminator 2
 1269 004e 4FF00008 		mov	r8, #0
 1270 0052 2027     		movs	r7, #32
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1271              		.loc 1 726 0 discriminator 2
 1272 0054 1DE0     		b	.L90
 1273              	.LVL107:
 1274              	.L106:
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1275              		.loc 1 731 0
 1276 0056 0096     		str	r6, [sp]
 1277 0058 4B46     		mov	r3, r9
 1278 005a 4246     		mov	r2, r8
 1279 005c 3946     		mov	r1, r7
 1280 005e 2046     		mov	r0, r4
 1281 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1282              	.LVL108:
 1283 0064 0028     		cmp	r0, #0
 1284 0066 3AD1     		bne	.L100
 1285              	.LVL109:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1286              		.loc 1 736 0
 1287 0068 2369     		ldr	r3, [r4, #16]
 1288 006a 33B9     		cbnz	r3, .L92
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1289              		.loc 1 738 0
 1290 006c 2368     		ldr	r3, [r4]
 1291 006e 5B68     		ldr	r3, [r3, #4]
 1292 0070 C3F30803 		ubfx	r3, r3, #0, #9
 1293 0074 25F8023B 		strh	r3, [r5], #2	@ movhi
 1294              	.LVL110:
ARM GAS  /tmp/ccO6khRt.s 			page 70


 1295 0078 0BE0     		b	.L90
 1296              	.LVL111:
 1297              	.L92:
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1298              		.loc 1 743 0
 1299 007a 2368     		ldr	r3, [r4]
 1300 007c 5B68     		ldr	r3, [r3, #4]
 1301 007e DBB2     		uxtb	r3, r3
 1302 0080 25F8013B 		strh	r3, [r5], #1	@ movhi
 1303              	.LVL112:
 1304 0084 05E0     		b	.L90
 1305              	.LVL113:
 1306              	.L94:
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1307              		.loc 1 760 0
 1308 0086 2368     		ldr	r3, [r4]
 1309 0088 5B68     		ldr	r3, [r3, #4]
 1310 008a 03F07F03 		and	r3, r3, #127
 1311 008e 2B70     		strb	r3, [r5]
 1312 0090 0135     		adds	r5, r5, #1
 1313              	.LVL114:
 1314              	.L90:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1315              		.loc 1 726 0
 1316 0092 E38D     		ldrh	r3, [r4, #46]
 1317 0094 9BB2     		uxth	r3, r3
 1318 0096 BBB1     		cbz	r3, .L105
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1319              		.loc 1 728 0
 1320 0098 E38D     		ldrh	r3, [r4, #46]
 1321 009a 013B     		subs	r3, r3, #1
 1322 009c 9BB2     		uxth	r3, r3
 1323 009e E385     		strh	r3, [r4, #46]	@ movhi
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1324              		.loc 1 729 0
 1325 00a0 A368     		ldr	r3, [r4, #8]
 1326 00a2 B3F5805F 		cmp	r3, #4096
 1327 00a6 D6D0     		beq	.L106
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1328              		.loc 1 750 0
 1329 00a8 0096     		str	r6, [sp]
 1330 00aa 4B46     		mov	r3, r9
 1331 00ac 4246     		mov	r2, r8
 1332 00ae 3946     		mov	r1, r7
 1333 00b0 2046     		mov	r0, r4
 1334 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1335              	.LVL115:
 1336 00b6 A0B9     		cbnz	r0, .L101
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1337              		.loc 1 754 0
 1338 00b8 2369     		ldr	r3, [r4, #16]
 1339 00ba 002B     		cmp	r3, #0
 1340 00bc E3D1     		bne	.L94
 1341              	.LVL116:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1342              		.loc 1 756 0
 1343 00be 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccO6khRt.s 			page 71


 1344 00c0 5B68     		ldr	r3, [r3, #4]
 1345 00c2 2B70     		strb	r3, [r5]
 1346 00c4 0135     		adds	r5, r5, #1
 1347              	.LVL117:
 1348 00c6 E4E7     		b	.L90
 1349              	.L105:
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1350              		.loc 1 767 0
 1351 00c8 2023     		movs	r3, #32
 1352 00ca 84F83A30 		strb	r3, [r4, #58]
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1353              		.loc 1 770 0
 1354 00ce 0020     		movs	r0, #0
 1355 00d0 84F83800 		strb	r0, [r4, #56]
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1356              		.loc 1 772 0
 1357 00d4 9EE7     		b	.L89
 1358              	.LVL118:
 1359              	.L97:
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1360              		.loc 1 710 0
 1361 00d6 0120     		movs	r0, #1
 1362              	.LVL119:
 1363 00d8 9CE7     		b	.L89
 1364              	.LVL120:
 1365              	.L98:
 1366 00da 0120     		movs	r0, #1
 1367              	.LVL121:
 1368 00dc 9AE7     		b	.L89
 1369              	.LVL122:
 1370              	.L100:
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1371              		.loc 1 733 0
 1372 00de 0320     		movs	r0, #3
 1373 00e0 98E7     		b	.L89
 1374              	.L101:
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1375              		.loc 1 752 0
 1376 00e2 0320     		movs	r0, #3
 1377 00e4 96E7     		b	.L89
 1378              		.cfi_endproc
 1379              	.LFE134:
 1381              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1382              		.align	1
 1383              		.global	HAL_UART_Transmit_IT
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	HAL_UART_Transmit_IT:
 1390              	.LFB135:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1391              		.loc 1 789 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
ARM GAS  /tmp/ccO6khRt.s 			page 72


 1396              	.LVL123:
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1397              		.loc 1 791 0
 1398 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1399 0004 DBB2     		uxtb	r3, r3
 1400 0006 202B     		cmp	r3, #32
 1401 0008 01D0     		beq	.L113
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1402              		.loc 1 818 0
 1403 000a 0220     		movs	r0, #2
 1404              	.LVL124:
 1405 000c 7047     		bx	lr
 1406              	.LVL125:
 1407              	.L113:
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1408              		.loc 1 793 0
 1409 000e A9B1     		cbz	r1, .L110
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1410              		.loc 1 793 0 is_stmt 0 discriminator 1
 1411 0010 B2B1     		cbz	r2, .L111
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1412              		.loc 1 799 0 is_stmt 1
 1413 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1414 0016 012B     		cmp	r3, #1
 1415 0018 14D0     		beq	.L112
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1416              		.loc 1 801 0 discriminator 2
 1417 001a 0162     		str	r1, [r0, #32]
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1418              		.loc 1 802 0 discriminator 2
 1419 001c 8284     		strh	r2, [r0, #36]	@ movhi
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1420              		.loc 1 803 0 discriminator 2
 1421 001e C284     		strh	r2, [r0, #38]	@ movhi
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1422              		.loc 1 805 0 discriminator 2
 1423 0020 0023     		movs	r3, #0
 1424 0022 C363     		str	r3, [r0, #60]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1425              		.loc 1 806 0 discriminator 2
 1426 0024 2122     		movs	r2, #33
 1427              	.LVL126:
 1428 0026 80F83920 		strb	r2, [r0, #57]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1429              		.loc 1 809 0 discriminator 2
 1430 002a 80F83830 		strb	r3, [r0, #56]
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1431              		.loc 1 812 0 discriminator 2
 1432 002e 0168     		ldr	r1, [r0]
 1433              	.LVL127:
 1434 0030 CA68     		ldr	r2, [r1, #12]
 1435 0032 42F08002 		orr	r2, r2, #128
 1436 0036 CA60     		str	r2, [r1, #12]
 1437              	.LVL128:
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1438              		.loc 1 814 0 discriminator 2
 1439 0038 1846     		mov	r0, r3
ARM GAS  /tmp/ccO6khRt.s 			page 73


 1440              	.LVL129:
 1441 003a 7047     		bx	lr
 1442              	.LVL130:
 1443              	.L110:
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1444              		.loc 1 795 0
 1445 003c 0120     		movs	r0, #1
 1446              	.LVL131:
 1447 003e 7047     		bx	lr
 1448              	.LVL132:
 1449              	.L111:
 1450 0040 0120     		movs	r0, #1
 1451              	.LVL133:
 1452 0042 7047     		bx	lr
 1453              	.LVL134:
 1454              	.L112:
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1455              		.loc 1 799 0
 1456 0044 0220     		movs	r0, #2
 1457              	.LVL135:
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1458              		.loc 1 820 0
 1459 0046 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE135:
 1463              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1464              		.align	1
 1465              		.global	HAL_UART_Receive_IT
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu fpv4-sp-d16
 1471              	HAL_UART_Receive_IT:
 1472              	.LFB136:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 1473              		.loc 1 831 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              		@ link register save eliminated.
 1478              	.LVL136:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1479              		.loc 1 833 0
 1480 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1481 0004 DBB2     		uxtb	r3, r3
 1482 0006 202B     		cmp	r3, #32
 1483 0008 01D0     		beq	.L120
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1484              		.loc 1 863 0
 1485 000a 0220     		movs	r0, #2
 1486              	.LVL137:
 1487 000c 7047     		bx	lr
 1488              	.LVL138:
 1489              	.L120:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1490              		.loc 1 835 0
 1491 000e D1B1     		cbz	r1, .L117
ARM GAS  /tmp/ccO6khRt.s 			page 74


 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1492              		.loc 1 835 0 is_stmt 0 discriminator 1
 1493 0010 DAB1     		cbz	r2, .L118
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1494              		.loc 1 841 0 is_stmt 1
 1495 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1496 0016 012B     		cmp	r3, #1
 1497 0018 19D0     		beq	.L119
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1498              		.loc 1 843 0 discriminator 2
 1499 001a 8162     		str	r1, [r0, #40]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1500              		.loc 1 844 0 discriminator 2
 1501 001c 8285     		strh	r2, [r0, #44]	@ movhi
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1502              		.loc 1 845 0 discriminator 2
 1503 001e C285     		strh	r2, [r0, #46]	@ movhi
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1504              		.loc 1 847 0 discriminator 2
 1505 0020 0023     		movs	r3, #0
 1506 0022 C363     		str	r3, [r0, #60]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1507              		.loc 1 848 0 discriminator 2
 1508 0024 2222     		movs	r2, #34
 1509              	.LVL139:
 1510 0026 80F83A20 		strb	r2, [r0, #58]
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1511              		.loc 1 851 0 discriminator 2
 1512 002a 80F83830 		strb	r3, [r0, #56]
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1513              		.loc 1 854 0 discriminator 2
 1514 002e 0168     		ldr	r1, [r0]
 1515              	.LVL140:
 1516 0030 4A69     		ldr	r2, [r1, #20]
 1517 0032 42F00102 		orr	r2, r2, #1
 1518 0036 4A61     		str	r2, [r1, #20]
 1519              	.LVL141:
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1520              		.loc 1 857 0 discriminator 2
 1521 0038 0168     		ldr	r1, [r0]
 1522 003a CA68     		ldr	r2, [r1, #12]
 1523 003c 42F49072 		orr	r2, r2, #288
 1524 0040 CA60     		str	r2, [r1, #12]
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1525              		.loc 1 859 0 discriminator 2
 1526 0042 1846     		mov	r0, r3
 1527              	.LVL142:
 1528 0044 7047     		bx	lr
 1529              	.LVL143:
 1530              	.L117:
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1531              		.loc 1 837 0
 1532 0046 0120     		movs	r0, #1
 1533              	.LVL144:
 1534 0048 7047     		bx	lr
 1535              	.LVL145:
 1536              	.L118:
ARM GAS  /tmp/ccO6khRt.s 			page 75


 1537 004a 0120     		movs	r0, #1
 1538              	.LVL146:
 1539 004c 7047     		bx	lr
 1540              	.LVL147:
 1541              	.L119:
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1542              		.loc 1 841 0
 1543 004e 0220     		movs	r0, #2
 1544              	.LVL148:
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1545              		.loc 1 865 0
 1546 0050 7047     		bx	lr
 1547              		.cfi_endproc
 1548              	.LFE136:
 1550              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1551              		.align	1
 1552              		.global	HAL_UART_Transmit_DMA
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu fpv4-sp-d16
 1558              	HAL_UART_Transmit_DMA:
 1559              	.LFB137:
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1560              		.loc 1 876 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564              	.LVL149:
 1565 0000 38B5     		push	{r3, r4, r5, lr}
 1566              	.LCFI20:
 1567              		.cfi_def_cfa_offset 16
 1568              		.cfi_offset 3, -16
 1569              		.cfi_offset 4, -12
 1570              		.cfi_offset 5, -8
 1571              		.cfi_offset 14, -4
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1572              		.loc 1 880 0
 1573 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1574 0006 E4B2     		uxtb	r4, r4
 1575 0008 202C     		cmp	r4, #32
 1576 000a 01D0     		beq	.L128
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1577              		.loc 1 927 0
 1578 000c 0220     		movs	r0, #2
 1579              	.LVL150:
 1580 000e 38BD     		pop	{r3, r4, r5, pc}
 1581              	.LVL151:
 1582              	.L128:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1583              		.loc 1 882 0
 1584 0010 0029     		cmp	r1, #0
 1585 0012 31D0     		beq	.L124
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1586              		.loc 1 882 0 is_stmt 0 discriminator 1
 1587 0014 002A     		cmp	r2, #0
 1588 0016 31D0     		beq	.L125
ARM GAS  /tmp/ccO6khRt.s 			page 76


 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1589              		.loc 1 888 0 is_stmt 1
 1590 0018 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1591 001c 012B     		cmp	r3, #1
 1592 001e 01D1     		bne	.L129
 1593 0020 0220     		movs	r0, #2
 1594              	.LVL152:
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1595              		.loc 1 929 0
 1596 0022 38BD     		pop	{r3, r4, r5, pc}
 1597              	.LVL153:
 1598              	.L129:
 1599 0024 1346     		mov	r3, r2
 1600 0026 0446     		mov	r4, r0
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1601              		.loc 1 888 0 discriminator 2
 1602 0028 0122     		movs	r2, #1
 1603              	.LVL154:
 1604 002a 80F83820 		strb	r2, [r0, #56]
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1605              		.loc 1 890 0 discriminator 2
 1606 002e 0162     		str	r1, [r0, #32]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1607              		.loc 1 891 0 discriminator 2
 1608 0030 8384     		strh	r3, [r0, #36]	@ movhi
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1609              		.loc 1 892 0 discriminator 2
 1610 0032 C384     		strh	r3, [r0, #38]	@ movhi
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1611              		.loc 1 894 0 discriminator 2
 1612 0034 0025     		movs	r5, #0
 1613 0036 C563     		str	r5, [r0, #60]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1614              		.loc 1 895 0 discriminator 2
 1615 0038 2122     		movs	r2, #33
 1616 003a 80F83920 		strb	r2, [r0, #57]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1617              		.loc 1 898 0 discriminator 2
 1618 003e 026B     		ldr	r2, [r0, #48]
 1619 0040 0F48     		ldr	r0, .L130
 1620              	.LVL155:
 1621 0042 D063     		str	r0, [r2, #60]
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1622              		.loc 1 901 0 discriminator 2
 1623 0044 226B     		ldr	r2, [r4, #48]
 1624 0046 0F48     		ldr	r0, .L130+4
 1625 0048 1064     		str	r0, [r2, #64]
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1626              		.loc 1 904 0 discriminator 2
 1627 004a 226B     		ldr	r2, [r4, #48]
 1628 004c 0E48     		ldr	r0, .L130+8
 1629 004e D064     		str	r0, [r2, #76]
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1630              		.loc 1 907 0 discriminator 2
 1631 0050 226B     		ldr	r2, [r4, #48]
 1632 0052 1565     		str	r5, [r2, #80]
 1633              	.LVL156:
ARM GAS  /tmp/ccO6khRt.s 			page 77


 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1634              		.loc 1 911 0 discriminator 2
 1635 0054 2268     		ldr	r2, [r4]
 1636 0056 0432     		adds	r2, r2, #4
 1637 0058 206B     		ldr	r0, [r4, #48]
 1638 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1639              	.LVL157:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1640              		.loc 1 914 0 discriminator 2
 1641 005e 2368     		ldr	r3, [r4]
 1642 0060 6FF04002 		mvn	r2, #64
 1643 0064 1A60     		str	r2, [r3]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1644              		.loc 1 917 0 discriminator 2
 1645 0066 84F83850 		strb	r5, [r4, #56]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1646              		.loc 1 921 0 discriminator 2
 1647 006a 2268     		ldr	r2, [r4]
 1648 006c 5369     		ldr	r3, [r2, #20]
 1649 006e 43F08003 		orr	r3, r3, #128
 1650 0072 5361     		str	r3, [r2, #20]
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1651              		.loc 1 923 0 discriminator 2
 1652 0074 2846     		mov	r0, r5
 1653 0076 38BD     		pop	{r3, r4, r5, pc}
 1654              	.LVL158:
 1655              	.L124:
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1656              		.loc 1 884 0
 1657 0078 0120     		movs	r0, #1
 1658              	.LVL159:
 1659 007a 38BD     		pop	{r3, r4, r5, pc}
 1660              	.LVL160:
 1661              	.L125:
 1662 007c 0120     		movs	r0, #1
 1663              	.LVL161:
 1664 007e 38BD     		pop	{r3, r4, r5, pc}
 1665              	.L131:
 1666              		.align	2
 1667              	.L130:
 1668 0080 00000000 		.word	UART_DMATransmitCplt
 1669 0084 00000000 		.word	UART_DMATxHalfCplt
 1670 0088 00000000 		.word	UART_DMAError
 1671              		.cfi_endproc
 1672              	.LFE137:
 1674              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1675              		.align	1
 1676              		.global	HAL_UART_Receive_DMA
 1677              		.syntax unified
 1678              		.thumb
 1679              		.thumb_func
 1680              		.fpu fpv4-sp-d16
 1682              	HAL_UART_Receive_DMA:
 1683              	.LFB138:
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 1684              		.loc 1 941 0
 1685              		.cfi_startproc
ARM GAS  /tmp/ccO6khRt.s 			page 78


 1686              		@ args = 0, pretend = 0, frame = 0
 1687              		@ frame_needed = 0, uses_anonymous_args = 0
 1688              	.LVL162:
 1689 0000 38B5     		push	{r3, r4, r5, lr}
 1690              	.LCFI21:
 1691              		.cfi_def_cfa_offset 16
 1692              		.cfi_offset 3, -16
 1693              		.cfi_offset 4, -12
 1694              		.cfi_offset 5, -8
 1695              		.cfi_offset 14, -4
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1696              		.loc 1 945 0
 1697 0002 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 1698 0006 E4B2     		uxtb	r4, r4
 1699 0008 202C     		cmp	r4, #32
 1700 000a 01D0     		beq	.L139
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1701              		.loc 1 994 0
 1702 000c 0220     		movs	r0, #2
 1703              	.LVL163:
 1704 000e 38BD     		pop	{r3, r4, r5, pc}
 1705              	.LVL164:
 1706              	.L139:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1707              		.loc 1 947 0
 1708 0010 0029     		cmp	r1, #0
 1709 0012 37D0     		beq	.L135
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1710              		.loc 1 947 0 is_stmt 0 discriminator 1
 1711 0014 002A     		cmp	r2, #0
 1712 0016 37D0     		beq	.L136
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1713              		.loc 1 953 0 is_stmt 1
 1714 0018 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1715 001c 012B     		cmp	r3, #1
 1716 001e 01D1     		bne	.L140
 1717 0020 0220     		movs	r0, #2
 1718              	.LVL165:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1719              		.loc 1 996 0
 1720 0022 38BD     		pop	{r3, r4, r5, pc}
 1721              	.LVL166:
 1722              	.L140:
 1723 0024 1346     		mov	r3, r2
 1724 0026 0A46     		mov	r2, r1
 1725              	.LVL167:
 1726 0028 0546     		mov	r5, r0
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1727              		.loc 1 953 0 discriminator 2
 1728 002a 0121     		movs	r1, #1
 1729              	.LVL168:
 1730 002c 80F83810 		strb	r1, [r0, #56]
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1731              		.loc 1 955 0 discriminator 2
 1732 0030 8262     		str	r2, [r0, #40]
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1733              		.loc 1 956 0 discriminator 2
ARM GAS  /tmp/ccO6khRt.s 			page 79


 1734 0032 8385     		strh	r3, [r0, #44]	@ movhi
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1735              		.loc 1 958 0 discriminator 2
 1736 0034 0024     		movs	r4, #0
 1737 0036 C463     		str	r4, [r0, #60]
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1738              		.loc 1 959 0 discriminator 2
 1739 0038 2221     		movs	r1, #34
 1740 003a 80F83A10 		strb	r1, [r0, #58]
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1741              		.loc 1 962 0 discriminator 2
 1742 003e 416B     		ldr	r1, [r0, #52]
 1743 0040 1248     		ldr	r0, .L141
 1744              	.LVL169:
 1745 0042 C863     		str	r0, [r1, #60]
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1746              		.loc 1 965 0 discriminator 2
 1747 0044 696B     		ldr	r1, [r5, #52]
 1748 0046 1248     		ldr	r0, .L141+4
 1749 0048 0864     		str	r0, [r1, #64]
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1750              		.loc 1 968 0 discriminator 2
 1751 004a 696B     		ldr	r1, [r5, #52]
 1752 004c 1148     		ldr	r0, .L141+8
 1753 004e C864     		str	r0, [r1, #76]
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1754              		.loc 1 971 0 discriminator 2
 1755 0050 696B     		ldr	r1, [r5, #52]
 1756 0052 0C65     		str	r4, [r1, #80]
 1757              	.LVL170:
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1758              		.loc 1 975 0 discriminator 2
 1759 0054 2968     		ldr	r1, [r5]
 1760 0056 0431     		adds	r1, r1, #4
 1761 0058 686B     		ldr	r0, [r5, #52]
 1762 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1763              	.LVL171:
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1764              		.loc 1 978 0 discriminator 2
 1765 005e 2A68     		ldr	r2, [r5]
 1766 0060 D368     		ldr	r3, [r2, #12]
 1767 0062 43F48073 		orr	r3, r3, #256
 1768 0066 D360     		str	r3, [r2, #12]
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1769              		.loc 1 981 0 discriminator 2
 1770 0068 2A68     		ldr	r2, [r5]
 1771 006a 5369     		ldr	r3, [r2, #20]
 1772 006c 43F00103 		orr	r3, r3, #1
 1773 0070 5361     		str	r3, [r2, #20]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1774              		.loc 1 985 0 discriminator 2
 1775 0072 2A68     		ldr	r2, [r5]
 1776 0074 5369     		ldr	r3, [r2, #20]
 1777 0076 43F04003 		orr	r3, r3, #64
 1778 007a 5361     		str	r3, [r2, #20]
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1779              		.loc 1 988 0 discriminator 2
ARM GAS  /tmp/ccO6khRt.s 			page 80


 1780 007c 85F83840 		strb	r4, [r5, #56]
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1781              		.loc 1 990 0 discriminator 2
 1782 0080 2046     		mov	r0, r4
 1783 0082 38BD     		pop	{r3, r4, r5, pc}
 1784              	.LVL172:
 1785              	.L135:
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1786              		.loc 1 949 0
 1787 0084 0120     		movs	r0, #1
 1788              	.LVL173:
 1789 0086 38BD     		pop	{r3, r4, r5, pc}
 1790              	.LVL174:
 1791              	.L136:
 1792 0088 0120     		movs	r0, #1
 1793              	.LVL175:
 1794 008a 38BD     		pop	{r3, r4, r5, pc}
 1795              	.L142:
 1796              		.align	2
 1797              	.L141:
 1798 008c 00000000 		.word	UART_DMAReceiveCplt
 1799 0090 00000000 		.word	UART_DMARxHalfCplt
 1800 0094 00000000 		.word	UART_DMAError
 1801              		.cfi_endproc
 1802              	.LFE138:
 1804              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1805              		.align	1
 1806              		.global	HAL_UART_DMAPause
 1807              		.syntax unified
 1808              		.thumb
 1809              		.thumb_func
 1810              		.fpu fpv4-sp-d16
 1812              	HAL_UART_DMAPause:
 1813              	.LFB139:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 1814              		.loc 1 1005 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 0
 1817              		@ frame_needed = 0, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819              	.LVL176:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1820              		.loc 1 1009 0
 1821 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1822 0004 012B     		cmp	r3, #1
 1823 0006 2FD0     		beq	.L147
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1824              		.loc 1 1009 0 is_stmt 0 discriminator 2
 1825 0008 0123     		movs	r3, #1
 1826 000a 80F83830 		strb	r3, [r0, #56]
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1827              		.loc 1 1010 0 is_stmt 1 discriminator 2
 1828 000e 0268     		ldr	r2, [r0]
 1829 0010 5169     		ldr	r1, [r2, #20]
 1830              	.LVL177:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1831              		.loc 1 1011 0 discriminator 2
ARM GAS  /tmp/ccO6khRt.s 			page 81


 1832 0012 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1833 0016 DBB2     		uxtb	r3, r3
 1834 0018 212B     		cmp	r3, #33
 1835 001a 0BD0     		beq	.L148
 1836              	.L145:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1837              		.loc 1 1016 0
 1838 001c 0268     		ldr	r2, [r0]
 1839 001e 5169     		ldr	r1, [r2, #20]
 1840              	.LVL178:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1841              		.loc 1 1017 0
 1842 0020 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1843 0024 DBB2     		uxtb	r3, r3
 1844 0026 222B     		cmp	r3, #34
 1845 0028 0CD0     		beq	.L149
 1846              	.L146:
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1847              		.loc 1 1028 0
 1848 002a 0023     		movs	r3, #0
 1849 002c 80F83830 		strb	r3, [r0, #56]
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1850              		.loc 1 1030 0
 1851 0030 1846     		mov	r0, r3
 1852              	.LVL179:
 1853 0032 7047     		bx	lr
 1854              	.LVL180:
 1855              	.L148:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1856              		.loc 1 1011 0 discriminator 1
 1857 0034 11F0800F 		tst	r1, #128
 1858 0038 F0D0     		beq	.L145
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1859              		.loc 1 1014 0
 1860 003a 5369     		ldr	r3, [r2, #20]
 1861 003c 23F08003 		bic	r3, r3, #128
 1862 0040 5361     		str	r3, [r2, #20]
 1863 0042 EBE7     		b	.L145
 1864              	.LVL181:
 1865              	.L149:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1866              		.loc 1 1017 0 discriminator 1
 1867 0044 11F0400F 		tst	r1, #64
 1868 0048 EFD0     		beq	.L146
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1869              		.loc 1 1020 0
 1870 004a D368     		ldr	r3, [r2, #12]
 1871 004c 23F48073 		bic	r3, r3, #256
 1872 0050 D360     		str	r3, [r2, #12]
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1873              		.loc 1 1021 0
 1874 0052 0268     		ldr	r2, [r0]
 1875 0054 5369     		ldr	r3, [r2, #20]
 1876 0056 23F00103 		bic	r3, r3, #1
 1877 005a 5361     		str	r3, [r2, #20]
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1878              		.loc 1 1024 0
ARM GAS  /tmp/ccO6khRt.s 			page 82


 1879 005c 0268     		ldr	r2, [r0]
 1880 005e 5369     		ldr	r3, [r2, #20]
 1881 0060 23F04003 		bic	r3, r3, #64
 1882 0064 5361     		str	r3, [r2, #20]
 1883 0066 E0E7     		b	.L146
 1884              	.LVL182:
 1885              	.L147:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1886              		.loc 1 1009 0
 1887 0068 0220     		movs	r0, #2
 1888              	.LVL183:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1889              		.loc 1 1031 0
 1890 006a 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE139:
 1894              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1895              		.align	1
 1896              		.global	HAL_UART_DMAResume
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	HAL_UART_DMAResume:
 1903              	.LFB140:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1904              		.loc 1 1040 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 8
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909              	.LVL184:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1910              		.loc 1 1042 0
 1911 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1912 0004 012B     		cmp	r3, #1
 1913 0006 34D0     		beq	.L154
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1914              		.loc 1 1042 0 is_stmt 0 discriminator 2
 1915 0008 0123     		movs	r3, #1
 1916 000a 80F83830 		strb	r3, [r0, #56]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1917              		.loc 1 1044 0 is_stmt 1 discriminator 2
 1918 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1919 0012 DBB2     		uxtb	r3, r3
 1920 0014 212B     		cmp	r3, #33
 1921 0016 09D0     		beq	.L160
 1922              	.L152:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1923              		.loc 1 1049 0
 1924 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1925 001c DBB2     		uxtb	r3, r3
 1926 001e 222B     		cmp	r3, #34
 1927 0020 0AD0     		beq	.L161
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1928              		.loc 1 1063 0
 1929 0022 0023     		movs	r3, #0
ARM GAS  /tmp/ccO6khRt.s 			page 83


 1930 0024 80F83830 		strb	r3, [r0, #56]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1931              		.loc 1 1065 0
 1932 0028 1846     		mov	r0, r3
 1933              	.LVL185:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1934              		.loc 1 1066 0
 1935 002a 7047     		bx	lr
 1936              	.LVL186:
 1937              	.L160:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1938              		.loc 1 1047 0
 1939 002c 0268     		ldr	r2, [r0]
 1940 002e 5369     		ldr	r3, [r2, #20]
 1941 0030 43F08003 		orr	r3, r3, #128
 1942 0034 5361     		str	r3, [r2, #20]
 1943 0036 EFE7     		b	.L152
 1944              	.L161:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1945              		.loc 1 1040 0
 1946 0038 82B0     		sub	sp, sp, #8
 1947              	.LCFI22:
 1948              		.cfi_def_cfa_offset 8
 1949              	.LBB2:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1950              		.loc 1 1052 0
 1951 003a 0023     		movs	r3, #0
 1952 003c 0193     		str	r3, [sp, #4]
 1953 003e 0368     		ldr	r3, [r0]
 1954 0040 1A68     		ldr	r2, [r3]
 1955 0042 0192     		str	r2, [sp, #4]
 1956 0044 5A68     		ldr	r2, [r3, #4]
 1957 0046 0192     		str	r2, [sp, #4]
 1958 0048 019A     		ldr	r2, [sp, #4]
 1959              	.LBE2:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1960              		.loc 1 1055 0
 1961 004a DA68     		ldr	r2, [r3, #12]
 1962 004c 42F48072 		orr	r2, r2, #256
 1963 0050 DA60     		str	r2, [r3, #12]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1964              		.loc 1 1056 0
 1965 0052 0268     		ldr	r2, [r0]
 1966 0054 5369     		ldr	r3, [r2, #20]
 1967 0056 43F00103 		orr	r3, r3, #1
 1968 005a 5361     		str	r3, [r2, #20]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1969              		.loc 1 1059 0
 1970 005c 0268     		ldr	r2, [r0]
 1971 005e 5369     		ldr	r3, [r2, #20]
 1972 0060 43F04003 		orr	r3, r3, #64
 1973 0064 5361     		str	r3, [r2, #20]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1974              		.loc 1 1063 0
 1975 0066 0023     		movs	r3, #0
 1976 0068 80F83830 		strb	r3, [r0, #56]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/ccO6khRt.s 			page 84


 1977              		.loc 1 1065 0
 1978 006c 1846     		mov	r0, r3
 1979              	.LVL187:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1980              		.loc 1 1066 0
 1981 006e 02B0     		add	sp, sp, #8
 1982              	.LCFI23:
 1983              		.cfi_def_cfa_offset 0
 1984              		@ sp needed
 1985 0070 7047     		bx	lr
 1986              	.LVL188:
 1987              	.L154:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1988              		.loc 1 1042 0
 1989 0072 0220     		movs	r0, #2
 1990              	.LVL189:
 1991 0074 7047     		bx	lr
 1992              		.cfi_endproc
 1993              	.LFE140:
 1995              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1996              		.align	1
 1997              		.global	HAL_UART_DMAStop
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv4-sp-d16
 2003              	HAL_UART_DMAStop:
 2004              	.LFB141:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2005              		.loc 1 1075 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009              	.LVL190:
 2010 0000 10B5     		push	{r4, lr}
 2011              	.LCFI24:
 2012              		.cfi_def_cfa_offset 8
 2013              		.cfi_offset 4, -8
 2014              		.cfi_offset 14, -4
 2015 0002 0446     		mov	r4, r0
 2016              	.LVL191:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2017              		.loc 1 1084 0
 2018 0004 0268     		ldr	r2, [r0]
 2019 0006 5169     		ldr	r1, [r2, #20]
 2020              	.LVL192:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2021              		.loc 1 1085 0
 2022 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2023 000c DBB2     		uxtb	r3, r3
 2024 000e 212B     		cmp	r3, #33
 2025 0010 08D0     		beq	.L168
 2026              	.LVL193:
 2027              	.L163:
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2028              		.loc 1 1098 0
 2029 0012 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccO6khRt.s 			page 85


 2030 0014 5169     		ldr	r1, [r2, #20]
 2031              	.LVL194:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2032              		.loc 1 1099 0
 2033 0016 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2034 001a DBB2     		uxtb	r3, r3
 2035 001c 222B     		cmp	r3, #34
 2036 001e 15D0     		beq	.L169
 2037              	.LVL195:
 2038              	.L165:
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2039              		.loc 1 1112 0
 2040 0020 0020     		movs	r0, #0
 2041 0022 10BD     		pop	{r4, pc}
 2042              	.LVL196:
 2043              	.L168:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2044              		.loc 1 1085 0 discriminator 1
 2045 0024 11F0800F 		tst	r1, #128
 2046 0028 F3D0     		beq	.L163
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2047              		.loc 1 1087 0
 2048 002a 5369     		ldr	r3, [r2, #20]
 2049 002c 23F08003 		bic	r3, r3, #128
 2050 0030 5361     		str	r3, [r2, #20]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2051              		.loc 1 1090 0
 2052 0032 006B     		ldr	r0, [r0, #48]
 2053              	.LVL197:
 2054 0034 08B1     		cbz	r0, .L164
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2055              		.loc 1 1092 0
 2056 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2057              	.LVL198:
 2058              	.L164:
 2059              	.LBB5:
 2060              	.LBB6:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2061              		.loc 1 2143 0
 2062 003a 2268     		ldr	r2, [r4]
 2063 003c D368     		ldr	r3, [r2, #12]
 2064 003e 23F0C003 		bic	r3, r3, #192
 2065 0042 D360     		str	r3, [r2, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2066              		.loc 1 2146 0
 2067 0044 2023     		movs	r3, #32
 2068 0046 84F83930 		strb	r3, [r4, #57]
 2069 004a E2E7     		b	.L163
 2070              	.LVL199:
 2071              	.L169:
 2072              	.LBE6:
 2073              	.LBE5:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2074              		.loc 1 1099 0 discriminator 1
 2075 004c 11F0400F 		tst	r1, #64
 2076 0050 E6D0     		beq	.L165
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 86


 2077              		.loc 1 1101 0
 2078 0052 5369     		ldr	r3, [r2, #20]
 2079 0054 23F04003 		bic	r3, r3, #64
 2080 0058 5361     		str	r3, [r2, #20]
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2081              		.loc 1 1104 0
 2082 005a 606B     		ldr	r0, [r4, #52]
 2083 005c 08B1     		cbz	r0, .L166
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2084              		.loc 1 1106 0
 2085 005e FFF7FEFF 		bl	HAL_DMA_Abort
 2086              	.LVL200:
 2087              	.L166:
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2088              		.loc 1 1108 0
 2089 0062 2046     		mov	r0, r4
 2090 0064 FFF7FEFF 		bl	UART_EndRxTransfer
 2091              	.LVL201:
 2092 0068 DAE7     		b	.L165
 2093              		.cfi_endproc
 2094              	.LFE141:
 2096              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2097              		.align	1
 2098              		.global	HAL_UART_Abort
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2102              		.fpu fpv4-sp-d16
 2104              	HAL_UART_Abort:
 2105              	.LFB142:
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2106              		.loc 1 1127 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
 2110              	.LVL202:
 2111 0000 10B5     		push	{r4, lr}
 2112              	.LCFI25:
 2113              		.cfi_def_cfa_offset 8
 2114              		.cfi_offset 4, -8
 2115              		.cfi_offset 14, -4
 2116 0002 0446     		mov	r4, r0
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2117              		.loc 1 1129 0
 2118 0004 0268     		ldr	r2, [r0]
 2119 0006 D368     		ldr	r3, [r2, #12]
 2120 0008 23F4F073 		bic	r3, r3, #480
 2121 000c D360     		str	r3, [r2, #12]
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2122              		.loc 1 1130 0
 2123 000e 0268     		ldr	r2, [r0]
 2124 0010 5369     		ldr	r3, [r2, #20]
 2125 0012 23F00103 		bic	r3, r3, #1
 2126 0016 5361     		str	r3, [r2, #20]
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2127              		.loc 1 1133 0
 2128 0018 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccO6khRt.s 			page 87


 2129 001a 5A69     		ldr	r2, [r3, #20]
 2130 001c 12F0800F 		tst	r2, #128
 2131 0020 0AD0     		beq	.L171
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2132              		.loc 1 1135 0
 2133 0022 5A69     		ldr	r2, [r3, #20]
 2134 0024 22F08002 		bic	r2, r2, #128
 2135 0028 5A61     		str	r2, [r3, #20]
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2136              		.loc 1 1138 0
 2137 002a 036B     		ldr	r3, [r0, #48]
 2138 002c 23B1     		cbz	r3, .L171
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2139              		.loc 1 1142 0
 2140 002e 0022     		movs	r2, #0
 2141 0030 1A65     		str	r2, [r3, #80]
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2142              		.loc 1 1144 0
 2143 0032 006B     		ldr	r0, [r0, #48]
 2144              	.LVL203:
 2145 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2146              	.LVL204:
 2147              	.L171:
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2148              		.loc 1 1149 0
 2149 0038 2368     		ldr	r3, [r4]
 2150 003a 5A69     		ldr	r2, [r3, #20]
 2151 003c 12F0400F 		tst	r2, #64
 2152 0040 0AD0     		beq	.L172
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2153              		.loc 1 1151 0
 2154 0042 5A69     		ldr	r2, [r3, #20]
 2155 0044 22F04002 		bic	r2, r2, #64
 2156 0048 5A61     		str	r2, [r3, #20]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2157              		.loc 1 1154 0
 2158 004a 636B     		ldr	r3, [r4, #52]
 2159 004c 23B1     		cbz	r3, .L172
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2160              		.loc 1 1158 0
 2161 004e 0022     		movs	r2, #0
 2162 0050 1A65     		str	r2, [r3, #80]
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2163              		.loc 1 1160 0
 2164 0052 606B     		ldr	r0, [r4, #52]
 2165 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2166              	.LVL205:
 2167              	.L172:
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2168              		.loc 1 1165 0
 2169 0058 0020     		movs	r0, #0
 2170 005a E084     		strh	r0, [r4, #38]	@ movhi
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2171              		.loc 1 1166 0
 2172 005c E085     		strh	r0, [r4, #46]	@ movhi
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2173              		.loc 1 1169 0
ARM GAS  /tmp/ccO6khRt.s 			page 88


 2174 005e E063     		str	r0, [r4, #60]
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2175              		.loc 1 1172 0
 2176 0060 2023     		movs	r3, #32
 2177 0062 84F83A30 		strb	r3, [r4, #58]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2178              		.loc 1 1173 0
 2179 0066 84F83930 		strb	r3, [r4, #57]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2180              		.loc 1 1176 0
 2181 006a 10BD     		pop	{r4, pc}
 2182              		.cfi_endproc
 2183              	.LFE142:
 2185              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2186              		.align	1
 2187              		.global	HAL_UART_AbortTransmit
 2188              		.syntax unified
 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu fpv4-sp-d16
 2193              	HAL_UART_AbortTransmit:
 2194              	.LFB143:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2195              		.loc 1 1191 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              	.LVL206:
 2200 0000 10B5     		push	{r4, lr}
 2201              	.LCFI26:
 2202              		.cfi_def_cfa_offset 8
 2203              		.cfi_offset 4, -8
 2204              		.cfi_offset 14, -4
 2205 0002 0446     		mov	r4, r0
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2206              		.loc 1 1193 0
 2207 0004 0268     		ldr	r2, [r0]
 2208 0006 D368     		ldr	r3, [r2, #12]
 2209 0008 23F0C003 		bic	r3, r3, #192
 2210 000c D360     		str	r3, [r2, #12]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2211              		.loc 1 1196 0
 2212 000e 0368     		ldr	r3, [r0]
 2213 0010 5A69     		ldr	r2, [r3, #20]
 2214 0012 12F0800F 		tst	r2, #128
 2215 0016 0AD0     		beq	.L175
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2216              		.loc 1 1198 0
 2217 0018 5A69     		ldr	r2, [r3, #20]
 2218 001a 22F08002 		bic	r2, r2, #128
 2219 001e 5A61     		str	r2, [r3, #20]
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2220              		.loc 1 1201 0
 2221 0020 036B     		ldr	r3, [r0, #48]
 2222 0022 23B1     		cbz	r3, .L175
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2223              		.loc 1 1205 0
ARM GAS  /tmp/ccO6khRt.s 			page 89


 2224 0024 0022     		movs	r2, #0
 2225 0026 1A65     		str	r2, [r3, #80]
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2226              		.loc 1 1207 0
 2227 0028 006B     		ldr	r0, [r0, #48]
 2228              	.LVL207:
 2229 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2230              	.LVL208:
 2231              	.L175:
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2232              		.loc 1 1212 0
 2233 002e 0020     		movs	r0, #0
 2234 0030 E084     		strh	r0, [r4, #38]	@ movhi
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2235              		.loc 1 1215 0
 2236 0032 2023     		movs	r3, #32
 2237 0034 84F83930 		strb	r3, [r4, #57]
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2238              		.loc 1 1218 0
 2239 0038 10BD     		pop	{r4, pc}
 2240              		.cfi_endproc
 2241              	.LFE143:
 2243              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2244              		.align	1
 2245              		.global	HAL_UART_AbortReceive
 2246              		.syntax unified
 2247              		.thumb
 2248              		.thumb_func
 2249              		.fpu fpv4-sp-d16
 2251              	HAL_UART_AbortReceive:
 2252              	.LFB144:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2253              		.loc 1 1233 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 0
 2256              		@ frame_needed = 0, uses_anonymous_args = 0
 2257              	.LVL209:
 2258 0000 10B5     		push	{r4, lr}
 2259              	.LCFI27:
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 4, -8
 2262              		.cfi_offset 14, -4
 2263 0002 0446     		mov	r4, r0
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2264              		.loc 1 1235 0
 2265 0004 0268     		ldr	r2, [r0]
 2266 0006 D368     		ldr	r3, [r2, #12]
 2267 0008 23F49073 		bic	r3, r3, #288
 2268 000c D360     		str	r3, [r2, #12]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2269              		.loc 1 1236 0
 2270 000e 0268     		ldr	r2, [r0]
 2271 0010 5369     		ldr	r3, [r2, #20]
 2272 0012 23F00103 		bic	r3, r3, #1
 2273 0016 5361     		str	r3, [r2, #20]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2274              		.loc 1 1239 0
ARM GAS  /tmp/ccO6khRt.s 			page 90


 2275 0018 0368     		ldr	r3, [r0]
 2276 001a 5A69     		ldr	r2, [r3, #20]
 2277 001c 12F0400F 		tst	r2, #64
 2278 0020 0AD0     		beq	.L178
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2279              		.loc 1 1241 0
 2280 0022 5A69     		ldr	r2, [r3, #20]
 2281 0024 22F04002 		bic	r2, r2, #64
 2282 0028 5A61     		str	r2, [r3, #20]
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2283              		.loc 1 1244 0
 2284 002a 436B     		ldr	r3, [r0, #52]
 2285 002c 23B1     		cbz	r3, .L178
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2286              		.loc 1 1248 0
 2287 002e 0022     		movs	r2, #0
 2288 0030 1A65     		str	r2, [r3, #80]
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2289              		.loc 1 1250 0
 2290 0032 406B     		ldr	r0, [r0, #52]
 2291              	.LVL210:
 2292 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2293              	.LVL211:
 2294              	.L178:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2295              		.loc 1 1255 0
 2296 0038 0020     		movs	r0, #0
 2297 003a E085     		strh	r0, [r4, #46]	@ movhi
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2298              		.loc 1 1258 0
 2299 003c 2023     		movs	r3, #32
 2300 003e 84F83A30 		strb	r3, [r4, #58]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2301              		.loc 1 1261 0
 2302 0042 10BD     		pop	{r4, pc}
 2303              		.cfi_endproc
 2304              	.LFE144:
 2306              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2307              		.align	1
 2308              		.weak	HAL_UART_TxCpltCallback
 2309              		.syntax unified
 2310              		.thumb
 2311              		.thumb_func
 2312              		.fpu fpv4-sp-d16
 2314              	HAL_UART_TxCpltCallback:
 2315              	.LFB149:
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2316              		.loc 1 1650 0
 2317              		.cfi_startproc
 2318              		@ args = 0, pretend = 0, frame = 0
 2319              		@ frame_needed = 0, uses_anonymous_args = 0
 2320              		@ link register save eliminated.
 2321              	.LVL212:
 2322 0000 7047     		bx	lr
 2323              		.cfi_endproc
 2324              	.LFE149:
 2326              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
ARM GAS  /tmp/ccO6khRt.s 			page 91


 2327              		.align	1
 2328              		.syntax unified
 2329              		.thumb
 2330              		.thumb_func
 2331              		.fpu fpv4-sp-d16
 2333              	UART_DMATransmitCplt:
 2334              	.LFB164:
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2335              		.loc 1 1992 0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 0
 2338              		@ frame_needed = 0, uses_anonymous_args = 0
 2339              	.LVL213:
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2340              		.loc 1 1992 0
 2341 0000 08B5     		push	{r3, lr}
 2342              	.LCFI28:
 2343              		.cfi_def_cfa_offset 8
 2344              		.cfi_offset 3, -8
 2345              		.cfi_offset 14, -4
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2346              		.loc 1 1993 0
 2347 0002 836B     		ldr	r3, [r0, #56]
 2348              	.LVL214:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2349              		.loc 1 1995 0
 2350 0004 0268     		ldr	r2, [r0]
 2351 0006 1268     		ldr	r2, [r2]
 2352 0008 12F4807F 		tst	r2, #256
 2353 000c 0CD1     		bne	.L182
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2354              		.loc 1 1997 0
 2355 000e 0022     		movs	r2, #0
 2356 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2357              		.loc 1 2001 0
 2358 0012 1968     		ldr	r1, [r3]
 2359 0014 4A69     		ldr	r2, [r1, #20]
 2360 0016 22F08002 		bic	r2, r2, #128
 2361 001a 4A61     		str	r2, [r1, #20]
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2362              		.loc 1 2004 0
 2363 001c 1A68     		ldr	r2, [r3]
 2364 001e D368     		ldr	r3, [r2, #12]
 2365              	.LVL215:
 2366 0020 43F04003 		orr	r3, r3, #64
 2367 0024 D360     		str	r3, [r2, #12]
 2368 0026 08BD     		pop	{r3, pc}
 2369              	.LVL216:
 2370              	.L182:
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2371              		.loc 1 2010 0
 2372 0028 1846     		mov	r0, r3
 2373              	.LVL217:
 2374 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2375              	.LVL218:
 2376 002e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccO6khRt.s 			page 92


 2377              		.cfi_endproc
 2378              	.LFE164:
 2380              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2381              		.align	1
 2382              		.weak	HAL_UART_TxHalfCpltCallback
 2383              		.syntax unified
 2384              		.thumb
 2385              		.thumb_func
 2386              		.fpu fpv4-sp-d16
 2388              	HAL_UART_TxHalfCpltCallback:
 2389              	.LFB150:
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2390              		.loc 1 1665 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
 2395              	.LVL219:
 2396 0000 7047     		bx	lr
 2397              		.cfi_endproc
 2398              	.LFE150:
 2400              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 2401              		.align	1
 2402              		.syntax unified
 2403              		.thumb
 2404              		.thumb_func
 2405              		.fpu fpv4-sp-d16
 2407              	UART_DMATxHalfCplt:
 2408              	.LFB165:
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2409              		.loc 1 2021 0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 0
 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 2413              	.LVL220:
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2414              		.loc 1 2021 0
 2415 0000 08B5     		push	{r3, lr}
 2416              	.LCFI29:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 3, -8
 2419              		.cfi_offset 14, -4
 2420              	.LVL221:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2421              		.loc 1 2024 0
 2422 0002 806B     		ldr	r0, [r0, #56]
 2423              	.LVL222:
 2424 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 2425              	.LVL223:
 2426 0008 08BD     		pop	{r3, pc}
 2427              		.cfi_endproc
 2428              	.LFE165:
 2430              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 2431              		.align	1
 2432              		.weak	HAL_UART_RxCpltCallback
 2433              		.syntax unified
 2434              		.thumb
ARM GAS  /tmp/ccO6khRt.s 			page 93


 2435              		.thumb_func
 2436              		.fpu fpv4-sp-d16
 2438              	HAL_UART_RxCpltCallback:
 2439              	.LFB151:
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2440              		.loc 1 1680 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 0
 2443              		@ frame_needed = 0, uses_anonymous_args = 0
 2444              		@ link register save eliminated.
 2445              	.LVL224:
 2446 0000 7047     		bx	lr
 2447              		.cfi_endproc
 2448              	.LFE151:
 2450              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2451              		.align	1
 2452              		.syntax unified
 2453              		.thumb
 2454              		.thumb_func
 2455              		.fpu fpv4-sp-d16
 2457              	UART_DMAReceiveCplt:
 2458              	.LFB166:
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2459              		.loc 1 2033 0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463              	.LVL225:
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2464              		.loc 1 2033 0
 2465 0000 08B5     		push	{r3, lr}
 2466              	.LCFI30:
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 3, -8
 2469              		.cfi_offset 14, -4
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2470              		.loc 1 2034 0
 2471 0002 836B     		ldr	r3, [r0, #56]
 2472              	.LVL226:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2473              		.loc 1 2036 0
 2474 0004 0268     		ldr	r2, [r0]
 2475 0006 1268     		ldr	r2, [r2]
 2476 0008 12F4807F 		tst	r2, #256
 2477 000c 13D1     		bne	.L190
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2478              		.loc 1 2038 0
 2479 000e 0022     		movs	r2, #0
 2480 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2481              		.loc 1 2041 0
 2482 0012 1968     		ldr	r1, [r3]
 2483 0014 CA68     		ldr	r2, [r1, #12]
 2484 0016 22F48072 		bic	r2, r2, #256
 2485 001a CA60     		str	r2, [r1, #12]
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2486              		.loc 1 2042 0
ARM GAS  /tmp/ccO6khRt.s 			page 94


 2487 001c 1968     		ldr	r1, [r3]
 2488 001e 4A69     		ldr	r2, [r1, #20]
 2489 0020 22F00102 		bic	r2, r2, #1
 2490 0024 4A61     		str	r2, [r1, #20]
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 2491              		.loc 1 2046 0
 2492 0026 1968     		ldr	r1, [r3]
 2493 0028 4A69     		ldr	r2, [r1, #20]
 2494 002a 22F04002 		bic	r2, r2, #64
 2495 002e 4A61     		str	r2, [r1, #20]
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2496              		.loc 1 2049 0
 2497 0030 2022     		movs	r2, #32
 2498 0032 83F83A20 		strb	r2, [r3, #58]
 2499              	.L190:
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2500              		.loc 1 2051 0
 2501 0036 1846     		mov	r0, r3
 2502              	.LVL227:
 2503 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2504              	.LVL228:
 2505 003c 08BD     		pop	{r3, pc}
 2506              		.cfi_endproc
 2507              	.LFE166:
 2509              		.section	.text.UART_Receive_IT,"ax",%progbits
 2510              		.align	1
 2511              		.syntax unified
 2512              		.thumb
 2513              		.thumb_func
 2514              		.fpu fpv4-sp-d16
 2516              	UART_Receive_IT:
 2517              	.LFB179:
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 2518              		.loc 1 2370 0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
 2522              	.LVL229:
 2523 0000 08B5     		push	{r3, lr}
 2524              	.LCFI31:
 2525              		.cfi_def_cfa_offset 8
 2526              		.cfi_offset 3, -8
 2527              		.cfi_offset 14, -4
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2528              		.loc 1 2374 0
 2529 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2530 0006 DBB2     		uxtb	r3, r3
 2531 0008 222B     		cmp	r3, #34
 2532 000a 01D0     		beq	.L201
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2533              		.loc 1 2421 0
 2534 000c 0220     		movs	r0, #2
 2535              	.LVL230:
 2536 000e 08BD     		pop	{r3, pc}
 2537              	.LVL231:
 2538              	.L201:
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccO6khRt.s 			page 95


 2539              		.loc 1 2376 0
 2540 0010 8368     		ldr	r3, [r0, #8]
 2541 0012 B3F5805F 		cmp	r3, #4096
 2542 0016 0ED0     		beq	.L202
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2543              		.loc 1 2392 0
 2544 0018 0369     		ldr	r3, [r0, #16]
 2545 001a 03BB     		cbnz	r3, .L197
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2546              		.loc 1 2394 0
 2547 001c 836A     		ldr	r3, [r0, #40]
 2548 001e 5A1C     		adds	r2, r3, #1
 2549 0020 8262     		str	r2, [r0, #40]
 2550 0022 0268     		ldr	r2, [r0]
 2551 0024 5268     		ldr	r2, [r2, #4]
 2552 0026 1A70     		strb	r2, [r3]
 2553              	.L196:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2554              		.loc 1 2402 0
 2555 0028 C38D     		ldrh	r3, [r0, #46]
 2556 002a 013B     		subs	r3, r3, #1
 2557 002c 9BB2     		uxth	r3, r3
 2558 002e C385     		strh	r3, [r0, #46]	@ movhi
 2559 0030 F3B1     		cbz	r3, .L203
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2560              		.loc 1 2417 0
 2561 0032 0020     		movs	r0, #0
 2562              	.LVL232:
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2563              		.loc 1 2423 0
 2564 0034 08BD     		pop	{r3, pc}
 2565              	.LVL233:
 2566              	.L202:
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 2567              		.loc 1 2378 0
 2568 0036 826A     		ldr	r2, [r0, #40]
 2569              	.LVL234:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2570              		.loc 1 2379 0
 2571 0038 0369     		ldr	r3, [r0, #16]
 2572 003a 43B9     		cbnz	r3, .L195
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 2573              		.loc 1 2381 0
 2574 003c 0368     		ldr	r3, [r0]
 2575 003e 5B68     		ldr	r3, [r3, #4]
 2576 0040 C3F30803 		ubfx	r3, r3, #0, #9
 2577 0044 1380     		strh	r3, [r2]	@ movhi
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2578              		.loc 1 2382 0
 2579 0046 836A     		ldr	r3, [r0, #40]
 2580 0048 0233     		adds	r3, r3, #2
 2581 004a 8362     		str	r3, [r0, #40]
 2582 004c ECE7     		b	.L196
 2583              	.L195:
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 2584              		.loc 1 2386 0
 2585 004e 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccO6khRt.s 			page 96


 2586 0050 5B68     		ldr	r3, [r3, #4]
 2587 0052 DBB2     		uxtb	r3, r3
 2588 0054 1380     		strh	r3, [r2]	@ movhi
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2589              		.loc 1 2387 0
 2590 0056 836A     		ldr	r3, [r0, #40]
 2591 0058 0133     		adds	r3, r3, #1
 2592 005a 8362     		str	r3, [r0, #40]
 2593 005c E4E7     		b	.L196
 2594              	.LVL235:
 2595              	.L197:
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2596              		.loc 1 2398 0
 2597 005e 826A     		ldr	r2, [r0, #40]
 2598 0060 531C     		adds	r3, r2, #1
 2599 0062 8362     		str	r3, [r0, #40]
 2600 0064 0368     		ldr	r3, [r0]
 2601 0066 5B68     		ldr	r3, [r3, #4]
 2602 0068 03F07F03 		and	r3, r3, #127
 2603 006c 1370     		strb	r3, [r2]
 2604 006e DBE7     		b	.L196
 2605              	.L203:
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2606              		.loc 1 2405 0
 2607 0070 0268     		ldr	r2, [r0]
 2608 0072 D368     		ldr	r3, [r2, #12]
 2609 0074 23F49073 		bic	r3, r3, #288
 2610 0078 D360     		str	r3, [r2, #12]
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2611              		.loc 1 2408 0
 2612 007a 0268     		ldr	r2, [r0]
 2613 007c 5369     		ldr	r3, [r2, #20]
 2614 007e 23F00103 		bic	r3, r3, #1
 2615 0082 5361     		str	r3, [r2, #20]
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 2616              		.loc 1 2411 0
 2617 0084 2023     		movs	r3, #32
 2618 0086 80F83A30 		strb	r3, [r0, #58]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2619              		.loc 1 2413 0
 2620 008a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2621              	.LVL236:
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2622              		.loc 1 2415 0
 2623 008e 0020     		movs	r0, #0
 2624 0090 08BD     		pop	{r3, pc}
 2625              		.cfi_endproc
 2626              	.LFE179:
 2628              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2629              		.align	1
 2630              		.weak	HAL_UART_RxHalfCpltCallback
 2631              		.syntax unified
 2632              		.thumb
 2633              		.thumb_func
 2634              		.fpu fpv4-sp-d16
 2636              	HAL_UART_RxHalfCpltCallback:
 2637              	.LFB152:
ARM GAS  /tmp/ccO6khRt.s 			page 97


1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2638              		.loc 1 1695 0
 2639              		.cfi_startproc
 2640              		@ args = 0, pretend = 0, frame = 0
 2641              		@ frame_needed = 0, uses_anonymous_args = 0
 2642              		@ link register save eliminated.
 2643              	.LVL237:
 2644 0000 7047     		bx	lr
 2645              		.cfi_endproc
 2646              	.LFE152:
 2648              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2649              		.align	1
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu fpv4-sp-d16
 2655              	UART_DMARxHalfCplt:
 2656              	.LFB167:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2657              		.loc 1 2061 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              	.LVL238:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 2662              		.loc 1 2061 0
 2663 0000 08B5     		push	{r3, lr}
 2664              	.LCFI32:
 2665              		.cfi_def_cfa_offset 8
 2666              		.cfi_offset 3, -8
 2667              		.cfi_offset 14, -4
 2668              	.LVL239:
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2669              		.loc 1 2064 0
 2670 0002 806B     		ldr	r0, [r0, #56]
 2671              	.LVL240:
 2672 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2673              	.LVL241:
 2674 0008 08BD     		pop	{r3, pc}
 2675              		.cfi_endproc
 2676              	.LFE167:
 2678              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2679              		.align	1
 2680              		.weak	HAL_UART_ErrorCallback
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu fpv4-sp-d16
 2686              	HAL_UART_ErrorCallback:
 2687              	.LFB153:
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2688              		.loc 1 1710 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 2692              		@ link register save eliminated.
 2693              	.LVL242:
ARM GAS  /tmp/ccO6khRt.s 			page 98


 2694 0000 7047     		bx	lr
 2695              		.cfi_endproc
 2696              	.LFE153:
 2698              		.section	.text.UART_DMAError,"ax",%progbits
 2699              		.align	1
 2700              		.syntax unified
 2701              		.thumb
 2702              		.thumb_func
 2703              		.fpu fpv4-sp-d16
 2705              	UART_DMAError:
 2706              	.LFB168:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2707              		.loc 1 2073 0
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 0
 2710              		@ frame_needed = 0, uses_anonymous_args = 0
 2711              	.LVL243:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2712              		.loc 1 2073 0
 2713 0000 10B5     		push	{r4, lr}
 2714              	.LCFI33:
 2715              		.cfi_def_cfa_offset 8
 2716              		.cfi_offset 4, -8
 2717              		.cfi_offset 14, -4
 2718              	.LVL244:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2719              		.loc 1 2075 0
 2720 0002 846B     		ldr	r4, [r0, #56]
 2721              	.LVL245:
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2722              		.loc 1 2078 0
 2723 0004 2268     		ldr	r2, [r4]
 2724 0006 5169     		ldr	r1, [r2, #20]
 2725              	.LVL246:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2726              		.loc 1 2079 0
 2727 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 2728 000c DBB2     		uxtb	r3, r3
 2729 000e 212B     		cmp	r3, #33
 2730 0010 0ED0     		beq	.L212
 2731              	.L209:
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2732              		.loc 1 2086 0
 2733 0012 2368     		ldr	r3, [r4]
 2734 0014 5A69     		ldr	r2, [r3, #20]
 2735              	.LVL247:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2736              		.loc 1 2087 0
 2737 0016 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2738 001a DBB2     		uxtb	r3, r3
 2739 001c 222B     		cmp	r3, #34
 2740 001e 14D0     		beq	.L213
 2741              	.LVL248:
 2742              	.L210:
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 2743              		.loc 1 2093 0
 2744 0020 E36B     		ldr	r3, [r4, #60]
ARM GAS  /tmp/ccO6khRt.s 			page 99


 2745 0022 43F01003 		orr	r3, r3, #16
 2746 0026 E363     		str	r3, [r4, #60]
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2747              		.loc 1 2094 0
 2748 0028 2046     		mov	r0, r4
 2749 002a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2750              	.LVL249:
 2751 002e 10BD     		pop	{r4, pc}
 2752              	.LVL250:
 2753              	.L212:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2754              		.loc 1 2079 0 discriminator 1
 2755 0030 11F0800F 		tst	r1, #128
 2756 0034 EDD0     		beq	.L209
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2757              		.loc 1 2081 0
 2758 0036 0023     		movs	r3, #0
 2759 0038 E384     		strh	r3, [r4, #38]	@ movhi
 2760              	.LVL251:
 2761              	.LBB9:
 2762              	.LBB10:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2763              		.loc 1 2143 0
 2764 003a D368     		ldr	r3, [r2, #12]
 2765 003c 23F0C003 		bic	r3, r3, #192
 2766 0040 D360     		str	r3, [r2, #12]
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2767              		.loc 1 2146 0
 2768 0042 2023     		movs	r3, #32
 2769 0044 84F83930 		strb	r3, [r4, #57]
 2770 0048 E3E7     		b	.L209
 2771              	.LVL252:
 2772              	.L213:
 2773              	.LBE10:
 2774              	.LBE9:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2775              		.loc 1 2087 0 discriminator 1
 2776 004a 12F0400F 		tst	r2, #64
 2777 004e E7D0     		beq	.L210
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2778              		.loc 1 2089 0
 2779 0050 0023     		movs	r3, #0
 2780 0052 E385     		strh	r3, [r4, #46]	@ movhi
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2781              		.loc 1 2090 0
 2782 0054 2046     		mov	r0, r4
 2783              	.LVL253:
 2784 0056 FFF7FEFF 		bl	UART_EndRxTransfer
 2785              	.LVL254:
 2786 005a E1E7     		b	.L210
 2787              		.cfi_endproc
 2788              	.LFE168:
 2790              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2791              		.align	1
 2792              		.global	HAL_UART_IRQHandler
 2793              		.syntax unified
 2794              		.thumb
ARM GAS  /tmp/ccO6khRt.s 			page 100


 2795              		.thumb_func
 2796              		.fpu fpv4-sp-d16
 2798              	HAL_UART_IRQHandler:
 2799              	.LFB148:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2800              		.loc 1 1523 0
 2801              		.cfi_startproc
 2802              		@ args = 0, pretend = 0, frame = 0
 2803              		@ frame_needed = 0, uses_anonymous_args = 0
 2804              	.LVL255:
 2805 0000 10B5     		push	{r4, lr}
 2806              	.LCFI34:
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 4, -8
 2809              		.cfi_offset 14, -4
 2810 0002 0446     		mov	r4, r0
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2811              		.loc 1 1524 0
 2812 0004 0268     		ldr	r2, [r0]
 2813 0006 1368     		ldr	r3, [r2]
 2814              	.LVL256:
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2815              		.loc 1 1525 0
 2816 0008 D068     		ldr	r0, [r2, #12]
 2817              	.LVL257:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2818              		.loc 1 1526 0
 2819 000a 5169     		ldr	r1, [r2, #20]
 2820              	.LVL258:
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2821              		.loc 1 1532 0
 2822 000c 13F00F0F 		tst	r3, #15
 2823 0010 17D1     		bne	.L215
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2824              		.loc 1 1535 0
 2825 0012 13F0200F 		tst	r3, #32
 2826 0016 02D0     		beq	.L216
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2827              		.loc 1 1535 0 is_stmt 0 discriminator 1
 2828 0018 10F0200F 		tst	r0, #32
 2829 001c 0DD1     		bne	.L238
 2830              	.LVL259:
 2831              	.L216:
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2832              		.loc 1 1629 0 is_stmt 1
 2833 001e 13F0800F 		tst	r3, #128
 2834 0022 02D0     		beq	.L232
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2835              		.loc 1 1629 0 is_stmt 0 discriminator 1
 2836 0024 10F0800F 		tst	r0, #128
 2837 0028 79D1     		bne	.L239
 2838              	.L232:
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2839              		.loc 1 1636 0 is_stmt 1
 2840 002a 13F0400F 		tst	r3, #64
 2841 002e 03D0     		beq	.L214
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccO6khRt.s 			page 101


 2842              		.loc 1 1636 0 is_stmt 0 discriminator 1
 2843 0030 10F0400F 		tst	r0, #64
 2844 0034 40F0A280 		bne	.L240
 2845              	.LVL260:
 2846              	.L214:
 2847 0038 10BD     		pop	{r4, pc}
 2848              	.LVL261:
 2849              	.L238:
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 2850              		.loc 1 1537 0 is_stmt 1
 2851 003a 2046     		mov	r0, r4
 2852              	.LVL262:
 2853 003c FFF7FEFF 		bl	UART_Receive_IT
 2854              	.LVL263:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2855              		.loc 1 1538 0
 2856 0040 10BD     		pop	{r4, pc}
 2857              	.LVL264:
 2858              	.L215:
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2859              		.loc 1 1543 0 discriminator 1
 2860 0042 11F00101 		ands	r1, r1, #1
 2861              	.LVL265:
 2862 0046 02D1     		bne	.L218
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2863              		.loc 1 1543 0 is_stmt 0 discriminator 2
 2864 0048 10F4907F 		tst	r0, #288
 2865 004c E7D0     		beq	.L216
 2866              	.L218:
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2867              		.loc 1 1546 0 is_stmt 1
 2868 004e 13F0010F 		tst	r3, #1
 2869 0052 06D0     		beq	.L219
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2870              		.loc 1 1546 0 is_stmt 0 discriminator 1
 2871 0054 10F4807F 		tst	r0, #256
 2872 0058 03D0     		beq	.L219
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2873              		.loc 1 1548 0 is_stmt 1
 2874 005a E26B     		ldr	r2, [r4, #60]
 2875 005c 42F00102 		orr	r2, r2, #1
 2876 0060 E263     		str	r2, [r4, #60]
 2877              	.L219:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2878              		.loc 1 1552 0
 2879 0062 13F0040F 		tst	r3, #4
 2880 0066 0DD0     		beq	.L220
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2881              		.loc 1 1552 0 is_stmt 0 discriminator 1
 2882 0068 0029     		cmp	r1, #0
 2883 006a 00F09280 		beq	.L221
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2884              		.loc 1 1554 0 is_stmt 1
 2885 006e E26B     		ldr	r2, [r4, #60]
 2886 0070 42F00202 		orr	r2, r2, #2
 2887 0074 E263     		str	r2, [r4, #60]
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccO6khRt.s 			page 102


 2888              		.loc 1 1558 0
 2889 0076 13F0020F 		tst	r3, #2
 2890 007a 08D1     		bne	.L222
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2891              		.loc 1 1564 0
 2892 007c 13F0080F 		tst	r3, #8
 2893 0080 0CD1     		bne	.L226
 2894 0082 0FE0     		b	.L225
 2895              	.L220:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2896              		.loc 1 1558 0
 2897 0084 13F0020F 		tst	r3, #2
 2898 0088 00F08680 		beq	.L224
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2899              		.loc 1 1558 0 is_stmt 0 discriminator 1
 2900 008c 51B1     		cbz	r1, .L225
 2901              	.L222:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2902              		.loc 1 1560 0 is_stmt 1
 2903 008e E26B     		ldr	r2, [r4, #60]
 2904 0090 42F00402 		orr	r2, r2, #4
 2905 0094 E263     		str	r2, [r4, #60]
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 2906              		.loc 1 1564 0
 2907 0096 13F0080F 		tst	r3, #8
 2908 009a 03D0     		beq	.L225
 2909              	.L226:
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2910              		.loc 1 1566 0
 2911 009c E26B     		ldr	r2, [r4, #60]
 2912 009e 42F00802 		orr	r2, r2, #8
 2913 00a2 E263     		str	r2, [r4, #60]
 2914              	.L225:
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2915              		.loc 1 1570 0
 2916 00a4 E26B     		ldr	r2, [r4, #60]
 2917 00a6 002A     		cmp	r2, #0
 2918 00a8 C6D0     		beq	.L214
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2919              		.loc 1 1573 0
 2920 00aa 13F0200F 		tst	r3, #32
 2921 00ae 02D0     		beq	.L227
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2922              		.loc 1 1573 0 is_stmt 0 discriminator 1
 2923 00b0 10F0200F 		tst	r0, #32
 2924 00b4 21D1     		bne	.L241
 2925              	.LVL266:
 2926              	.L227:
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 2927              		.loc 1 1580 0 is_stmt 1
 2928 00b6 2368     		ldr	r3, [r4]
 2929 00b8 5A69     		ldr	r2, [r3, #20]
 2930              	.LVL267:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2931              		.loc 1 1581 0
 2932 00ba E36B     		ldr	r3, [r4, #60]
 2933 00bc 13F0080F 		tst	r3, #8
ARM GAS  /tmp/ccO6khRt.s 			page 103


 2934 00c0 02D1     		bne	.L228
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2935              		.loc 1 1581 0 is_stmt 0 discriminator 1
 2936 00c2 12F0400F 		tst	r2, #64
 2937 00c6 24D0     		beq	.L229
 2938              	.L228:
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 2939              		.loc 1 1586 0 is_stmt 1
 2940 00c8 2046     		mov	r0, r4
 2941 00ca FFF7FEFF 		bl	UART_EndRxTransfer
 2942              	.LVL268:
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2943              		.loc 1 1589 0
 2944 00ce 2368     		ldr	r3, [r4]
 2945 00d0 5A69     		ldr	r2, [r3, #20]
 2946 00d2 12F0400F 		tst	r2, #64
 2947 00d6 18D0     		beq	.L230
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 2948              		.loc 1 1591 0
 2949 00d8 5A69     		ldr	r2, [r3, #20]
 2950 00da 22F04002 		bic	r2, r2, #64
 2951 00de 5A61     		str	r2, [r3, #20]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2952              		.loc 1 1594 0
 2953 00e0 636B     		ldr	r3, [r4, #52]
 2954 00e2 73B1     		cbz	r3, .L231
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2955              		.loc 1 1598 0
 2956 00e4 2F4A     		ldr	r2, .L243
 2957 00e6 1A65     		str	r2, [r3, #80]
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 2958              		.loc 1 1599 0
 2959 00e8 606B     		ldr	r0, [r4, #52]
 2960 00ea FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2961              	.LVL269:
 2962 00ee 0028     		cmp	r0, #0
 2963 00f0 A2D0     		beq	.L214
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 2964              		.loc 1 1602 0
 2965 00f2 606B     		ldr	r0, [r4, #52]
 2966 00f4 036D     		ldr	r3, [r0, #80]
 2967 00f6 9847     		blx	r3
 2968              	.LVL270:
 2969 00f8 10BD     		pop	{r4, pc}
 2970              	.LVL271:
 2971              	.L241:
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2972              		.loc 1 1575 0
 2973 00fa 2046     		mov	r0, r4
 2974              	.LVL272:
 2975 00fc FFF7FEFF 		bl	UART_Receive_IT
 2976              	.LVL273:
 2977 0100 D9E7     		b	.L227
 2978              	.LVL274:
 2979              	.L231:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 2980              		.loc 1 1608 0
ARM GAS  /tmp/ccO6khRt.s 			page 104


 2981 0102 2046     		mov	r0, r4
 2982 0104 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2983              	.LVL275:
 2984 0108 10BD     		pop	{r4, pc}
 2985              	.LVL276:
 2986              	.L230:
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2987              		.loc 1 1614 0
 2988 010a 2046     		mov	r0, r4
 2989 010c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2990              	.LVL277:
 2991 0110 10BD     		pop	{r4, pc}
 2992              	.LVL278:
 2993              	.L229:
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 2994              		.loc 1 1621 0
 2995 0112 2046     		mov	r0, r4
 2996 0114 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2997              	.LVL279:
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2998              		.loc 1 1622 0
 2999 0118 0023     		movs	r3, #0
 3000 011a E363     		str	r3, [r4, #60]
 3001 011c 10BD     		pop	{r4, pc}
 3002              	.LVL280:
 3003              	.L239:
 3004              	.LBB15:
 3005              	.LBB16:
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3006              		.loc 1 2308 0
 3007 011e 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 3008              	.LVL281:
 3009 0122 DBB2     		uxtb	r3, r3
 3010 0124 212B     		cmp	r3, #33
 3011 0126 87D1     		bne	.L214
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3012              		.loc 1 2310 0
 3013 0128 A368     		ldr	r3, [r4, #8]
 3014 012a B3F5805F 		cmp	r3, #4096
 3015 012e 16D0     		beq	.L242
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3016              		.loc 1 2325 0
 3017 0130 236A     		ldr	r3, [r4, #32]
 3018 0132 591C     		adds	r1, r3, #1
 3019 0134 2162     		str	r1, [r4, #32]
 3020 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3021 0138 5360     		str	r3, [r2, #4]
 3022              	.L235:
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3023              		.loc 1 2328 0
 3024 013a E38C     		ldrh	r3, [r4, #38]
 3025 013c 013B     		subs	r3, r3, #1
 3026 013e 9BB2     		uxth	r3, r3
 3027 0140 E384     		strh	r3, [r4, #38]	@ movhi
 3028 0142 002B     		cmp	r3, #0
 3029 0144 7FF478AF 		bne	.L214
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 105


 3030              		.loc 1 2331 0
 3031 0148 2268     		ldr	r2, [r4]
 3032 014a D368     		ldr	r3, [r2, #12]
 3033 014c 23F08003 		bic	r3, r3, #128
 3034 0150 D360     		str	r3, [r2, #12]
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3035              		.loc 1 2334 0
 3036 0152 2268     		ldr	r2, [r4]
 3037 0154 D368     		ldr	r3, [r2, #12]
 3038 0156 43F04003 		orr	r3, r3, #64
 3039 015a D360     		str	r3, [r2, #12]
 3040 015c 10BD     		pop	{r4, pc}
 3041              	.LVL282:
 3042              	.L242:
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3043              		.loc 1 2313 0
 3044 015e 236A     		ldr	r3, [r4, #32]
 3045 0160 1B88     		ldrh	r3, [r3]
 3046 0162 C3F30803 		ubfx	r3, r3, #0, #9
 3047 0166 5360     		str	r3, [r2, #4]
 3048              	.LVL283:
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3049              		.loc 1 2314 0
 3050 0168 2369     		ldr	r3, [r4, #16]
 3051 016a 1BB9     		cbnz	r3, .L234
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3052              		.loc 1 2316 0
 3053 016c 236A     		ldr	r3, [r4, #32]
 3054 016e 0233     		adds	r3, r3, #2
 3055 0170 2362     		str	r3, [r4, #32]
 3056 0172 E2E7     		b	.L235
 3057              	.L234:
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3058              		.loc 1 2320 0
 3059 0174 236A     		ldr	r3, [r4, #32]
 3060 0176 0133     		adds	r3, r3, #1
 3061 0178 2362     		str	r3, [r4, #32]
 3062 017a DEE7     		b	.L235
 3063              	.LVL284:
 3064              	.L240:
 3065              	.LBE16:
 3066              	.LBE15:
 3067              	.LBB17:
 3068              	.LBB18:
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3069              		.loc 1 2353 0
 3070 017c D368     		ldr	r3, [r2, #12]
 3071              	.LVL285:
 3072 017e 23F04003 		bic	r3, r3, #64
 3073 0182 D360     		str	r3, [r2, #12]
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 3074              		.loc 1 2356 0
 3075 0184 2023     		movs	r3, #32
 3076 0186 84F83930 		strb	r3, [r4, #57]
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3077              		.loc 1 2358 0
 3078 018a 2046     		mov	r0, r4
ARM GAS  /tmp/ccO6khRt.s 			page 106


 3079              	.LVL286:
 3080 018c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3081              	.LVL287:
 3082 0190 10BD     		pop	{r4, pc}
 3083              	.LVL288:
 3084              	.L221:
 3085              	.LBE18:
 3086              	.LBE17:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3087              		.loc 1 1558 0
 3088 0192 13F0020F 		tst	r3, #2
 3089 0196 85D1     		bne	.L225
 3090              	.L224:
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3091              		.loc 1 1564 0
 3092 0198 13F0080F 		tst	r3, #8
 3093 019c 82D0     		beq	.L225
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3094              		.loc 1 1564 0 is_stmt 0 discriminator 1
 3095 019e 0029     		cmp	r1, #0
 3096 01a0 80D0     		beq	.L225
 3097 01a2 7BE7     		b	.L226
 3098              	.L244:
 3099              		.align	2
 3100              	.L243:
 3101 01a4 00000000 		.word	UART_DMAAbortOnError
 3102              		.cfi_endproc
 3103              	.LFE148:
 3105              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3106              		.align	1
 3107              		.syntax unified
 3108              		.thumb
 3109              		.thumb_func
 3110              		.fpu fpv4-sp-d16
 3112              	UART_DMAAbortOnError:
 3113              	.LFB172:
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3114              		.loc 1 2171 0 is_stmt 1
 3115              		.cfi_startproc
 3116              		@ args = 0, pretend = 0, frame = 0
 3117              		@ frame_needed = 0, uses_anonymous_args = 0
 3118              	.LVL289:
 3119 0000 08B5     		push	{r3, lr}
 3120              	.LCFI35:
 3121              		.cfi_def_cfa_offset 8
 3122              		.cfi_offset 3, -8
 3123              		.cfi_offset 14, -4
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0;
 3124              		.loc 1 2172 0
 3125 0002 806B     		ldr	r0, [r0, #56]
 3126              	.LVL290:
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0;
 3127              		.loc 1 2173 0
 3128 0004 0023     		movs	r3, #0
 3129 0006 C385     		strh	r3, [r0, #46]	@ movhi
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3130              		.loc 1 2174 0
ARM GAS  /tmp/ccO6khRt.s 			page 107


 3131 0008 C384     		strh	r3, [r0, #38]	@ movhi
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3132              		.loc 1 2176 0
 3133 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3134              	.LVL291:
 3135 000e 08BD     		pop	{r3, pc}
 3136              		.cfi_endproc
 3137              	.LFE172:
 3139              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3140              		.align	1
 3141              		.weak	HAL_UART_AbortCpltCallback
 3142              		.syntax unified
 3143              		.thumb
 3144              		.thumb_func
 3145              		.fpu fpv4-sp-d16
 3147              	HAL_UART_AbortCpltCallback:
 3148              	.LFB154:
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3149              		.loc 1 1724 0
 3150              		.cfi_startproc
 3151              		@ args = 0, pretend = 0, frame = 0
 3152              		@ frame_needed = 0, uses_anonymous_args = 0
 3153              		@ link register save eliminated.
 3154              	.LVL292:
 3155 0000 7047     		bx	lr
 3156              		.cfi_endproc
 3157              	.LFE154:
 3159              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3160              		.align	1
 3161              		.global	HAL_UART_Abort_IT
 3162              		.syntax unified
 3163              		.thumb
 3164              		.thumb_func
 3165              		.fpu fpv4-sp-d16
 3167              	HAL_UART_Abort_IT:
 3168              	.LFB145:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3169              		.loc 1 1278 0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
 3173              	.LVL293:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3174              		.loc 1 1278 0
 3175 0000 10B5     		push	{r4, lr}
 3176              	.LCFI36:
 3177              		.cfi_def_cfa_offset 8
 3178              		.cfi_offset 4, -8
 3179              		.cfi_offset 14, -4
 3180 0002 0446     		mov	r4, r0
 3181              	.LVL294:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3182              		.loc 1 1282 0
 3183 0004 0268     		ldr	r2, [r0]
 3184 0006 D368     		ldr	r3, [r2, #12]
 3185 0008 23F4F073 		bic	r3, r3, #480
 3186 000c D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccO6khRt.s 			page 108


1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3187              		.loc 1 1283 0
 3188 000e 0268     		ldr	r2, [r0]
 3189 0010 5369     		ldr	r3, [r2, #20]
 3190 0012 23F00103 		bic	r3, r3, #1
 3191 0016 5361     		str	r3, [r2, #20]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3192              		.loc 1 1288 0
 3193 0018 036B     		ldr	r3, [r0, #48]
 3194 001a 3BB1     		cbz	r3, .L249
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3195              		.loc 1 1292 0
 3196 001c 0268     		ldr	r2, [r0]
 3197 001e 5269     		ldr	r2, [r2, #20]
 3198 0020 12F0800F 		tst	r2, #128
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3199              		.loc 1 1294 0
 3200 0024 14BF     		ite	ne
 3201 0026 254A     		ldrne	r2, .L262
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3202              		.loc 1 1298 0
 3203 0028 0022     		moveq	r2, #0
 3204 002a 1A65     		str	r2, [r3, #80]
 3205              	.L249:
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3206              		.loc 1 1302 0
 3207 002c 636B     		ldr	r3, [r4, #52]
 3208 002e 3BB1     		cbz	r3, .L251
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3209              		.loc 1 1306 0
 3210 0030 2268     		ldr	r2, [r4]
 3211 0032 5269     		ldr	r2, [r2, #20]
 3212 0034 12F0400F 		tst	r2, #64
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3213              		.loc 1 1308 0
 3214 0038 14BF     		ite	ne
 3215 003a 214A     		ldrne	r2, .L262+4
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3216              		.loc 1 1312 0
 3217 003c 0022     		moveq	r2, #0
 3218 003e 1A65     		str	r2, [r3, #80]
 3219              	.L251:
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3220              		.loc 1 1317 0
 3221 0040 2368     		ldr	r3, [r4]
 3222 0042 5A69     		ldr	r2, [r3, #20]
 3223 0044 12F0800F 		tst	r2, #128
 3224 0048 0BD0     		beq	.L253
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3225              		.loc 1 1320 0
 3226 004a 5A69     		ldr	r2, [r3, #20]
 3227 004c 22F08002 		bic	r2, r2, #128
 3228 0050 5A61     		str	r2, [r3, #20]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3229              		.loc 1 1323 0
 3230 0052 206B     		ldr	r0, [r4, #48]
 3231              	.LVL295:
ARM GAS  /tmp/ccO6khRt.s 			page 109


 3232 0054 28B1     		cbz	r0, .L253
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3233              		.loc 1 1329 0
 3234 0056 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3235              	.LVL296:
 3236 005a 08B3     		cbz	r0, .L254
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3237              		.loc 1 1331 0
 3238 005c 236B     		ldr	r3, [r4, #48]
 3239 005e 0022     		movs	r2, #0
 3240 0060 1A65     		str	r2, [r3, #80]
 3241              	.L253:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3242              		.loc 1 1341 0
 3243 0062 2368     		ldr	r3, [r4]
 3244 0064 5A69     		ldr	r2, [r3, #20]
 3245 0066 12F0400F 		tst	r2, #64
 3246 006a 0BD0     		beq	.L257
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3247              		.loc 1 1343 0
 3248 006c 5A69     		ldr	r2, [r3, #20]
 3249 006e 22F04002 		bic	r2, r2, #64
 3250 0072 5A61     		str	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3251              		.loc 1 1346 0
 3252 0074 606B     		ldr	r0, [r4, #52]
 3253 0076 28B1     		cbz	r0, .L257
 3254              	.LVL297:
 3255              	.L259:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3256              		.loc 1 1352 0
 3257 0078 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3258              	.LVL298:
 3259 007c 70B1     		cbz	r0, .L260
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3260              		.loc 1 1354 0
 3261 007e 636B     		ldr	r3, [r4, #52]
 3262 0080 0022     		movs	r2, #0
 3263 0082 1A65     		str	r2, [r3, #80]
 3264              	.LVL299:
 3265              	.L257:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3266              		.loc 1 1368 0
 3267 0084 0023     		movs	r3, #0
 3268 0086 E384     		strh	r3, [r4, #38]	@ movhi
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3269              		.loc 1 1369 0
 3270 0088 E385     		strh	r3, [r4, #46]	@ movhi
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3271              		.loc 1 1372 0
 3272 008a E363     		str	r3, [r4, #60]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3273              		.loc 1 1375 0
 3274 008c 2023     		movs	r3, #32
 3275 008e 84F83930 		strb	r3, [r4, #57]
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3276              		.loc 1 1376 0
ARM GAS  /tmp/ccO6khRt.s 			page 110


 3277 0092 84F83A30 		strb	r3, [r4, #58]
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3278              		.loc 1 1379 0
 3279 0096 2046     		mov	r0, r4
 3280 0098 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3281              	.LVL300:
 3282              	.L260:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3283              		.loc 1 1383 0
 3284 009c 0020     		movs	r0, #0
 3285 009e 10BD     		pop	{r4, pc}
 3286              	.LVL301:
 3287              	.L254:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3288              		.loc 1 1341 0
 3289 00a0 2368     		ldr	r3, [r4]
 3290 00a2 5A69     		ldr	r2, [r3, #20]
 3291 00a4 12F0400F 		tst	r2, #64
 3292 00a8 F8D0     		beq	.L260
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3293              		.loc 1 1343 0
 3294 00aa 5A69     		ldr	r2, [r3, #20]
 3295 00ac 22F04002 		bic	r2, r2, #64
 3296 00b0 5A61     		str	r2, [r3, #20]
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3297              		.loc 1 1346 0
 3298 00b2 606B     		ldr	r0, [r4, #52]
 3299 00b4 0028     		cmp	r0, #0
 3300 00b6 DFD1     		bne	.L259
 3301 00b8 F0E7     		b	.L260
 3302              	.L263:
 3303 00ba 00BF     		.align	2
 3304              	.L262:
 3305 00bc 00000000 		.word	UART_DMATxAbortCallback
 3306 00c0 00000000 		.word	UART_DMARxAbortCallback
 3307              		.cfi_endproc
 3308              	.LFE145:
 3310              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3311              		.align	1
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv4-sp-d16
 3317              	UART_DMARxAbortCallback:
 3318              	.LFB174:
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3319              		.loc 1 2226 0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
 3323              	.LVL302:
 3324 0000 08B5     		push	{r3, lr}
 3325              	.LCFI37:
 3326              		.cfi_def_cfa_offset 8
 3327              		.cfi_offset 3, -8
 3328              		.cfi_offset 14, -4
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/ccO6khRt.s 			page 111


 3329              		.loc 1 2227 0
 3330 0002 806B     		ldr	r0, [r0, #56]
 3331              	.LVL303:
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3332              		.loc 1 2229 0
 3333 0004 436B     		ldr	r3, [r0, #52]
 3334 0006 0022     		movs	r2, #0
 3335 0008 1A65     		str	r2, [r3, #80]
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3336              		.loc 1 2232 0
 3337 000a 036B     		ldr	r3, [r0, #48]
 3338 000c 13B1     		cbz	r3, .L265
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3339              		.loc 1 2234 0
 3340 000e 1B6D     		ldr	r3, [r3, #80]
 3341 0010 03B1     		cbz	r3, .L265
 3342              	.LVL304:
 3343              	.L264:
 3344 0012 08BD     		pop	{r3, pc}
 3345              	.LVL305:
 3346              	.L265:
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3347              		.loc 1 2241 0
 3348 0014 0023     		movs	r3, #0
 3349 0016 C384     		strh	r3, [r0, #38]	@ movhi
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3350              		.loc 1 2242 0
 3351 0018 C385     		strh	r3, [r0, #46]	@ movhi
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3352              		.loc 1 2245 0
 3353 001a C363     		str	r3, [r0, #60]
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3354              		.loc 1 2248 0
 3355 001c 2023     		movs	r3, #32
 3356 001e 80F83930 		strb	r3, [r0, #57]
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3357              		.loc 1 2249 0
 3358 0022 80F83A30 		strb	r3, [r0, #58]
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3359              		.loc 1 2252 0
 3360 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3361              	.LVL306:
 3362 002a F2E7     		b	.L264
 3363              		.cfi_endproc
 3364              	.LFE174:
 3366              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3367              		.align	1
 3368              		.syntax unified
 3369              		.thumb
 3370              		.thumb_func
 3371              		.fpu fpv4-sp-d16
 3373              	UART_DMATxAbortCallback:
 3374              	.LFB173:
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3375              		.loc 1 2188 0
 3376              		.cfi_startproc
 3377              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccO6khRt.s 			page 112


 3378              		@ frame_needed = 0, uses_anonymous_args = 0
 3379              	.LVL307:
 3380 0000 08B5     		push	{r3, lr}
 3381              	.LCFI38:
 3382              		.cfi_def_cfa_offset 8
 3383              		.cfi_offset 3, -8
 3384              		.cfi_offset 14, -4
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3385              		.loc 1 2189 0
 3386 0002 806B     		ldr	r0, [r0, #56]
 3387              	.LVL308:
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3388              		.loc 1 2191 0
 3389 0004 036B     		ldr	r3, [r0, #48]
 3390 0006 0022     		movs	r2, #0
 3391 0008 1A65     		str	r2, [r3, #80]
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3392              		.loc 1 2194 0
 3393 000a 436B     		ldr	r3, [r0, #52]
 3394 000c 13B1     		cbz	r3, .L269
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3395              		.loc 1 2196 0
 3396 000e 1B6D     		ldr	r3, [r3, #80]
 3397 0010 03B1     		cbz	r3, .L269
 3398              	.LVL309:
 3399              	.L268:
 3400 0012 08BD     		pop	{r3, pc}
 3401              	.LVL310:
 3402              	.L269:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3403              		.loc 1 2203 0
 3404 0014 0023     		movs	r3, #0
 3405 0016 C384     		strh	r3, [r0, #38]	@ movhi
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3406              		.loc 1 2204 0
 3407 0018 C385     		strh	r3, [r0, #46]	@ movhi
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3408              		.loc 1 2207 0
 3409 001a C363     		str	r3, [r0, #60]
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3410              		.loc 1 2210 0
 3411 001c 2023     		movs	r3, #32
 3412 001e 80F83930 		strb	r3, [r0, #57]
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3413              		.loc 1 2211 0
 3414 0022 80F83A30 		strb	r3, [r0, #58]
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3415              		.loc 1 2214 0
 3416 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3417              	.LVL311:
 3418 002a F2E7     		b	.L268
 3419              		.cfi_endproc
 3420              	.LFE173:
 3422              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3423              		.align	1
 3424              		.weak	HAL_UART_AbortTransmitCpltCallback
 3425              		.syntax unified
ARM GAS  /tmp/ccO6khRt.s 			page 113


 3426              		.thumb
 3427              		.thumb_func
 3428              		.fpu fpv4-sp-d16
 3430              	HAL_UART_AbortTransmitCpltCallback:
 3431              	.LFB155:
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3432              		.loc 1 1738 0
 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 0
 3435              		@ frame_needed = 0, uses_anonymous_args = 0
 3436              		@ link register save eliminated.
 3437              	.LVL312:
 3438 0000 7047     		bx	lr
 3439              		.cfi_endproc
 3440              	.LFE155:
 3442              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3443              		.align	1
 3444              		.global	HAL_UART_AbortTransmit_IT
 3445              		.syntax unified
 3446              		.thumb
 3447              		.thumb_func
 3448              		.fpu fpv4-sp-d16
 3450              	HAL_UART_AbortTransmit_IT:
 3451              	.LFB146:
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3452              		.loc 1 1400 0
 3453              		.cfi_startproc
 3454              		@ args = 0, pretend = 0, frame = 0
 3455              		@ frame_needed = 0, uses_anonymous_args = 0
 3456              	.LVL313:
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3457              		.loc 1 1400 0
 3458 0000 10B5     		push	{r4, lr}
 3459              	.LCFI39:
 3460              		.cfi_def_cfa_offset 8
 3461              		.cfi_offset 4, -8
 3462              		.cfi_offset 14, -4
 3463 0002 0446     		mov	r4, r0
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3464              		.loc 1 1402 0
 3465 0004 0268     		ldr	r2, [r0]
 3466 0006 D368     		ldr	r3, [r2, #12]
 3467 0008 23F0C003 		bic	r3, r3, #192
 3468 000c D360     		str	r3, [r2, #12]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3469              		.loc 1 1405 0
 3470 000e 0368     		ldr	r3, [r0]
 3471 0010 5A69     		ldr	r2, [r3, #20]
 3472 0012 12F0800F 		tst	r2, #128
 3473 0016 19D0     		beq	.L274
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3474              		.loc 1 1407 0
 3475 0018 5A69     		ldr	r2, [r3, #20]
 3476 001a 22F08002 		bic	r2, r2, #128
 3477 001e 5A61     		str	r2, [r3, #20]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3478              		.loc 1 1410 0
ARM GAS  /tmp/ccO6khRt.s 			page 114


 3479 0020 036B     		ldr	r3, [r0, #48]
 3480 0022 5BB1     		cbz	r3, .L275
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3481              		.loc 1 1414 0
 3482 0024 0D4A     		ldr	r2, .L279
 3483 0026 1A65     		str	r2, [r3, #80]
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3484              		.loc 1 1417 0
 3485 0028 006B     		ldr	r0, [r0, #48]
 3486              	.LVL314:
 3487 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3488              	.LVL315:
 3489 002e 08B9     		cbnz	r0, .L278
 3490              	.L276:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3491              		.loc 1 1448 0
 3492 0030 0020     		movs	r0, #0
 3493 0032 10BD     		pop	{r4, pc}
 3494              	.LVL316:
 3495              	.L278:
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3496              		.loc 1 1420 0
 3497 0034 206B     		ldr	r0, [r4, #48]
 3498 0036 036D     		ldr	r3, [r0, #80]
 3499 0038 9847     		blx	r3
 3500              	.LVL317:
 3501 003a F9E7     		b	.L276
 3502              	.LVL318:
 3503              	.L275:
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3504              		.loc 1 1426 0
 3505 003c 0023     		movs	r3, #0
 3506 003e C384     		strh	r3, [r0, #38]	@ movhi
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3507              		.loc 1 1429 0
 3508 0040 2023     		movs	r3, #32
 3509 0042 80F83930 		strb	r3, [r0, #57]
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3510              		.loc 1 1432 0
 3511 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3512              	.LVL319:
 3513 004a F1E7     		b	.L276
 3514              	.LVL320:
 3515              	.L274:
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3516              		.loc 1 1438 0
 3517 004c 0023     		movs	r3, #0
 3518 004e C384     		strh	r3, [r0, #38]	@ movhi
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3519              		.loc 1 1441 0
 3520 0050 2023     		movs	r3, #32
 3521 0052 80F83930 		strb	r3, [r0, #57]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3522              		.loc 1 1444 0
 3523 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3524              	.LVL321:
 3525 005a E9E7     		b	.L276
ARM GAS  /tmp/ccO6khRt.s 			page 115


 3526              	.L280:
 3527              		.align	2
 3528              	.L279:
 3529 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3530              		.cfi_endproc
 3531              	.LFE146:
 3533              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3534              		.align	1
 3535              		.syntax unified
 3536              		.thumb
 3537              		.thumb_func
 3538              		.fpu fpv4-sp-d16
 3540              	UART_DMATxOnlyAbortCallback:
 3541              	.LFB175:
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3542              		.loc 1 2264 0
 3543              		.cfi_startproc
 3544              		@ args = 0, pretend = 0, frame = 0
 3545              		@ frame_needed = 0, uses_anonymous_args = 0
 3546              	.LVL322:
 3547 0000 08B5     		push	{r3, lr}
 3548              	.LCFI40:
 3549              		.cfi_def_cfa_offset 8
 3550              		.cfi_offset 3, -8
 3551              		.cfi_offset 14, -4
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3552              		.loc 1 2265 0
 3553 0002 806B     		ldr	r0, [r0, #56]
 3554              	.LVL323:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3555              		.loc 1 2267 0
 3556 0004 0023     		movs	r3, #0
 3557 0006 C384     		strh	r3, [r0, #38]	@ movhi
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3558              		.loc 1 2270 0
 3559 0008 2023     		movs	r3, #32
 3560 000a 80F83930 		strb	r3, [r0, #57]
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3561              		.loc 1 2273 0
 3562 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3563              	.LVL324:
 3564 0012 08BD     		pop	{r3, pc}
 3565              		.cfi_endproc
 3566              	.LFE175:
 3568              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3569              		.align	1
 3570              		.weak	HAL_UART_AbortReceiveCpltCallback
 3571              		.syntax unified
 3572              		.thumb
 3573              		.thumb_func
 3574              		.fpu fpv4-sp-d16
 3576              	HAL_UART_AbortReceiveCpltCallback:
 3577              	.LFB156:
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3578              		.loc 1 1753 0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccO6khRt.s 			page 116


 3581              		@ frame_needed = 0, uses_anonymous_args = 0
 3582              		@ link register save eliminated.
 3583              	.LVL325:
 3584 0000 7047     		bx	lr
 3585              		.cfi_endproc
 3586              	.LFE156:
 3588              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3589              		.align	1
 3590              		.global	HAL_UART_AbortReceive_IT
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv4-sp-d16
 3596              	HAL_UART_AbortReceive_IT:
 3597              	.LFB147:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3598              		.loc 1 1465 0
 3599              		.cfi_startproc
 3600              		@ args = 0, pretend = 0, frame = 0
 3601              		@ frame_needed = 0, uses_anonymous_args = 0
 3602              	.LVL326:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3603              		.loc 1 1465 0
 3604 0000 10B5     		push	{r4, lr}
 3605              	.LCFI41:
 3606              		.cfi_def_cfa_offset 8
 3607              		.cfi_offset 4, -8
 3608              		.cfi_offset 14, -4
 3609 0002 0446     		mov	r4, r0
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3610              		.loc 1 1467 0
 3611 0004 0268     		ldr	r2, [r0]
 3612 0006 D368     		ldr	r3, [r2, #12]
 3613 0008 23F49073 		bic	r3, r3, #288
 3614 000c D360     		str	r3, [r2, #12]
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3615              		.loc 1 1468 0
 3616 000e 0268     		ldr	r2, [r0]
 3617 0010 5369     		ldr	r3, [r2, #20]
 3618 0012 23F00103 		bic	r3, r3, #1
 3619 0016 5361     		str	r3, [r2, #20]
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3620              		.loc 1 1471 0
 3621 0018 0368     		ldr	r3, [r0]
 3622 001a 5A69     		ldr	r2, [r3, #20]
 3623 001c 12F0400F 		tst	r2, #64
 3624 0020 19D0     		beq	.L285
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3625              		.loc 1 1473 0
 3626 0022 5A69     		ldr	r2, [r3, #20]
 3627 0024 22F04002 		bic	r2, r2, #64
 3628 0028 5A61     		str	r2, [r3, #20]
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3629              		.loc 1 1476 0
 3630 002a 436B     		ldr	r3, [r0, #52]
 3631 002c 5BB1     		cbz	r3, .L286
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 117


 3632              		.loc 1 1480 0
 3633 002e 0E4A     		ldr	r2, .L290
 3634 0030 1A65     		str	r2, [r3, #80]
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3635              		.loc 1 1483 0
 3636 0032 406B     		ldr	r0, [r0, #52]
 3637              	.LVL327:
 3638 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3639              	.LVL328:
 3640 0038 08B9     		cbnz	r0, .L289
 3641              	.L287:
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3642              		.loc 1 1514 0
 3643 003a 0020     		movs	r0, #0
 3644 003c 10BD     		pop	{r4, pc}
 3645              	.LVL329:
 3646              	.L289:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3647              		.loc 1 1486 0
 3648 003e 606B     		ldr	r0, [r4, #52]
 3649 0040 036D     		ldr	r3, [r0, #80]
 3650 0042 9847     		blx	r3
 3651              	.LVL330:
 3652 0044 F9E7     		b	.L287
 3653              	.LVL331:
 3654              	.L286:
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3655              		.loc 1 1492 0
 3656 0046 0023     		movs	r3, #0
 3657 0048 C385     		strh	r3, [r0, #46]	@ movhi
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3658              		.loc 1 1495 0
 3659 004a 2023     		movs	r3, #32
 3660 004c 80F83A30 		strb	r3, [r0, #58]
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3661              		.loc 1 1498 0
 3662 0050 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3663              	.LVL332:
 3664 0054 F1E7     		b	.L287
 3665              	.LVL333:
 3666              	.L285:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3667              		.loc 1 1504 0
 3668 0056 0023     		movs	r3, #0
 3669 0058 C385     		strh	r3, [r0, #46]	@ movhi
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3670              		.loc 1 1507 0
 3671 005a 2023     		movs	r3, #32
 3672 005c 80F83A30 		strb	r3, [r0, #58]
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3673              		.loc 1 1510 0
 3674 0060 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3675              	.LVL334:
 3676 0064 E9E7     		b	.L287
 3677              	.L291:
 3678 0066 00BF     		.align	2
 3679              	.L290:
ARM GAS  /tmp/ccO6khRt.s 			page 118


 3680 0068 00000000 		.word	UART_DMARxOnlyAbortCallback
 3681              		.cfi_endproc
 3682              	.LFE147:
 3684              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3685              		.align	1
 3686              		.syntax unified
 3687              		.thumb
 3688              		.thumb_func
 3689              		.fpu fpv4-sp-d16
 3691              	UART_DMARxOnlyAbortCallback:
 3692              	.LFB176:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3693              		.loc 1 2285 0
 3694              		.cfi_startproc
 3695              		@ args = 0, pretend = 0, frame = 0
 3696              		@ frame_needed = 0, uses_anonymous_args = 0
 3697              	.LVL335:
 3698 0000 08B5     		push	{r3, lr}
 3699              	.LCFI42:
 3700              		.cfi_def_cfa_offset 8
 3701              		.cfi_offset 3, -8
 3702              		.cfi_offset 14, -4
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3703              		.loc 1 2286 0
 3704 0002 806B     		ldr	r0, [r0, #56]
 3705              	.LVL336:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3706              		.loc 1 2288 0
 3707 0004 0023     		movs	r3, #0
 3708 0006 C385     		strh	r3, [r0, #46]	@ movhi
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3709              		.loc 1 2291 0
 3710 0008 2023     		movs	r3, #32
 3711 000a 80F83A30 		strb	r3, [r0, #58]
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3712              		.loc 1 2294 0
 3713 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3714              	.LVL337:
 3715 0012 08BD     		pop	{r3, pc}
 3716              		.cfi_endproc
 3717              	.LFE176:
 3719              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3720              		.align	1
 3721              		.global	HAL_LIN_SendBreak
 3722              		.syntax unified
 3723              		.thumb
 3724              		.thumb_func
 3725              		.fpu fpv4-sp-d16
 3727              	HAL_LIN_SendBreak:
 3728              	.LFB157:
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3729              		.loc 1 1790 0
 3730              		.cfi_startproc
 3731              		@ args = 0, pretend = 0, frame = 0
 3732              		@ frame_needed = 0, uses_anonymous_args = 0
 3733              		@ link register save eliminated.
 3734              	.LVL338:
ARM GAS  /tmp/ccO6khRt.s 			page 119


1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3735              		.loc 1 1795 0
 3736 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3737 0004 012B     		cmp	r3, #1
 3738 0006 12D0     		beq	.L296
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3739              		.loc 1 1795 0 is_stmt 0 discriminator 2
 3740 0008 0123     		movs	r3, #1
 3741 000a 80F83830 		strb	r3, [r0, #56]
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3742              		.loc 1 1797 0 is_stmt 1 discriminator 2
 3743 000e 2423     		movs	r3, #36
 3744 0010 80F83930 		strb	r3, [r0, #57]
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 3745              		.loc 1 1800 0 discriminator 2
 3746 0014 0268     		ldr	r2, [r0]
 3747 0016 D368     		ldr	r3, [r2, #12]
 3748 0018 43F00103 		orr	r3, r3, #1
 3749 001c D360     		str	r3, [r2, #12]
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3750              		.loc 1 1802 0 discriminator 2
 3751 001e 2023     		movs	r3, #32
 3752 0020 80F83930 		strb	r3, [r0, #57]
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3753              		.loc 1 1805 0 discriminator 2
 3754 0024 0023     		movs	r3, #0
 3755 0026 80F83830 		strb	r3, [r0, #56]
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3756              		.loc 1 1807 0 discriminator 2
 3757 002a 1846     		mov	r0, r3
 3758              	.LVL339:
 3759 002c 7047     		bx	lr
 3760              	.LVL340:
 3761              	.L296:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3762              		.loc 1 1795 0
 3763 002e 0220     		movs	r0, #2
 3764              	.LVL341:
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3765              		.loc 1 1808 0
 3766 0030 7047     		bx	lr
 3767              		.cfi_endproc
 3768              	.LFE157:
 3770              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3771              		.align	1
 3772              		.global	HAL_MultiProcessor_EnterMuteMode
 3773              		.syntax unified
 3774              		.thumb
 3775              		.thumb_func
 3776              		.fpu fpv4-sp-d16
 3778              	HAL_MultiProcessor_EnterMuteMode:
 3779              	.LFB158:
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3780              		.loc 1 1817 0
 3781              		.cfi_startproc
 3782              		@ args = 0, pretend = 0, frame = 0
 3783              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO6khRt.s 			page 120


 3784              		@ link register save eliminated.
 3785              	.LVL342:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3786              		.loc 1 1822 0
 3787 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3788 0004 012B     		cmp	r3, #1
 3789 0006 12D0     		beq	.L299
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3790              		.loc 1 1822 0 is_stmt 0 discriminator 2
 3791 0008 0123     		movs	r3, #1
 3792 000a 80F83830 		strb	r3, [r0, #56]
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3793              		.loc 1 1824 0 is_stmt 1 discriminator 2
 3794 000e 2423     		movs	r3, #36
 3795 0010 80F83930 		strb	r3, [r0, #57]
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3796              		.loc 1 1827 0 discriminator 2
 3797 0014 0268     		ldr	r2, [r0]
 3798 0016 D368     		ldr	r3, [r2, #12]
 3799 0018 43F00203 		orr	r3, r3, #2
 3800 001c D360     		str	r3, [r2, #12]
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3801              		.loc 1 1829 0 discriminator 2
 3802 001e 2023     		movs	r3, #32
 3803 0020 80F83930 		strb	r3, [r0, #57]
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3804              		.loc 1 1832 0 discriminator 2
 3805 0024 0023     		movs	r3, #0
 3806 0026 80F83830 		strb	r3, [r0, #56]
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3807              		.loc 1 1834 0 discriminator 2
 3808 002a 1846     		mov	r0, r3
 3809              	.LVL343:
 3810 002c 7047     		bx	lr
 3811              	.LVL344:
 3812              	.L299:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3813              		.loc 1 1822 0
 3814 002e 0220     		movs	r0, #2
 3815              	.LVL345:
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3816              		.loc 1 1835 0
 3817 0030 7047     		bx	lr
 3818              		.cfi_endproc
 3819              	.LFE158:
 3821              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3822              		.align	1
 3823              		.global	HAL_MultiProcessor_ExitMuteMode
 3824              		.syntax unified
 3825              		.thumb
 3826              		.thumb_func
 3827              		.fpu fpv4-sp-d16
 3829              	HAL_MultiProcessor_ExitMuteMode:
 3830              	.LFB159:
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 3831              		.loc 1 1844 0
 3832              		.cfi_startproc
ARM GAS  /tmp/ccO6khRt.s 			page 121


 3833              		@ args = 0, pretend = 0, frame = 0
 3834              		@ frame_needed = 0, uses_anonymous_args = 0
 3835              		@ link register save eliminated.
 3836              	.LVL346:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3837              		.loc 1 1849 0
 3838 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3839 0004 012B     		cmp	r3, #1
 3840 0006 12D0     		beq	.L302
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3841              		.loc 1 1849 0 is_stmt 0 discriminator 2
 3842 0008 0123     		movs	r3, #1
 3843 000a 80F83830 		strb	r3, [r0, #56]
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3844              		.loc 1 1851 0 is_stmt 1 discriminator 2
 3845 000e 2423     		movs	r3, #36
 3846 0010 80F83930 		strb	r3, [r0, #57]
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3847              		.loc 1 1854 0 discriminator 2
 3848 0014 0268     		ldr	r2, [r0]
 3849 0016 D368     		ldr	r3, [r2, #12]
 3850 0018 23F00203 		bic	r3, r3, #2
 3851 001c D360     		str	r3, [r2, #12]
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3852              		.loc 1 1856 0 discriminator 2
 3853 001e 2023     		movs	r3, #32
 3854 0020 80F83930 		strb	r3, [r0, #57]
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3855              		.loc 1 1859 0 discriminator 2
 3856 0024 0023     		movs	r3, #0
 3857 0026 80F83830 		strb	r3, [r0, #56]
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3858              		.loc 1 1861 0 discriminator 2
 3859 002a 1846     		mov	r0, r3
 3860              	.LVL347:
 3861 002c 7047     		bx	lr
 3862              	.LVL348:
 3863              	.L302:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3864              		.loc 1 1849 0
 3865 002e 0220     		movs	r0, #2
 3866              	.LVL349:
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3867              		.loc 1 1862 0
 3868 0030 7047     		bx	lr
 3869              		.cfi_endproc
 3870              	.LFE159:
 3872              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3873              		.align	1
 3874              		.global	HAL_HalfDuplex_EnableTransmitter
 3875              		.syntax unified
 3876              		.thumb
 3877              		.thumb_func
 3878              		.fpu fpv4-sp-d16
 3880              	HAL_HalfDuplex_EnableTransmitter:
 3881              	.LFB160:
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
ARM GAS  /tmp/ccO6khRt.s 			page 122


 3882              		.loc 1 1871 0
 3883              		.cfi_startproc
 3884              		@ args = 0, pretend = 0, frame = 0
 3885              		@ frame_needed = 0, uses_anonymous_args = 0
 3886              		@ link register save eliminated.
 3887              	.LVL350:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3888              		.loc 1 1875 0
 3889 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3890 0004 012B     		cmp	r3, #1
 3891 0006 14D0     		beq	.L305
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3892              		.loc 1 1875 0 is_stmt 0 discriminator 2
 3893 0008 0123     		movs	r3, #1
 3894 000a 80F83830 		strb	r3, [r0, #56]
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3895              		.loc 1 1877 0 is_stmt 1 discriminator 2
 3896 000e 2423     		movs	r3, #36
 3897 0010 80F83930 		strb	r3, [r0, #57]
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3898              		.loc 1 1880 0 discriminator 2
 3899 0014 0268     		ldr	r2, [r0]
 3900 0016 D368     		ldr	r3, [r2, #12]
 3901              	.LVL351:
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3902              		.loc 1 1883 0 discriminator 2
 3903 0018 23F00C03 		bic	r3, r3, #12
 3904              	.LVL352:
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3905              		.loc 1 1886 0 discriminator 2
 3906 001c 43F00803 		orr	r3, r3, #8
 3907              	.LVL353:
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 3908              		.loc 1 1889 0 discriminator 2
 3909 0020 D360     		str	r3, [r2, #12]
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3910              		.loc 1 1891 0 discriminator 2
 3911 0022 2023     		movs	r3, #32
 3912              	.LVL354:
 3913 0024 80F83930 		strb	r3, [r0, #57]
 3914              	.LVL355:
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3915              		.loc 1 1894 0 discriminator 2
 3916 0028 0023     		movs	r3, #0
 3917 002a 80F83830 		strb	r3, [r0, #56]
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3918              		.loc 1 1896 0 discriminator 2
 3919 002e 1846     		mov	r0, r3
 3920              	.LVL356:
 3921 0030 7047     		bx	lr
 3922              	.LVL357:
 3923              	.L305:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3924              		.loc 1 1875 0
 3925 0032 0220     		movs	r0, #2
 3926              	.LVL358:
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/ccO6khRt.s 			page 123


 3927              		.loc 1 1897 0
 3928 0034 7047     		bx	lr
 3929              		.cfi_endproc
 3930              	.LFE160:
 3932              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3933              		.align	1
 3934              		.global	HAL_HalfDuplex_EnableReceiver
 3935              		.syntax unified
 3936              		.thumb
 3937              		.thumb_func
 3938              		.fpu fpv4-sp-d16
 3940              	HAL_HalfDuplex_EnableReceiver:
 3941              	.LFB161:
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3942              		.loc 1 1906 0
 3943              		.cfi_startproc
 3944              		@ args = 0, pretend = 0, frame = 0
 3945              		@ frame_needed = 0, uses_anonymous_args = 0
 3946              		@ link register save eliminated.
 3947              	.LVL359:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3948              		.loc 1 1910 0
 3949 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 3950 0004 012B     		cmp	r3, #1
 3951 0006 14D0     		beq	.L308
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3952              		.loc 1 1910 0 is_stmt 0 discriminator 2
 3953 0008 0123     		movs	r3, #1
 3954 000a 80F83830 		strb	r3, [r0, #56]
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3955              		.loc 1 1912 0 is_stmt 1 discriminator 2
 3956 000e 2423     		movs	r3, #36
 3957 0010 80F83930 		strb	r3, [r0, #57]
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3958              		.loc 1 1915 0 discriminator 2
 3959 0014 0268     		ldr	r2, [r0]
 3960 0016 D368     		ldr	r3, [r2, #12]
 3961              	.LVL360:
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3962              		.loc 1 1918 0 discriminator 2
 3963 0018 23F00C03 		bic	r3, r3, #12
 3964              	.LVL361:
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3965              		.loc 1 1921 0 discriminator 2
 3966 001c 43F00403 		orr	r3, r3, #4
 3967              	.LVL362:
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3968              		.loc 1 1924 0 discriminator 2
 3969 0020 D360     		str	r3, [r2, #12]
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3970              		.loc 1 1926 0 discriminator 2
 3971 0022 2023     		movs	r3, #32
 3972              	.LVL363:
 3973 0024 80F83930 		strb	r3, [r0, #57]
 3974              	.LVL364:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3975              		.loc 1 1929 0 discriminator 2
ARM GAS  /tmp/ccO6khRt.s 			page 124


 3976 0028 0023     		movs	r3, #0
 3977 002a 80F83830 		strb	r3, [r0, #56]
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3978              		.loc 1 1931 0 discriminator 2
 3979 002e 1846     		mov	r0, r3
 3980              	.LVL365:
 3981 0030 7047     		bx	lr
 3982              	.LVL366:
 3983              	.L308:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3984              		.loc 1 1910 0
 3985 0032 0220     		movs	r0, #2
 3986              	.LVL367:
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3987              		.loc 1 1932 0
 3988 0034 7047     		bx	lr
 3989              		.cfi_endproc
 3990              	.LFE161:
 3992              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3993              		.align	1
 3994              		.global	HAL_UART_GetState
 3995              		.syntax unified
 3996              		.thumb
 3997              		.thumb_func
 3998              		.fpu fpv4-sp-d16
 4000              	HAL_UART_GetState:
 4001              	.LFB162:
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4002              		.loc 1 1963 0
 4003              		.cfi_startproc
 4004              		@ args = 0, pretend = 0, frame = 0
 4005              		@ frame_needed = 0, uses_anonymous_args = 0
 4006              		@ link register save eliminated.
 4007              	.LVL368:
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4008              		.loc 1 1965 0
 4009 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4010              	.LVL369:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4011              		.loc 1 1966 0
 4012 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4013              	.LVL370:
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4014              		.loc 1 1969 0
 4015 0008 1843     		orrs	r0, r0, r3
 4016              	.LVL371:
 4017 000a 7047     		bx	lr
 4018              		.cfi_endproc
 4019              	.LFE162:
 4021              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4022              		.align	1
 4023              		.global	HAL_UART_GetError
 4024              		.syntax unified
 4025              		.thumb
 4026              		.thumb_func
 4027              		.fpu fpv4-sp-d16
 4029              	HAL_UART_GetError:
ARM GAS  /tmp/ccO6khRt.s 			page 125


 4030              	.LFB163:
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4031              		.loc 1 1978 0
 4032              		.cfi_startproc
 4033              		@ args = 0, pretend = 0, frame = 0
 4034              		@ frame_needed = 0, uses_anonymous_args = 0
 4035              		@ link register save eliminated.
 4036              	.LVL372:
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4037              		.loc 1 1979 0
 4038 0000 C06B     		ldr	r0, [r0, #60]
 4039              	.LVL373:
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4040              		.loc 1 1980 0
 4041 0002 7047     		bx	lr
 4042              		.cfi_endproc
 4043              	.LFE163:
 4045              		.text
 4046              	.Letext0:
 4047              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4048              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4049              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4050              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 4051              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 4052              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4053              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 4054              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 4055              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 4056              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 4057              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4058              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4059              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4060              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4061              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccO6khRt.s 			page 126


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/ccO6khRt.s:18     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccO6khRt.s:24     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccO6khRt.s:51     .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccO6khRt.s:57     .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccO6khRt.s:399    .text.UART_SetConfig:0000000000000324 $d
     /tmp/ccO6khRt.s:405    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccO6khRt.s:411    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccO6khRt.s:487    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccO6khRt.s:494    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccO6khRt.s:507    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccO6khRt.s:514    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccO6khRt.s:594    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccO6khRt.s:601    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccO6khRt.s:687    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccO6khRt.s:694    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccO6khRt.s:797    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccO6khRt.s:804    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccO6khRt.s:912    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccO6khRt.s:919    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccO6khRt.s:932    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccO6khRt.s:939    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccO6khRt.s:986    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccO6khRt.s:993    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccO6khRt.s:1182   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccO6khRt.s:1189   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccO6khRt.s:1382   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:1389   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccO6khRt.s:1464   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:1471   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccO6khRt.s:1551   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccO6khRt.s:1558   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccO6khRt.s:1668   .text.HAL_UART_Transmit_DMA:0000000000000080 $d
     /tmp/ccO6khRt.s:2333   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccO6khRt.s:2407   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccO6khRt.s:2705   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccO6khRt.s:1675   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccO6khRt.s:1682   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccO6khRt.s:1798   .text.HAL_UART_Receive_DMA:000000000000008c $d
     /tmp/ccO6khRt.s:2457   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccO6khRt.s:2655   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccO6khRt.s:1805   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccO6khRt.s:1812   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccO6khRt.s:1895   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccO6khRt.s:1902   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccO6khRt.s:1996   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccO6khRt.s:2003   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccO6khRt.s:2097   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccO6khRt.s:2104   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccO6khRt.s:2186   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccO6khRt.s:2193   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccO6khRt.s:2244   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccO6khRt.s:2251   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccO6khRt.s:2307   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:2314   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccO6khRt.s:2327   .text.UART_DMATransmitCplt:0000000000000000 $t
ARM GAS  /tmp/ccO6khRt.s 			page 127


     /tmp/ccO6khRt.s:2381   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:2388   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccO6khRt.s:2401   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccO6khRt.s:2431   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:2438   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccO6khRt.s:2451   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccO6khRt.s:2510   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:2516   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccO6khRt.s:2629   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:2636   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccO6khRt.s:2649   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccO6khRt.s:2679   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:2686   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccO6khRt.s:2699   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccO6khRt.s:2791   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccO6khRt.s:2798   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccO6khRt.s:3101   .text.HAL_UART_IRQHandler:00000000000001a4 $d
     /tmp/ccO6khRt.s:3112   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccO6khRt.s:3106   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccO6khRt.s:3140   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3147   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccO6khRt.s:3160   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:3167   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccO6khRt.s:3305   .text.HAL_UART_Abort_IT:00000000000000bc $d
     /tmp/ccO6khRt.s:3373   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccO6khRt.s:3317   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccO6khRt.s:3311   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3367   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3423   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3430   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccO6khRt.s:3443   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:3450   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccO6khRt.s:3529   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
     /tmp/ccO6khRt.s:3540   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccO6khRt.s:3534   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3569   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3576   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccO6khRt.s:3589   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccO6khRt.s:3596   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccO6khRt.s:3680   .text.HAL_UART_AbortReceive_IT:0000000000000068 $d
     /tmp/ccO6khRt.s:3691   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccO6khRt.s:3685   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccO6khRt.s:3720   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccO6khRt.s:3727   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccO6khRt.s:3771   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccO6khRt.s:3778   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccO6khRt.s:3822   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/ccO6khRt.s:3829   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/ccO6khRt.s:3873   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccO6khRt.s:3880   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccO6khRt.s:3933   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccO6khRt.s:3940   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccO6khRt.s:3993   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccO6khRt.s:4000   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccO6khRt.s:4022   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccO6khRt.s:4029   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
                     .debug_frame:0000000000000010 $d
ARM GAS  /tmp/ccO6khRt.s 			page 128



UNDEFINED SYMBOLS
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
