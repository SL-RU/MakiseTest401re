ARM GAS  /tmp/cclDjGcX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f4xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	NMI_Handler
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	NMI_Handler:
  25              	.LFB141:
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE141:
  34 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  35              		.align	1
  36              		.p2align 2,,3
  37              		.global	HardFault_Handler
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu fpv4-sp-d16
  43              	HardFault_Handler:
  44              	.LFB127:
  45              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
ARM GAS  /tmp/cclDjGcX.s 			page 2


  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /******************************************************************************/
  46:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /**
  50:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f4xx_it.c **** */
  52:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f4xx_it.c **** {
  54:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** }
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /**
  63:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f4xx_it.c **** */
  65:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f4xx_it.c **** {
  46              		.loc 1 66 0
  47              		.cfi_startproc
  48              		@ Volatile: function does not return.
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
ARM GAS  /tmp/cclDjGcX.s 			page 3


  52              	.L3:
  53 0000 FEE7     		b	.L3
  54              		.cfi_endproc
  55              	.LFE127:
  57 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  58              		.align	1
  59              		.p2align 2,,3
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB128:
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c ****   while (1)
  71:Src/stm32f4xx_it.c ****   {
  72:Src/stm32f4xx_it.c ****   }
  73:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Src/stm32f4xx_it.c **** }
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c **** /**
  79:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  80:Src/stm32f4xx_it.c **** */
  81:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  82:Src/stm32f4xx_it.c **** {
  68              		.loc 1 82 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE128:
  79 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.p2align 2,,3
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv4-sp-d16
  88              	BusFault_Handler:
  89              	.LFB129:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  86:Src/stm32f4xx_it.c ****   while (1)
  87:Src/stm32f4xx_it.c ****   {
  88:Src/stm32f4xx_it.c ****   }
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
ARM GAS  /tmp/cclDjGcX.s 			page 4


  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  92:Src/stm32f4xx_it.c **** }
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c **** /**
  95:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  96:Src/stm32f4xx_it.c **** */
  97:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  98:Src/stm32f4xx_it.c **** {
  90              		.loc 1 98 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE129:
 101 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.p2align 2,,3
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB130:
  99:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 102:Src/stm32f4xx_it.c ****   while (1)
 103:Src/stm32f4xx_it.c ****   {
 104:Src/stm32f4xx_it.c ****   }
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 108:Src/stm32f4xx_it.c **** }
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c **** /**
 111:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 112:Src/stm32f4xx_it.c **** */
 113:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 114:Src/stm32f4xx_it.c **** {
 112              		.loc 1 114 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L9:
 119 0000 FEE7     		b	.L9
 120              		.cfi_endproc
 121              	.LFE130:
 123 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 124              		.align	1
ARM GAS  /tmp/cclDjGcX.s 			page 5


 125              		.p2align 2,,3
 126              		.global	SVC_Handler
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	SVC_Handler:
 133              	.LFB139:
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE139:
 142 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.p2align 2,,3
 145              		.global	DebugMon_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	DebugMon_Handler:
 152              	.LFB137:
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE137:
 161 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 162              		.align	1
 163              		.p2align 2,,3
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	PendSV_Handler:
 171              	.LFB133:
 115:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 118:Src/stm32f4xx_it.c ****   while (1)
 119:Src/stm32f4xx_it.c ****   {
 120:Src/stm32f4xx_it.c ****   }
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
 127:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 128:Src/stm32f4xx_it.c **** */
 129:Src/stm32f4xx_it.c **** void SVC_Handler(void)
ARM GAS  /tmp/cclDjGcX.s 			page 6


 130:Src/stm32f4xx_it.c **** {
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 150:Src/stm32f4xx_it.c **** }
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 154:Src/stm32f4xx_it.c **** */
 155:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 172              		.loc 1 156 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE133:
 181 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 182              		.align	1
 183              		.p2align 2,,3
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	SysTick_Handler:
 191              	.LFB134:
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 167:Src/stm32f4xx_it.c **** */
 168:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
ARM GAS  /tmp/cclDjGcX.s 			page 7


 169:Src/stm32f4xx_it.c **** {
 192              		.loc 1 169 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		.loc 1 169 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI0:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   HAL_IncTick();
 202              		.loc 1 173 0
 203 0002 FFF7FEFF 		bl	HAL_IncTick
 204              	.LVL0:
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 205              		.loc 1 178 0
 206 0006 BDE80840 		pop	{r3, lr}
 207              	.LCFI1:
 208              		.cfi_restore 14
 209              		.cfi_restore 3
 210              		.cfi_def_cfa_offset 0
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 211              		.loc 1 174 0
 212 000a FFF7FEBF 		b	HAL_SYSTICK_IRQHandler
 213              	.LVL1:
 214              		.cfi_endproc
 215              	.LFE134:
 217 000e 00BF     		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.p2align 2,,3
 220              		.global	DMA2_Stream3_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
 226              	DMA2_Stream3_IRQHandler:
 227              	.LFB135:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /******************************************************************************/
 181:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 182:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 183:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 184:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 185:Src/stm32f4xx_it.c **** /******************************************************************************/
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /**
 188:Src/stm32f4xx_it.c **** * @brief This function handles DMA2 stream3 global interrupt.
 189:Src/stm32f4xx_it.c **** */
 190:Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
ARM GAS  /tmp/cclDjGcX.s 			page 8


 191:Src/stm32f4xx_it.c **** {
 228              		.loc 1 191 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 192:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 195:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 233              		.loc 1 195 0
 234 0000 0148     		ldr	r0, .L16
 235 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 236              	.LVL2:
 237              	.L17:
 238 0006 00BF     		.align	2
 239              	.L16:
 240 0008 00000000 		.word	hdma_spi1_tx
 241              		.cfi_endproc
 242              	.LFE135:
 244              		.text
 245              	.Letext0:
 246              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 247              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 248              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 249              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 250              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 251              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 252              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 253              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 254              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 255              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 256              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 257              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 258              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cclDjGcX.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cclDjGcX.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cclDjGcX.s:35     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:43     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cclDjGcX.s:58     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cclDjGcX.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cclDjGcX.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cclDjGcX.s:124    .text.SVC_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:132    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cclDjGcX.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:151    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cclDjGcX.s:162    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cclDjGcX.s:182    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cclDjGcX.s:190    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cclDjGcX.s:218    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
     /tmp/cclDjGcX.s:226    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
     /tmp/cclDjGcX.s:240    .text.DMA2_Stream3_IRQHandler:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_DMA_IRQHandler
hdma_spi1_tx
