ARM GAS  /tmp/ccmWNez6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB141:
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE141:
  36 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  37              		.align	1
  38              		.p2align 2,,3
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB127:
  47              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/ccmWNez6.s 			page 2


  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /******************************************************************************/
  46:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /**
  50:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f4xx_it.c **** */
  52:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f4xx_it.c **** {
  54:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** }
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /**
  63:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f4xx_it.c **** */
  65:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f4xx_it.c **** {
  48              		.loc 1 66 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccmWNez6.s 			page 3


  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE127:
  59 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.p2align 2,,3
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB128:
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c ****   while (1)
  71:Src/stm32f4xx_it.c ****   {
  72:Src/stm32f4xx_it.c ****   }
  73:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Src/stm32f4xx_it.c **** }
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c **** /**
  79:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  80:Src/stm32f4xx_it.c **** */
  81:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  82:Src/stm32f4xx_it.c **** {
  70              		.loc 1 82 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L5:
  77 0000 FEE7     		b	.L5
  78              		.cfi_endproc
  79              	.LFE128:
  81 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.p2align 2,,3
  84              		.global	BusFault_Handler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	BusFault_Handler:
  91              	.LFB129:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  86:Src/stm32f4xx_it.c ****   while (1)
  87:Src/stm32f4xx_it.c ****   {
ARM GAS  /tmp/ccmWNez6.s 			page 4


  88:Src/stm32f4xx_it.c ****   }
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  92:Src/stm32f4xx_it.c **** }
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c **** /**
  95:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  96:Src/stm32f4xx_it.c **** */
  97:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  98:Src/stm32f4xx_it.c **** {
  92              		.loc 1 98 0
  93              		.cfi_startproc
  94              		@ Volatile: function does not return.
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98              	.L7:
  99 0000 FEE7     		b	.L7
 100              		.cfi_endproc
 101              	.LFE129:
 103 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 104              		.align	1
 105              		.p2align 2,,3
 106              		.global	UsageFault_Handler
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	UsageFault_Handler:
 113              	.LFB130:
  99:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 102:Src/stm32f4xx_it.c ****   while (1)
 103:Src/stm32f4xx_it.c ****   {
 104:Src/stm32f4xx_it.c ****   }
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 108:Src/stm32f4xx_it.c **** }
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c **** /**
 111:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 112:Src/stm32f4xx_it.c **** */
 113:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 114:Src/stm32f4xx_it.c **** {
 114              		.loc 1 114 0
 115              		.cfi_startproc
 116              		@ Volatile: function does not return.
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.L9:
 121 0000 FEE7     		b	.L9
 122              		.cfi_endproc
 123              	.LFE130:
ARM GAS  /tmp/ccmWNez6.s 			page 5


 125 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 126              		.align	1
 127              		.p2align 2,,3
 128              		.global	SVC_Handler
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	SVC_Handler:
 135              	.LFB139:
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE139:
 144 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 145              		.align	1
 146              		.p2align 2,,3
 147              		.global	DebugMon_Handler
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	DebugMon_Handler:
 154              	.LFB137:
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE137:
 163 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 164              		.align	1
 165              		.p2align 2,,3
 166              		.global	PendSV_Handler
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv4-sp-d16
 172              	PendSV_Handler:
 173              	.LFB133:
 115:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 118:Src/stm32f4xx_it.c ****   while (1)
 119:Src/stm32f4xx_it.c ****   {
 120:Src/stm32f4xx_it.c ****   }
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
 127:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
ARM GAS  /tmp/ccmWNez6.s 			page 6


 128:Src/stm32f4xx_it.c **** */
 129:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 130:Src/stm32f4xx_it.c **** {
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 150:Src/stm32f4xx_it.c **** }
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 154:Src/stm32f4xx_it.c **** */
 155:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 174              		.loc 1 156 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE133:
 183 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 184              		.align	1
 185              		.p2align 2,,3
 186              		.global	SysTick_Handler
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	SysTick_Handler:
 193              	.LFB134:
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
ARM GAS  /tmp/ccmWNez6.s 			page 7


 167:Src/stm32f4xx_it.c **** */
 168:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 169:Src/stm32f4xx_it.c **** {
 194              		.loc 1 169 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		.loc 1 169 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI0:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   HAL_IncTick();
 204              		.loc 1 173 0
 205 0002 FFF7FEFF 		bl	HAL_IncTick
 206              	.LVL0:
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 207              		.loc 1 178 0
 208 0006 BDE80840 		pop	{r3, lr}
 209              	.LCFI1:
 210              		.cfi_restore 14
 211              		.cfi_restore 3
 212              		.cfi_def_cfa_offset 0
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 213              		.loc 1 174 0
 214 000a FFF7FEBF 		b	HAL_SYSTICK_IRQHandler
 215              	.LVL1:
 216              		.cfi_endproc
 217              	.LFE134:
 219 000e 00BF     		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 220              		.align	1
 221              		.p2align 2,,3
 222              		.global	DMA2_Stream3_IRQHandler
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	DMA2_Stream3_IRQHandler:
 229              	.LFB135:
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /******************************************************************************/
 181:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 182:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 183:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 184:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 185:Src/stm32f4xx_it.c **** /******************************************************************************/
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /**
 188:Src/stm32f4xx_it.c **** * @brief This function handles DMA2 stream3 global interrupt.
ARM GAS  /tmp/ccmWNez6.s 			page 8


 189:Src/stm32f4xx_it.c **** */
 190:Src/stm32f4xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 191:Src/stm32f4xx_it.c **** {
 230              		.loc 1 191 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 192:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 195:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 235              		.loc 1 195 0
 236 0000 0148     		ldr	r0, .L16
 237 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 238              	.LVL2:
 239              	.L17:
 240 0006 00BF     		.align	2
 241              	.L16:
 242 0008 00000000 		.word	hdma_spi1_tx
 243              		.cfi_endproc
 244              	.LFE135:
 246              		.text
 247              	.Letext0:
 248              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 249              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 250              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 251              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 252              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 253              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 254              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 255              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 256              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 257              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 258              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 259              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 260              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccmWNez6.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccmWNez6.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccmWNez6.s:37     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccmWNez6.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccmWNez6.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:90     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccmWNez6.s:104    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:112    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccmWNez6.s:126    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:134    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccmWNez6.s:145    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:153    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccmWNez6.s:164    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:172    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccmWNez6.s:184    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccmWNez6.s:192    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccmWNez6.s:220    .text.DMA2_Stream3_IRQHandler:0000000000000000 $t
     /tmp/ccmWNez6.s:228    .text.DMA2_Stream3_IRQHandler:0000000000000000 DMA2_Stream3_IRQHandler
     /tmp/ccmWNez6.s:242    .text.DMA2_Stream3_IRQHandler:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_DMA_IRQHandler
hdma_spi1_tx
