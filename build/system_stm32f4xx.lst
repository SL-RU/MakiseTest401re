ARM GAS  /tmp/ccnV47FC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemInit:
  26              	.LFB126:
  27              		.file 1 "Src/system_stm32f4xx.c"
   1:Src/system_stm32f4xx.c **** /**
   2:Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32f4xx.c ****   * @version V2.6.0
   6:Src/system_stm32f4xx.c ****   * @date    04-November-2016
   7:Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:Src/system_stm32f4xx.c ****   *
   9:Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
  10:Src/system_stm32f4xx.c ****   *   user application:
  11:Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  13:Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  14:Src/system_stm32f4xx.c ****   *
  15:Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  17:Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  18:Src/system_stm32f4xx.c ****   *                                     
  19:Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  21:Src/system_stm32f4xx.c ****   *                                 during program execution.
  22:Src/system_stm32f4xx.c ****   *
  23:Src/system_stm32f4xx.c ****   *
  24:Src/system_stm32f4xx.c ****   ******************************************************************************
  25:Src/system_stm32f4xx.c ****   * @attention
  26:Src/system_stm32f4xx.c ****   *
  27:Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  28:Src/system_stm32f4xx.c ****   *
  29:Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  30:Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  31:Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/ccnV47FC.s 			page 2


  32:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  33:Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  36:Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  38:Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  39:Src/system_stm32f4xx.c ****   *
  40:Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:Src/system_stm32f4xx.c ****   *
  51:Src/system_stm32f4xx.c ****   ******************************************************************************
  52:Src/system_stm32f4xx.c ****   */
  53:Src/system_stm32f4xx.c **** 
  54:Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  55:Src/system_stm32f4xx.c ****   * @{
  56:Src/system_stm32f4xx.c ****   */
  57:Src/system_stm32f4xx.c **** 
  58:Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  59:Src/system_stm32f4xx.c ****   * @{
  60:Src/system_stm32f4xx.c ****   */  
  61:Src/system_stm32f4xx.c ****   
  62:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  63:Src/system_stm32f4xx.c ****   * @{
  64:Src/system_stm32f4xx.c ****   */
  65:Src/system_stm32f4xx.c **** 
  66:Src/system_stm32f4xx.c **** 
  67:Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  68:Src/system_stm32f4xx.c **** 
  69:Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  70:Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  71:Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  72:Src/system_stm32f4xx.c **** 
  73:Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  74:Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  75:Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  76:Src/system_stm32f4xx.c **** 
  77:Src/system_stm32f4xx.c **** /**
  78:Src/system_stm32f4xx.c ****   * @}
  79:Src/system_stm32f4xx.c ****   */
  80:Src/system_stm32f4xx.c **** 
  81:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  82:Src/system_stm32f4xx.c ****   * @{
  83:Src/system_stm32f4xx.c ****   */
  84:Src/system_stm32f4xx.c **** 
  85:Src/system_stm32f4xx.c **** /**
  86:Src/system_stm32f4xx.c ****   * @}
  87:Src/system_stm32f4xx.c ****   */
  88:Src/system_stm32f4xx.c **** 
ARM GAS  /tmp/ccnV47FC.s 			page 3


  89:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  90:Src/system_stm32f4xx.c ****   * @{
  91:Src/system_stm32f4xx.c ****   */
  92:Src/system_stm32f4xx.c **** 
  93:Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  94:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  95:Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  96:Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  97:Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  98:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  99:Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
 100:Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
 101:Src/system_stm32f4xx.c ****  
 102:Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
 103:Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 104:Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 105:Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
 106:Src/system_stm32f4xx.c ****           STM32F479xx */
 107:Src/system_stm32f4xx.c **** 
 108:Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 109:Src/system_stm32f4xx.c ****      Internal SRAM. */
 110:Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 111:Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 112:Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 113:Src/system_stm32f4xx.c **** /******************************************************************************/
 114:Src/system_stm32f4xx.c **** 
 115:Src/system_stm32f4xx.c **** /**
 116:Src/system_stm32f4xx.c ****   * @}
 117:Src/system_stm32f4xx.c ****   */
 118:Src/system_stm32f4xx.c **** 
 119:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 120:Src/system_stm32f4xx.c ****   * @{
 121:Src/system_stm32f4xx.c ****   */
 122:Src/system_stm32f4xx.c **** 
 123:Src/system_stm32f4xx.c **** /**
 124:Src/system_stm32f4xx.c ****   * @}
 125:Src/system_stm32f4xx.c ****   */
 126:Src/system_stm32f4xx.c **** 
 127:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 128:Src/system_stm32f4xx.c ****   * @{
 129:Src/system_stm32f4xx.c ****   */
 130:Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 131:Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 134:Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 135:Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 136:Src/system_stm32f4xx.c ****                variable is updated automatically.
 137:Src/system_stm32f4xx.c ****   */
 138:Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 139:Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 140:Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 141:Src/system_stm32f4xx.c **** /**
 142:Src/system_stm32f4xx.c ****   * @}
 143:Src/system_stm32f4xx.c ****   */
 144:Src/system_stm32f4xx.c **** 
 145:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
ARM GAS  /tmp/ccnV47FC.s 			page 4


 146:Src/system_stm32f4xx.c ****   * @{
 147:Src/system_stm32f4xx.c ****   */
 148:Src/system_stm32f4xx.c **** 
 149:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 150:Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 151:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 152:Src/system_stm32f4xx.c **** 
 153:Src/system_stm32f4xx.c **** /**
 154:Src/system_stm32f4xx.c ****   * @}
 155:Src/system_stm32f4xx.c ****   */
 156:Src/system_stm32f4xx.c **** 
 157:Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 158:Src/system_stm32f4xx.c ****   * @{
 159:Src/system_stm32f4xx.c ****   */
 160:Src/system_stm32f4xx.c **** 
 161:Src/system_stm32f4xx.c **** /**
 162:Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 163:Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 164:Src/system_stm32f4xx.c ****   *         configuration.
 165:Src/system_stm32f4xx.c ****   * @param  None
 166:Src/system_stm32f4xx.c ****   * @retval None
 167:Src/system_stm32f4xx.c ****   */
 168:Src/system_stm32f4xx.c **** void SystemInit(void)
 169:Src/system_stm32f4xx.c **** {
  28              		.loc 1 169 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 170:Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 172 0
  34 0000 0F49     		ldr	r1, .L2
  35 0002 D1F88830 		ldr	r3, [r1, #136]
  36 0006 43F47003 		orr	r3, r3, #15728640
  37 000a C1F88830 		str	r3, [r1, #136]
 173:Src/system_stm32f4xx.c ****   #endif
 174:Src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 175:Src/system_stm32f4xx.c ****   /* Set HSION bit */
 176:Src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  38              		.loc 1 176 0
  39 000e 0D4B     		ldr	r3, .L2+4
  40 0010 1A68     		ldr	r2, [r3]
  41 0012 42F00102 		orr	r2, r2, #1
  42 0016 1A60     		str	r2, [r3]
 177:Src/system_stm32f4xx.c **** 
 178:Src/system_stm32f4xx.c ****   /* Reset CFGR register */
 179:Src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  43              		.loc 1 179 0
  44 0018 0020     		movs	r0, #0
  45 001a 9860     		str	r0, [r3, #8]
 180:Src/system_stm32f4xx.c **** 
 181:Src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 182:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  46              		.loc 1 182 0
  47 001c 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccnV47FC.s 			page 5


  48 001e 22F08472 		bic	r2, r2, #17301504
  49 0022 22F48032 		bic	r2, r2, #65536
  50 0026 1A60     		str	r2, [r3]
 183:Src/system_stm32f4xx.c **** 
 184:Src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 185:Src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  51              		.loc 1 185 0
  52 0028 074A     		ldr	r2, .L2+8
  53 002a 5A60     		str	r2, [r3, #4]
 186:Src/system_stm32f4xx.c **** 
 187:Src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 188:Src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  54              		.loc 1 188 0
  55 002c 1A68     		ldr	r2, [r3]
  56 002e 22F48022 		bic	r2, r2, #262144
  57 0032 1A60     		str	r2, [r3]
 189:Src/system_stm32f4xx.c **** 
 190:Src/system_stm32f4xx.c ****   /* Disable all interrupts */
 191:Src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
  58              		.loc 1 191 0
  59 0034 D860     		str	r0, [r3, #12]
 192:Src/system_stm32f4xx.c **** 
 193:Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 194:Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 195:Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 196:Src/system_stm32f4xx.c **** 
 197:Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 198:Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 199:Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 200:Src/system_stm32f4xx.c **** #else
 201:Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  60              		.loc 1 201 0
  61 0036 4FF00063 		mov	r3, #134217728
  62 003a 8B60     		str	r3, [r1, #8]
  63 003c 7047     		bx	lr
  64              	.L3:
  65 003e 00BF     		.align	2
  66              	.L2:
  67 0040 00ED00E0 		.word	-536810240
  68 0044 00380240 		.word	1073887232
  69 0048 10300024 		.word	603992080
  70              		.cfi_endproc
  71              	.LFE126:
  73              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  74              		.align	1
  75              		.global	SystemCoreClockUpdate
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu fpv4-sp-d16
  81              	SystemCoreClockUpdate:
  82              	.LFB127:
 202:Src/system_stm32f4xx.c **** #endif
 203:Src/system_stm32f4xx.c **** }
 204:Src/system_stm32f4xx.c **** 
 205:Src/system_stm32f4xx.c **** /**
 206:Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
ARM GAS  /tmp/ccnV47FC.s 			page 6


 207:Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 208:Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 209:Src/system_stm32f4xx.c ****   *         other parameters.
 210:Src/system_stm32f4xx.c ****   *           
 211:Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 212:Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 213:Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 214:Src/system_stm32f4xx.c ****   *     
 215:Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 216:Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 217:Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 218:Src/system_stm32f4xx.c ****   *             
 219:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 220:Src/system_stm32f4xx.c ****   *                                              
 221:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 222:Src/system_stm32f4xx.c ****   *                          
 223:Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 224:Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 225:Src/system_stm32f4xx.c ****   *         
 226:Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 227:Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 228:Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 229:Src/system_stm32f4xx.c ****   *    
 230:Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 231:Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 232:Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 233:Src/system_stm32f4xx.c ****   *              may have wrong result.
 234:Src/system_stm32f4xx.c ****   *                
 235:Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 236:Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 237:Src/system_stm32f4xx.c ****   *     
 238:Src/system_stm32f4xx.c ****   * @param  None
 239:Src/system_stm32f4xx.c ****   * @retval None
 240:Src/system_stm32f4xx.c ****   */
 241:Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 242:Src/system_stm32f4xx.c **** {
  83              		.loc 1 242 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL0:
 243:Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 244:Src/system_stm32f4xx.c ****   
 245:Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  89              		.loc 1 246 0
  90 0000 214B     		ldr	r3, .L14
  91 0002 9B68     		ldr	r3, [r3, #8]
  92              	.LVL1:
  93 0004 03F00C03 		and	r3, r3, #12
  94              	.LVL2:
 247:Src/system_stm32f4xx.c **** 
 248:Src/system_stm32f4xx.c ****   switch (tmp)
  95              		.loc 1 248 0
  96 0008 042B     		cmp	r3, #4
  97 000a 14D0     		beq	.L6
ARM GAS  /tmp/ccnV47FC.s 			page 7


  98 000c 082B     		cmp	r3, #8
  99 000e 16D0     		beq	.L7
 100 0010 1BB1     		cbz	r3, .L13
 249:Src/system_stm32f4xx.c ****   {
 250:Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 251:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 252:Src/system_stm32f4xx.c ****       break;
 253:Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 254:Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 255:Src/system_stm32f4xx.c ****       break;
 256:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 257:Src/system_stm32f4xx.c **** 
 258:Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 259:Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 260:Src/system_stm32f4xx.c ****          */    
 261:Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 262:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 263:Src/system_stm32f4xx.c ****       
 264:Src/system_stm32f4xx.c ****       if (pllsource != 0)
 265:Src/system_stm32f4xx.c ****       {
 266:Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 267:Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 268:Src/system_stm32f4xx.c ****       }
 269:Src/system_stm32f4xx.c ****       else
 270:Src/system_stm32f4xx.c ****       {
 271:Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 272:Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 273:Src/system_stm32f4xx.c ****       }
 274:Src/system_stm32f4xx.c **** 
 275:Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 276:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 277:Src/system_stm32f4xx.c ****       break;
 278:Src/system_stm32f4xx.c ****     default:
 279:Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 101              		.loc 1 279 0
 102 0012 1E4A     		ldr	r2, .L14+4
 103 0014 1E4B     		ldr	r3, .L14+8
 104              	.LVL3:
 105 0016 1A60     		str	r2, [r3]
 280:Src/system_stm32f4xx.c ****       break;
 106              		.loc 1 280 0
 107 0018 02E0     		b	.L9
 108              	.LVL4:
 109              	.L13:
 251:Src/system_stm32f4xx.c ****       break;
 110              		.loc 1 251 0
 111 001a 1C4A     		ldr	r2, .L14+4
 112 001c 1C4B     		ldr	r3, .L14+8
 113              	.LVL5:
 114 001e 1A60     		str	r2, [r3]
 115              	.LVL6:
 116              	.L9:
 281:Src/system_stm32f4xx.c ****   }
 282:Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 283:Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 284:Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 117              		.loc 1 284 0
ARM GAS  /tmp/ccnV47FC.s 			page 8


 118 0020 194B     		ldr	r3, .L14
 119 0022 9B68     		ldr	r3, [r3, #8]
 120              	.LVL7:
 285:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 286:Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 121              		.loc 1 286 0
 122 0024 1A4A     		ldr	r2, .L14+8
 284:Src/system_stm32f4xx.c ****   /* HCLK frequency */
 123              		.loc 1 284 0
 124 0026 C3F30313 		ubfx	r3, r3, #4, #4
 125              	.LVL8:
 126 002a 1A49     		ldr	r1, .L14+12
 127 002c C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 128              		.loc 1 286 0
 129 002e 1368     		ldr	r3, [r2]
 130 0030 CB40     		lsrs	r3, r3, r1
 131 0032 1360     		str	r3, [r2]
 132 0034 7047     		bx	lr
 133              	.LVL9:
 134              	.L6:
 254:Src/system_stm32f4xx.c ****       break;
 135              		.loc 1 254 0
 136 0036 184A     		ldr	r2, .L14+16
 137 0038 154B     		ldr	r3, .L14+8
 138              	.LVL10:
 139 003a 1A60     		str	r2, [r3]
 255:Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 140              		.loc 1 255 0
 141 003c F0E7     		b	.L9
 142              	.LVL11:
 143              	.L7:
 261:Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 144              		.loc 1 261 0
 145 003e 124B     		ldr	r3, .L14
 146              	.LVL12:
 147 0040 5968     		ldr	r1, [r3, #4]
 148              	.LVL13:
 262:Src/system_stm32f4xx.c ****       
 149              		.loc 1 262 0
 150 0042 5A68     		ldr	r2, [r3, #4]
 151 0044 02F03F02 		and	r2, r2, #63
 152              	.LVL14:
 264:Src/system_stm32f4xx.c ****       {
 153              		.loc 1 264 0
 154 0048 11F4800F 		tst	r1, #4194304
 155 004c 12D0     		beq	.L10
 267:Src/system_stm32f4xx.c ****       }
 156              		.loc 1 267 0
 157 004e 5968     		ldr	r1, [r3, #4]
 158              	.LVL15:
 159 0050 C1F38811 		ubfx	r1, r1, #6, #9
 160 0054 104B     		ldr	r3, .L14+16
 161 0056 B3FBF2F3 		udiv	r3, r3, r2
 162 005a 03FB01F3 		mul	r3, r3, r1
 163              	.LVL16:
 164              	.L11:
 275:Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
ARM GAS  /tmp/ccnV47FC.s 			page 9


 165              		.loc 1 275 0
 166 005e 0A4A     		ldr	r2, .L14
 167              	.LVL17:
 168 0060 5268     		ldr	r2, [r2, #4]
 169              	.LVL18:
 170 0062 C2F30142 		ubfx	r2, r2, #16, #2
 171              	.LVL19:
 172 0066 0132     		adds	r2, r2, #1
 173 0068 5200     		lsls	r2, r2, #1
 276:Src/system_stm32f4xx.c ****       break;
 174              		.loc 1 276 0
 175 006a B3FBF2F3 		udiv	r3, r3, r2
 176              	.LVL20:
 177 006e 084A     		ldr	r2, .L14+8
 178 0070 1360     		str	r3, [r2]
 277:Src/system_stm32f4xx.c ****     default:
 179              		.loc 1 277 0
 180 0072 D5E7     		b	.L9
 181              	.LVL21:
 182              	.L10:
 272:Src/system_stm32f4xx.c ****       }
 183              		.loc 1 272 0
 184 0074 044B     		ldr	r3, .L14
 185 0076 5968     		ldr	r1, [r3, #4]
 186              	.LVL22:
 187 0078 C1F38811 		ubfx	r1, r1, #6, #9
 188 007c 034B     		ldr	r3, .L14+4
 189 007e B3FBF2F3 		udiv	r3, r3, r2
 190 0082 03FB01F3 		mul	r3, r3, r1
 191              	.LVL23:
 192 0086 EAE7     		b	.L11
 193              	.L15:
 194              		.align	2
 195              	.L14:
 196 0088 00380240 		.word	1073887232
 197 008c 0024F400 		.word	16000000
 198 0090 00000000 		.word	.LANCHOR0
 199 0094 00000000 		.word	.LANCHOR1
 200 0098 00127A00 		.word	8000000
 201              		.cfi_endproc
 202              	.LFE127:
 204              		.global	APBPrescTable
 205              		.global	AHBPrescTable
 206              		.global	SystemCoreClock
 207              		.section	.data.SystemCoreClock,"aw",%progbits
 208              		.align	2
 209              		.set	.LANCHOR0,. + 0
 212              	SystemCoreClock:
 213 0000 0024F400 		.word	16000000
 214              		.section	.rodata.AHBPrescTable,"a",%progbits
 215              		.align	2
 216              		.set	.LANCHOR1,. + 0
 219              	AHBPrescTable:
 220 0000 00       		.byte	0
 221 0001 00       		.byte	0
 222 0002 00       		.byte	0
 223 0003 00       		.byte	0
ARM GAS  /tmp/ccnV47FC.s 			page 10


 224 0004 00       		.byte	0
 225 0005 00       		.byte	0
 226 0006 00       		.byte	0
 227 0007 00       		.byte	0
 228 0008 01       		.byte	1
 229 0009 02       		.byte	2
 230 000a 03       		.byte	3
 231 000b 04       		.byte	4
 232 000c 06       		.byte	6
 233 000d 07       		.byte	7
 234 000e 08       		.byte	8
 235 000f 09       		.byte	9
 236              		.section	.rodata.APBPrescTable,"a",%progbits
 237              		.align	2
 240              	APBPrescTable:
 241 0000 00       		.byte	0
 242 0001 00       		.byte	0
 243 0002 00       		.byte	0
 244 0003 00       		.byte	0
 245 0004 01       		.byte	1
 246 0005 02       		.byte	2
 247 0006 03       		.byte	3
 248 0007 04       		.byte	4
 249              		.text
 250              	.Letext0:
 251              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 252              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 253              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 254              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 255              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 256              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 257              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 258              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 259              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/ccnV47FC.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccnV47FC.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccnV47FC.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccnV47FC.s:67     .text.SystemInit:0000000000000040 $d
     /tmp/ccnV47FC.s:74     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccnV47FC.s:81     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccnV47FC.s:196    .text.SystemCoreClockUpdate:0000000000000088 $d
     /tmp/ccnV47FC.s:240    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccnV47FC.s:219    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccnV47FC.s:212    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccnV47FC.s:208    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccnV47FC.s:215    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccnV47FC.s:237    .rodata.APBPrescTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
